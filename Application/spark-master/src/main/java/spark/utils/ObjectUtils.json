{"!":"com.github.javaparser.ast.CompilationUnit","range":{"beginLine":1,"beginColumn":1,"endLine":44,"endColumn":2},"tokenRange":{"beginToken":{"kind":9,"text":"/*\n * Copyright 2002-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */"},"endToken":{"kind":0,"text":""}},"imports":[],"packageDeclaration":{"!":"com.github.javaparser.ast.PackageDeclaration","range":{"beginLine":17,"beginColumn":1,"endLine":17,"endColumn":20},"tokenRange":{"beginToken":{"kind":45,"text":"package"},"endToken":{"kind":106,"text":";"}},"annotations":[],"name":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":17,"beginColumn":9,"endLine":17,"endColumn":19},"tokenRange":{"beginToken":{"kind":97,"text":"spark"},"endToken":{"kind":97,"text":"utils"}},"identifier":"utils","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":17,"beginColumn":9,"endLine":17,"endColumn":13},"tokenRange":{"beginToken":{"kind":97,"text":"spark"},"endToken":{"kind":97,"text":"spark"}},"identifier":"spark"}}},"types":[{"!":"com.github.javaparser.ast.body.ClassOrInterfaceDeclaration","range":{"beginLine":31,"beginColumn":1,"endLine":44,"endColumn":1},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":103,"text":"}"}},"extendedTypes":[],"implementedTypes":[],"isInterface":"false","permittedTypes":[],"typeParameters":[],"members":[{"!":"com.github.javaparser.ast.body.MethodDeclaration","range":{"beginLine":40,"beginColumn":5,"endLine":42,"endColumn":5},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":40,"beginColumn":51,"endLine":42,"endColumn":5},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":41,"beginColumn":9,"endLine":41,"endColumn":52},"tokenRange":{"beginToken":{"kind":51,"text":"return"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.EnclosedExpr","range":{"beginLine":41,"beginColumn":16,"endLine":41,"endColumn":51},"tokenRange":{"beginToken":{"kind":100,"text":"("},"endToken":{"kind":101,"text":")"}},"inner":{"!":"com.github.javaparser.ast.expr.BinaryExpr","range":{"beginLine":41,"beginColumn":17,"endLine":41,"endColumn":50},"tokenRange":{"beginToken":{"kind":97,"text":"array"},"endToken":{"kind":80,"text":"0"}},"left":{"!":"com.github.javaparser.ast.expr.BinaryExpr","range":{"beginLine":41,"beginColumn":17,"endLine":41,"endColumn":29},"tokenRange":{"beginToken":{"kind":97,"text":"array"},"endToken":{"kind":44,"text":"null"}},"left":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":41,"beginColumn":17,"endLine":41,"endColumn":21},"tokenRange":{"beginToken":{"kind":97,"text":"array"},"endToken":{"kind":97,"text":"array"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":41,"beginColumn":17,"endLine":41,"endColumn":21},"tokenRange":{"beginToken":{"kind":97,"text":"array"},"endToken":{"kind":97,"text":"array"}},"identifier":"array"}},"operator":"EQUALS","right":{"!":"com.github.javaparser.ast.expr.NullLiteralExpr","range":{"beginLine":41,"beginColumn":26,"endLine":41,"endColumn":29},"tokenRange":{"beginToken":{"kind":44,"text":"null"},"endToken":{"kind":44,"text":"null"}}}},"operator":"OR","right":{"!":"com.github.javaparser.ast.expr.BinaryExpr","range":{"beginLine":41,"beginColumn":34,"endLine":41,"endColumn":50},"tokenRange":{"beginToken":{"kind":97,"text":"array"},"endToken":{"kind":80,"text":"0"}},"left":{"!":"com.github.javaparser.ast.expr.FieldAccessExpr","range":{"beginLine":41,"beginColumn":34,"endLine":41,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"array"},"endToken":{"kind":97,"text":"length"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":41,"beginColumn":40,"endLine":41,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"length"},"endToken":{"kind":97,"text":"length"}},"identifier":"length"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":41,"beginColumn":34,"endLine":41,"endColumn":38},"tokenRange":{"beginToken":{"kind":97,"text":"array"},"endToken":{"kind":97,"text":"array"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":41,"beginColumn":34,"endLine":41,"endColumn":38},"tokenRange":{"beginToken":{"kind":97,"text":"array"},"endToken":{"kind":97,"text":"array"}},"identifier":"array"}}},"operator":"EQUALS","right":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":41,"beginColumn":50,"endLine":41,"endColumn":50},"tokenRange":{"beginToken":{"kind":80,"text":"0"},"endToken":{"kind":80,"text":"0"}},"value":"0"}}}}}]},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":40,"beginColumn":19,"endLine":40,"endColumn":25},"tokenRange":{"beginToken":{"kind":13,"text":"boolean"},"endToken":{"kind":13,"text":"boolean"}},"type":"BOOLEAN","annotations":[]},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":40,"beginColumn":5,"endLine":40,"endColumn":10},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":49,"text":"public"}},"keyword":"PUBLIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":40,"beginColumn":12,"endLine":40,"endColumn":17},"tokenRange":{"beginToken":{"kind":54,"text":"static"},"endToken":{"kind":54,"text":"static"}},"keyword":"STATIC"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":40,"beginColumn":27,"endLine":40,"endColumn":33},"tokenRange":{"beginToken":{"kind":97,"text":"isEmpty"},"endToken":{"kind":97,"text":"isEmpty"}},"identifier":"isEmpty"},"parameters":[{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":40,"beginColumn":35,"endLine":40,"endColumn":48},"tokenRange":{"beginToken":{"kind":97,"text":"Object"},"endToken":{"kind":97,"text":"array"}},"annotations":[],"isVarArgs":"false","modifiers":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":40,"beginColumn":44,"endLine":40,"endColumn":48},"tokenRange":{"beginToken":{"kind":97,"text":"array"},"endToken":{"kind":97,"text":"array"}},"identifier":"array"},"type":{"!":"com.github.javaparser.ast.type.ArrayType","range":{"beginLine":40,"beginColumn":35,"endLine":40,"endColumn":42},"tokenRange":{"beginToken":{"kind":97,"text":"Object"},"endToken":{"kind":105,"text":"]"}},"componentType":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":40,"beginColumn":35,"endLine":40,"endColumn":40},"tokenRange":{"beginToken":{"kind":97,"text":"Object"},"endToken":{"kind":97,"text":"Object"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":40,"beginColumn":35,"endLine":40,"endColumn":40},"tokenRange":{"beginToken":{"kind":97,"text":"Object"},"endToken":{"kind":97,"text":"Object"}},"identifier":"Object"},"annotations":[]},"origin":"TYPE","annotations":[]},"varArgsAnnotations":[]}],"thrownExceptions":[],"typeParameters":[],"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":33,"beginColumn":5,"endLine":39,"endColumn":7},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n     * Determine whether the given array is empty:\n     * i.e. {@code null} or of zero length.\n     *\n     * @param array the array to check\n     * @return if empty\n     */"},"endToken":{"kind":8,"text":"/**\n     * Determine whether the given array is empty:\n     * i.e. {@code null} or of zero length.\n     *\n     * @param array the array to check\n     * @return if empty\n     */"}},"content":"\n     * Determine whether the given array is empty:\n     * i.e. {@code null} or of zero length.\n     *\n     * @param array the array to check\n     * @return if empty\n     "}}],"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":31,"beginColumn":1,"endLine":31,"endColumn":6},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":49,"text":"public"}},"keyword":"PUBLIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":31,"beginColumn":8,"endLine":31,"endColumn":15},"tokenRange":{"beginToken":{"kind":11,"text":"abstract"},"endToken":{"kind":11,"text":"abstract"}},"keyword":"ABSTRACT"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":31,"beginColumn":23,"endLine":31,"endColumn":33},"tokenRange":{"beginToken":{"kind":97,"text":"ObjectUtils"},"endToken":{"kind":97,"text":"ObjectUtils"}},"identifier":"ObjectUtils"},"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":19,"beginColumn":1,"endLine":30,"endColumn":3},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n * Miscellaneous object utility methods.\n * Mainly for internal use within the framework.\n * <p>Thanks to Alex Ruiz for contributing several enhancements to this class!\n *\n * @author Juergen Hoeller\n * @author Keith Donald\n * @author Rod Johnson\n * @author Rob Harrop\n * @author Chris Beams\n *         Code copied from Spring source. Modifications made (mostly removal of methods) by Per Wendel.\n */"},"endToken":{"kind":8,"text":"/**\n * Miscellaneous object utility methods.\n * Mainly for internal use within the framework.\n * <p>Thanks to Alex Ruiz for contributing several enhancements to this class!\n *\n * @author Juergen Hoeller\n * @author Keith Donald\n * @author Rod Johnson\n * @author Rob Harrop\n * @author Chris Beams\n *         Code copied from Spring source. Modifications made (mostly removal of methods) by Per Wendel.\n */"}},"content":"\n * Miscellaneous object utility methods.\n * Mainly for internal use within the framework.\n * <p>Thanks to Alex Ruiz for contributing several enhancements to this class!\n *\n * @author Juergen Hoeller\n * @author Keith Donald\n * @author Rod Johnson\n * @author Rob Harrop\n * @author Chris Beams\n *         Code copied from Spring source. Modifications made (mostly removal of methods) by Per Wendel.\n "}}],"comment":{"!":"com.github.javaparser.ast.comments.BlockComment","range":{"beginLine":1,"beginColumn":1,"endLine":15,"endColumn":3},"tokenRange":{"beginToken":{"kind":9,"text":"/*\n * Copyright 2002-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */"},"endToken":{"kind":9,"text":"/*\n * Copyright 2002-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */"}},"content":"\n * Copyright 2002-2013 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n "}}