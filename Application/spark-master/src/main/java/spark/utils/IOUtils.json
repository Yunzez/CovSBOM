{"!":"com.github.javaparser.ast.CompilationUnit","range":{"beginLine":1,"beginColumn":1,"endLine":268,"endColumn":2},"tokenRange":{"beginToken":{"kind":9,"text":"/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */"},"endToken":{"kind":0,"text":""}},"imports":[{"!":"com.github.javaparser.ast.ImportDeclaration","range":{"beginLine":19,"beginColumn":1,"endLine":19,"endColumn":37},"tokenRange":{"beginToken":{"kind":36,"text":"import"},"endToken":{"kind":106,"text":";"}},"isAsterisk":"false","isStatic":"false","name":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":19,"beginColumn":8,"endLine":19,"endColumn":36},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"ByteArrayOutputStream"}},"identifier":"ByteArrayOutputStream","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":19,"beginColumn":8,"endLine":19,"endColumn":14},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"io"}},"identifier":"io","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":19,"beginColumn":8,"endLine":19,"endColumn":11},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"java"}},"identifier":"java"}}}},{"!":"com.github.javaparser.ast.ImportDeclaration","range":{"beginLine":20,"beginColumn":1,"endLine":20,"endColumn":27},"tokenRange":{"beginToken":{"kind":36,"text":"import"},"endToken":{"kind":106,"text":";"}},"isAsterisk":"false","isStatic":"false","name":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":20,"beginColumn":8,"endLine":20,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"IOException"}},"identifier":"IOException","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":20,"beginColumn":8,"endLine":20,"endColumn":14},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"io"}},"identifier":"io","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":20,"beginColumn":8,"endLine":20,"endColumn":11},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"java"}},"identifier":"java"}}}},{"!":"com.github.javaparser.ast.ImportDeclaration","range":{"beginLine":21,"beginColumn":1,"endLine":21,"endColumn":27},"tokenRange":{"beginToken":{"kind":36,"text":"import"},"endToken":{"kind":106,"text":";"}},"isAsterisk":"false","isStatic":"false","name":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":21,"beginColumn":8,"endLine":21,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"InputStream"}},"identifier":"InputStream","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":21,"beginColumn":8,"endLine":21,"endColumn":14},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"io"}},"identifier":"io","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":21,"beginColumn":8,"endLine":21,"endColumn":11},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"java"}},"identifier":"java"}}}},{"!":"com.github.javaparser.ast.ImportDeclaration","range":{"beginLine":22,"beginColumn":1,"endLine":22,"endColumn":33},"tokenRange":{"beginToken":{"kind":36,"text":"import"},"endToken":{"kind":106,"text":";"}},"isAsterisk":"false","isStatic":"false","name":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":22,"beginColumn":8,"endLine":22,"endColumn":32},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"InputStreamReader"}},"identifier":"InputStreamReader","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":22,"beginColumn":8,"endLine":22,"endColumn":14},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"io"}},"identifier":"io","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":22,"beginColumn":8,"endLine":22,"endColumn":11},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"java"}},"identifier":"java"}}}},{"!":"com.github.javaparser.ast.ImportDeclaration","range":{"beginLine":23,"beginColumn":1,"endLine":23,"endColumn":28},"tokenRange":{"beginToken":{"kind":36,"text":"import"},"endToken":{"kind":106,"text":";"}},"isAsterisk":"false","isStatic":"false","name":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":23,"beginColumn":8,"endLine":23,"endColumn":27},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"OutputStream"}},"identifier":"OutputStream","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":23,"beginColumn":8,"endLine":23,"endColumn":14},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"io"}},"identifier":"io","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":23,"beginColumn":8,"endLine":23,"endColumn":11},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"java"}},"identifier":"java"}}}},{"!":"com.github.javaparser.ast.ImportDeclaration","range":{"beginLine":24,"beginColumn":1,"endLine":24,"endColumn":27},"tokenRange":{"beginToken":{"kind":36,"text":"import"},"endToken":{"kind":106,"text":";"}},"isAsterisk":"false","isStatic":"false","name":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":24,"beginColumn":8,"endLine":24,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"PrintWriter"}},"identifier":"PrintWriter","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":24,"beginColumn":8,"endLine":24,"endColumn":14},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"io"}},"identifier":"io","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":24,"beginColumn":8,"endLine":24,"endColumn":11},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"java"}},"identifier":"java"}}}},{"!":"com.github.javaparser.ast.ImportDeclaration","range":{"beginLine":25,"beginColumn":1,"endLine":25,"endColumn":22},"tokenRange":{"beginToken":{"kind":36,"text":"import"},"endToken":{"kind":106,"text":";"}},"isAsterisk":"false","isStatic":"false","name":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":25,"beginColumn":8,"endLine":25,"endColumn":21},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"Reader"}},"identifier":"Reader","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":25,"beginColumn":8,"endLine":25,"endColumn":14},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"io"}},"identifier":"io","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":25,"beginColumn":8,"endLine":25,"endColumn":11},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"java"}},"identifier":"java"}}}},{"!":"com.github.javaparser.ast.ImportDeclaration","range":{"beginLine":26,"beginColumn":1,"endLine":26,"endColumn":28},"tokenRange":{"beginToken":{"kind":36,"text":"import"},"endToken":{"kind":106,"text":";"}},"isAsterisk":"false","isStatic":"false","name":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":26,"beginColumn":8,"endLine":26,"endColumn":27},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"StringWriter"}},"identifier":"StringWriter","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":26,"beginColumn":8,"endLine":26,"endColumn":14},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"io"}},"identifier":"io","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":26,"beginColumn":8,"endLine":26,"endColumn":11},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"java"}},"identifier":"java"}}}},{"!":"com.github.javaparser.ast.ImportDeclaration","range":{"beginLine":27,"beginColumn":1,"endLine":27,"endColumn":22},"tokenRange":{"beginToken":{"kind":36,"text":"import"},"endToken":{"kind":106,"text":";"}},"isAsterisk":"false","isStatic":"false","name":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":27,"beginColumn":8,"endLine":27,"endColumn":21},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"Writer"}},"identifier":"Writer","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":27,"beginColumn":8,"endLine":27,"endColumn":14},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"io"}},"identifier":"io","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":27,"beginColumn":8,"endLine":27,"endColumn":11},"tokenRange":{"beginToken":{"kind":97,"text":"java"},"endToken":{"kind":97,"text":"java"}},"identifier":"java"}}}}],"packageDeclaration":{"!":"com.github.javaparser.ast.PackageDeclaration","range":{"beginLine":17,"beginColumn":1,"endLine":17,"endColumn":20},"tokenRange":{"beginToken":{"kind":45,"text":"package"},"endToken":{"kind":106,"text":";"}},"annotations":[],"name":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":17,"beginColumn":9,"endLine":17,"endColumn":19},"tokenRange":{"beginToken":{"kind":97,"text":"spark"},"endToken":{"kind":97,"text":"utils"}},"identifier":"utils","qualifier":{"!":"com.github.javaparser.ast.expr.Name","range":{"beginLine":17,"beginColumn":9,"endLine":17,"endColumn":13},"tokenRange":{"beginToken":{"kind":97,"text":"spark"},"endToken":{"kind":97,"text":"spark"}},"identifier":"spark"}}},"types":[{"!":"com.github.javaparser.ast.body.ClassOrInterfaceDeclaration","range":{"beginLine":72,"beginColumn":1,"endLine":268,"endColumn":1},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":103,"text":"}"}},"extendedTypes":[],"implementedTypes":[],"isInterface":"false","permittedTypes":[],"typeParameters":[],"members":[{"!":"com.github.javaparser.ast.body.FieldDeclaration","range":{"beginLine":77,"beginColumn":5,"endLine":77,"endColumn":46},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":106,"text":";"}},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":77,"beginColumn":5,"endLine":77,"endColumn":10},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":49,"text":"public"}},"keyword":"PUBLIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":77,"beginColumn":12,"endLine":77,"endColumn":17},"tokenRange":{"beginToken":{"kind":54,"text":"static"},"endToken":{"kind":54,"text":"static"}},"keyword":"STATIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":77,"beginColumn":19,"endLine":77,"endColumn":23},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":29,"text":"final"}},"keyword":"FINAL"}],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":77,"beginColumn":32,"endLine":77,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"LINE_SEPARATOR"},"endToken":{"kind":97,"text":"LINE_SEPARATOR"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":77,"beginColumn":32,"endLine":77,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"LINE_SEPARATOR"},"endToken":{"kind":97,"text":"LINE_SEPARATOR"}},"identifier":"LINE_SEPARATOR"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":77,"beginColumn":25,"endLine":77,"endColumn":30},"tokenRange":{"beginToken":{"kind":97,"text":"String"},"endToken":{"kind":97,"text":"String"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":77,"beginColumn":25,"endLine":77,"endColumn":30},"tokenRange":{"beginToken":{"kind":97,"text":"String"},"endToken":{"kind":97,"text":"String"}},"identifier":"String"},"annotations":[]}}],"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":74,"beginColumn":5,"endLine":76,"endColumn":7},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n     * The system line separator string.\n     */"},"endToken":{"kind":8,"text":"/**\n     * The system line separator string.\n     */"}},"content":"\n     * The system line separator string.\n     "}},{"!":"com.github.javaparser.ast.body.InitializerDeclaration","range":{"beginLine":79,"beginColumn":5,"endLine":85,"endColumn":5},"tokenRange":{"beginToken":{"kind":54,"text":"static"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":79,"beginColumn":12,"endLine":85,"endColumn":5},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":81,"beginColumn":9,"endLine":81,"endColumn":47},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":81,"beginColumn":9,"endLine":81,"endColumn":46},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":101,"text":")"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":81,"beginColumn":22,"endLine":81,"endColumn":46},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":101,"text":")"}},"initializer":{"!":"com.github.javaparser.ast.expr.ObjectCreationExpr","range":{"beginLine":81,"beginColumn":28,"endLine":81,"endColumn":46},"tokenRange":{"beginToken":{"kind":42,"text":"new"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":81,"beginColumn":45,"endLine":81,"endColumn":45},"tokenRange":{"beginToken":{"kind":80,"text":"4"},"endToken":{"kind":80,"text":"4"}},"value":"4"}],"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":81,"beginColumn":32,"endLine":81,"endColumn":43},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":97,"text":"StringWriter"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":81,"beginColumn":32,"endLine":81,"endColumn":43},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":97,"text":"StringWriter"}},"identifier":"StringWriter"},"annotations":[]}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":81,"beginColumn":22,"endLine":81,"endColumn":24},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"identifier":"buf"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":81,"beginColumn":9,"endLine":81,"endColumn":20},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":97,"text":"StringWriter"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":81,"beginColumn":9,"endLine":81,"endColumn":20},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":97,"text":"StringWriter"}},"identifier":"StringWriter"},"annotations":[]}}]},"comment":{"!":"com.github.javaparser.ast.comments.LineComment","range":{"beginLine":81,"beginColumn":49,"endLine":81,"endColumn":58},"tokenRange":{"beginToken":{"kind":5,"text":"// NOSONAR"},"endToken":{"kind":5,"text":"// NOSONAR"}},"content":" NOSONAR"}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":82,"beginColumn":9,"endLine":82,"endColumn":47},"tokenRange":{"beginToken":{"kind":97,"text":"PrintWriter"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":82,"beginColumn":9,"endLine":82,"endColumn":46},"tokenRange":{"beginToken":{"kind":97,"text":"PrintWriter"},"endToken":{"kind":101,"text":")"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":82,"beginColumn":21,"endLine":82,"endColumn":46},"tokenRange":{"beginToken":{"kind":97,"text":"out"},"endToken":{"kind":101,"text":")"}},"initializer":{"!":"com.github.javaparser.ast.expr.ObjectCreationExpr","range":{"beginLine":82,"beginColumn":27,"endLine":82,"endColumn":46},"tokenRange":{"beginToken":{"kind":42,"text":"new"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":82,"beginColumn":43,"endLine":82,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":82,"beginColumn":43,"endLine":82,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"identifier":"buf"}}],"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":82,"beginColumn":31,"endLine":82,"endColumn":41},"tokenRange":{"beginToken":{"kind":97,"text":"PrintWriter"},"endToken":{"kind":97,"text":"PrintWriter"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":82,"beginColumn":31,"endLine":82,"endColumn":41},"tokenRange":{"beginToken":{"kind":97,"text":"PrintWriter"},"endToken":{"kind":97,"text":"PrintWriter"}},"identifier":"PrintWriter"},"annotations":[]}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":82,"beginColumn":21,"endLine":82,"endColumn":23},"tokenRange":{"beginToken":{"kind":97,"text":"out"},"endToken":{"kind":97,"text":"out"}},"identifier":"out"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":82,"beginColumn":9,"endLine":82,"endColumn":19},"tokenRange":{"beginToken":{"kind":97,"text":"PrintWriter"},"endToken":{"kind":97,"text":"PrintWriter"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":82,"beginColumn":9,"endLine":82,"endColumn":19},"tokenRange":{"beginToken":{"kind":97,"text":"PrintWriter"},"endToken":{"kind":97,"text":"PrintWriter"}},"identifier":"PrintWriter"},"annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":83,"beginColumn":9,"endLine":83,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"out"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":83,"beginColumn":9,"endLine":83,"endColumn":21},"tokenRange":{"beginToken":{"kind":97,"text":"out"},"endToken":{"kind":101,"text":")"}},"arguments":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":83,"beginColumn":13,"endLine":83,"endColumn":19},"tokenRange":{"beginToken":{"kind":97,"text":"println"},"endToken":{"kind":97,"text":"println"}},"identifier":"println"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":83,"beginColumn":9,"endLine":83,"endColumn":11},"tokenRange":{"beginToken":{"kind":97,"text":"out"},"endToken":{"kind":97,"text":"out"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":83,"beginColumn":9,"endLine":83,"endColumn":11},"tokenRange":{"beginToken":{"kind":97,"text":"out"},"endToken":{"kind":97,"text":"out"}},"identifier":"out"}}}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":84,"beginColumn":9,"endLine":84,"endColumn":40},"tokenRange":{"beginToken":{"kind":97,"text":"LINE_SEPARATOR"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.AssignExpr","range":{"beginLine":84,"beginColumn":9,"endLine":84,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"LINE_SEPARATOR"},"endToken":{"kind":101,"text":")"}},"operator":"ASSIGN","target":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":84,"beginColumn":9,"endLine":84,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"LINE_SEPARATOR"},"endToken":{"kind":97,"text":"LINE_SEPARATOR"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":84,"beginColumn":9,"endLine":84,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"LINE_SEPARATOR"},"endToken":{"kind":97,"text":"LINE_SEPARATOR"}},"identifier":"LINE_SEPARATOR"}},"value":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":84,"beginColumn":26,"endLine":84,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":101,"text":")"}},"arguments":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":84,"beginColumn":30,"endLine":84,"endColumn":37},"tokenRange":{"beginToken":{"kind":97,"text":"toString"},"endToken":{"kind":97,"text":"toString"}},"identifier":"toString"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":84,"beginColumn":26,"endLine":84,"endColumn":28},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":84,"beginColumn":26,"endLine":84,"endColumn":28},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"identifier":"buf"}}}}}]},"isStatic":"true","annotations":[]},{"!":"com.github.javaparser.ast.body.FieldDeclaration","range":{"beginLine":90,"beginColumn":5,"endLine":90,"endColumn":60},"tokenRange":{"beginToken":{"kind":47,"text":"private"},"endToken":{"kind":106,"text":";"}},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":90,"beginColumn":5,"endLine":90,"endColumn":11},"tokenRange":{"beginToken":{"kind":47,"text":"private"},"endToken":{"kind":47,"text":"private"}},"keyword":"PRIVATE"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":90,"beginColumn":13,"endLine":90,"endColumn":18},"tokenRange":{"beginToken":{"kind":54,"text":"static"},"endToken":{"kind":54,"text":"static"}},"keyword":"STATIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":90,"beginColumn":20,"endLine":90,"endColumn":24},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":29,"text":"final"}},"keyword":"FINAL"}],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":90,"beginColumn":30,"endLine":90,"endColumn":59},"tokenRange":{"beginToken":{"kind":97,"text":"DEFAULT_BUFFER_SIZE"},"endToken":{"kind":80,"text":"4"}},"initializer":{"!":"com.github.javaparser.ast.expr.BinaryExpr","range":{"beginLine":90,"beginColumn":52,"endLine":90,"endColumn":59},"tokenRange":{"beginToken":{"kind":80,"text":"1024"},"endToken":{"kind":80,"text":"4"}},"left":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":90,"beginColumn":52,"endLine":90,"endColumn":55},"tokenRange":{"beginToken":{"kind":80,"text":"1024"},"endToken":{"kind":80,"text":"1024"}},"value":"1024"},"operator":"MULTIPLY","right":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":90,"beginColumn":59,"endLine":90,"endColumn":59},"tokenRange":{"beginToken":{"kind":80,"text":"4"},"endToken":{"kind":80,"text":"4"}},"value":"4"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":90,"beginColumn":30,"endLine":90,"endColumn":48},"tokenRange":{"beginToken":{"kind":97,"text":"DEFAULT_BUFFER_SIZE"},"endToken":{"kind":97,"text":"DEFAULT_BUFFER_SIZE"}},"identifier":"DEFAULT_BUFFER_SIZE"},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":90,"beginColumn":26,"endLine":90,"endColumn":28},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":38,"text":"int"}},"type":"INT","annotations":[]}}],"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":87,"beginColumn":5,"endLine":89,"endColumn":7},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n     * The default buffer size to use.\n     */"},"endToken":{"kind":8,"text":"/**\n     * The default buffer size to use.\n     */"}},"content":"\n     * The default buffer size to use.\n     "}},{"!":"com.github.javaparser.ast.body.ConstructorDeclaration","range":{"beginLine":92,"beginColumn":5,"endLine":93,"endColumn":5},"tokenRange":{"beginToken":{"kind":47,"text":"private"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":92,"beginColumn":23,"endLine":93,"endColumn":5},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[]},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":92,"beginColumn":5,"endLine":92,"endColumn":11},"tokenRange":{"beginToken":{"kind":47,"text":"private"},"endToken":{"kind":47,"text":"private"}},"keyword":"PRIVATE"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":92,"beginColumn":13,"endLine":92,"endColumn":19},"tokenRange":{"beginToken":{"kind":97,"text":"IOUtils"},"endToken":{"kind":97,"text":"IOUtils"}},"identifier":"IOUtils"},"parameters":[],"thrownExceptions":[],"typeParameters":[],"annotations":[]},{"!":"com.github.javaparser.ast.body.MethodDeclaration","range":{"beginLine":110,"beginColumn":5,"endLine":114,"endColumn":5},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":110,"beginColumn":73,"endLine":114,"endColumn":5},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":111,"beginColumn":9,"endLine":111,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":111,"beginColumn":9,"endLine":111,"endColumn":44},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":101,"text":")"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":111,"beginColumn":22,"endLine":111,"endColumn":44},"tokenRange":{"beginToken":{"kind":97,"text":"sw"},"endToken":{"kind":101,"text":")"}},"initializer":{"!":"com.github.javaparser.ast.expr.ObjectCreationExpr","range":{"beginLine":111,"beginColumn":27,"endLine":111,"endColumn":44},"tokenRange":{"beginToken":{"kind":42,"text":"new"},"endToken":{"kind":101,"text":")"}},"arguments":[],"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":111,"beginColumn":31,"endLine":111,"endColumn":42},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":97,"text":"StringWriter"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":111,"beginColumn":31,"endLine":111,"endColumn":42},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":97,"text":"StringWriter"}},"identifier":"StringWriter"},"annotations":[]}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":111,"beginColumn":22,"endLine":111,"endColumn":23},"tokenRange":{"beginToken":{"kind":97,"text":"sw"},"endToken":{"kind":97,"text":"sw"}},"identifier":"sw"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":111,"beginColumn":9,"endLine":111,"endColumn":20},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":97,"text":"StringWriter"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":111,"beginColumn":9,"endLine":111,"endColumn":20},"tokenRange":{"beginToken":{"kind":97,"text":"StringWriter"},"endToken":{"kind":97,"text":"StringWriter"}},"identifier":"StringWriter"},"annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":112,"beginColumn":9,"endLine":112,"endColumn":24},"tokenRange":{"beginToken":{"kind":97,"text":"copy"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":112,"beginColumn":9,"endLine":112,"endColumn":23},"tokenRange":{"beginToken":{"kind":97,"text":"copy"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":112,"beginColumn":14,"endLine":112,"endColumn":18},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":112,"beginColumn":14,"endLine":112,"endColumn":18},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"}},{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":112,"beginColumn":21,"endLine":112,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"sw"},"endToken":{"kind":97,"text":"sw"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":112,"beginColumn":21,"endLine":112,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"sw"},"endToken":{"kind":97,"text":"sw"}},"identifier":"sw"}}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":112,"beginColumn":9,"endLine":112,"endColumn":12},"tokenRange":{"beginToken":{"kind":97,"text":"copy"},"endToken":{"kind":97,"text":"copy"}},"identifier":"copy"}}},{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":113,"beginColumn":9,"endLine":113,"endColumn":29},"tokenRange":{"beginToken":{"kind":51,"text":"return"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":113,"beginColumn":16,"endLine":113,"endColumn":28},"tokenRange":{"beginToken":{"kind":97,"text":"sw"},"endToken":{"kind":101,"text":")"}},"arguments":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":113,"beginColumn":19,"endLine":113,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"toString"},"endToken":{"kind":97,"text":"toString"}},"identifier":"toString"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":113,"beginColumn":16,"endLine":113,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"sw"},"endToken":{"kind":97,"text":"sw"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":113,"beginColumn":16,"endLine":113,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"sw"},"endToken":{"kind":97,"text":"sw"}},"identifier":"sw"}}}}]},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":110,"beginColumn":19,"endLine":110,"endColumn":24},"tokenRange":{"beginToken":{"kind":97,"text":"String"},"endToken":{"kind":97,"text":"String"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":110,"beginColumn":19,"endLine":110,"endColumn":24},"tokenRange":{"beginToken":{"kind":97,"text":"String"},"endToken":{"kind":97,"text":"String"}},"identifier":"String"},"annotations":[]},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":110,"beginColumn":5,"endLine":110,"endColumn":10},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":49,"text":"public"}},"keyword":"PUBLIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":110,"beginColumn":12,"endLine":110,"endColumn":17},"tokenRange":{"beginToken":{"kind":54,"text":"static"},"endToken":{"kind":54,"text":"static"}},"keyword":"STATIC"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":110,"beginColumn":26,"endLine":110,"endColumn":33},"tokenRange":{"beginToken":{"kind":97,"text":"toString"},"endToken":{"kind":97,"text":"toString"}},"identifier":"toString"},"parameters":[{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":110,"beginColumn":35,"endLine":110,"endColumn":51},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"input"}},"annotations":[],"isVarArgs":"false","modifiers":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":110,"beginColumn":47,"endLine":110,"endColumn":51},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":110,"beginColumn":35,"endLine":110,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"InputStream"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":110,"beginColumn":35,"endLine":110,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"InputStream"}},"identifier":"InputStream"},"annotations":[]},"varArgsAnnotations":[]}],"thrownExceptions":[{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":110,"beginColumn":61,"endLine":110,"endColumn":71},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":110,"beginColumn":61,"endLine":110,"endColumn":71},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"identifier":"IOException"},"annotations":[]}],"typeParameters":[],"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":98,"beginColumn":5,"endLine":109,"endColumn":7},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n     * Get the contents of an <code>InputStream</code> as a String\n     * using the default character encoding of the platform.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedInputStream</code>.\n     *\n     * @param input the <code>InputStream</code> to read from\n     * @return the requested String\n     * @throws NullPointerException if the input is null\n     * @throws IOException          if an I/O error occurs\n     */"},"endToken":{"kind":8,"text":"/**\n     * Get the contents of an <code>InputStream</code> as a String\n     * using the default character encoding of the platform.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedInputStream</code>.\n     *\n     * @param input the <code>InputStream</code> to read from\n     * @return the requested String\n     * @throws NullPointerException if the input is null\n     * @throws IOException          if an I/O error occurs\n     */"}},"content":"\n     * Get the contents of an <code>InputStream</code> as a String\n     * using the default character encoding of the platform.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedInputStream</code>.\n     *\n     * @param input the <code>InputStream</code> to read from\n     * @return the requested String\n     * @throws NullPointerException if the input is null\n     * @throws IOException          if an I/O error occurs\n     "}},{"!":"com.github.javaparser.ast.body.MethodDeclaration","range":{"beginLine":130,"beginColumn":5,"endLine":137,"endColumn":5},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":130,"beginColumn":76,"endLine":137,"endColumn":5},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":131,"beginColumn":9,"endLine":131,"endColumn":63},"tokenRange":{"beginToken":{"kind":97,"text":"ByteArrayOutputStream"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":131,"beginColumn":9,"endLine":131,"endColumn":62},"tokenRange":{"beginToken":{"kind":97,"text":"ByteArrayOutputStream"},"endToken":{"kind":101,"text":")"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":131,"beginColumn":31,"endLine":131,"endColumn":62},"tokenRange":{"beginToken":{"kind":97,"text":"os"},"endToken":{"kind":101,"text":")"}},"initializer":{"!":"com.github.javaparser.ast.expr.ObjectCreationExpr","range":{"beginLine":131,"beginColumn":36,"endLine":131,"endColumn":62},"tokenRange":{"beginToken":{"kind":42,"text":"new"},"endToken":{"kind":101,"text":")"}},"arguments":[],"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":131,"beginColumn":40,"endLine":131,"endColumn":60},"tokenRange":{"beginToken":{"kind":97,"text":"ByteArrayOutputStream"},"endToken":{"kind":97,"text":"ByteArrayOutputStream"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":131,"beginColumn":40,"endLine":131,"endColumn":60},"tokenRange":{"beginToken":{"kind":97,"text":"ByteArrayOutputStream"},"endToken":{"kind":97,"text":"ByteArrayOutputStream"}},"identifier":"ByteArrayOutputStream"},"annotations":[]}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":131,"beginColumn":31,"endLine":131,"endColumn":32},"tokenRange":{"beginToken":{"kind":97,"text":"os"},"endToken":{"kind":97,"text":"os"}},"identifier":"os"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":131,"beginColumn":9,"endLine":131,"endColumn":29},"tokenRange":{"beginToken":{"kind":97,"text":"ByteArrayOutputStream"},"endToken":{"kind":97,"text":"ByteArrayOutputStream"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":131,"beginColumn":9,"endLine":131,"endColumn":29},"tokenRange":{"beginToken":{"kind":97,"text":"ByteArrayOutputStream"},"endToken":{"kind":97,"text":"ByteArrayOutputStream"}},"identifier":"ByteArrayOutputStream"},"annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":132,"beginColumn":9,"endLine":132,"endColumn":36},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":132,"beginColumn":9,"endLine":132,"endColumn":35},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":105,"text":"]"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":132,"beginColumn":16,"endLine":132,"endColumn":35},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":105,"text":"]"}},"initializer":{"!":"com.github.javaparser.ast.expr.ArrayCreationExpr","range":{"beginLine":132,"beginColumn":22,"endLine":132,"endColumn":35},"tokenRange":{"beginToken":{"kind":42,"text":"new"},"endToken":{"kind":105,"text":"]"}},"elementType":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":132,"beginColumn":26,"endLine":132,"endColumn":29},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":15,"text":"byte"}},"type":"BYTE","annotations":[]},"levels":[{"!":"com.github.javaparser.ast.ArrayCreationLevel","range":{"beginLine":132,"beginColumn":30,"endLine":132,"endColumn":35},"tokenRange":{"beginToken":{"kind":104,"text":"["},"endToken":{"kind":105,"text":"]"}},"annotations":[],"dimension":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":132,"beginColumn":31,"endLine":132,"endColumn":34},"tokenRange":{"beginToken":{"kind":80,"text":"1024"},"endToken":{"kind":80,"text":"1024"}},"value":"1024"}}]},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":132,"beginColumn":16,"endLine":132,"endColumn":18},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"identifier":"buf"},"type":{"!":"com.github.javaparser.ast.type.ArrayType","range":{"beginLine":132,"beginColumn":9,"endLine":132,"endColumn":14},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":105,"text":"]"}},"componentType":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":132,"beginColumn":9,"endLine":132,"endColumn":12},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":15,"text":"byte"}},"type":"BYTE","annotations":[]},"origin":"TYPE","annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.ForStmt","range":{"beginLine":133,"beginColumn":9,"endLine":135,"endColumn":9},"tokenRange":{"beginToken":{"kind":32,"text":"for"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":133,"beginColumn":69,"endLine":135,"endColumn":9},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":134,"beginColumn":13,"endLine":134,"endColumn":32},"tokenRange":{"beginToken":{"kind":97,"text":"os"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":134,"beginColumn":13,"endLine":134,"endColumn":31},"tokenRange":{"beginToken":{"kind":97,"text":"os"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":134,"beginColumn":22,"endLine":134,"endColumn":24},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":134,"beginColumn":22,"endLine":134,"endColumn":24},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"identifier":"buf"}},{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":134,"beginColumn":27,"endLine":134,"endColumn":27},"tokenRange":{"beginToken":{"kind":80,"text":"0"},"endToken":{"kind":80,"text":"0"}},"value":"0"},{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":134,"beginColumn":30,"endLine":134,"endColumn":30},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":134,"beginColumn":30,"endLine":134,"endColumn":30},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"}}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":134,"beginColumn":16,"endLine":134,"endColumn":20},"tokenRange":{"beginToken":{"kind":97,"text":"write"},"endToken":{"kind":97,"text":"write"}},"identifier":"write"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":134,"beginColumn":13,"endLine":134,"endColumn":14},"tokenRange":{"beginToken":{"kind":97,"text":"os"},"endToken":{"kind":97,"text":"os"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":134,"beginColumn":13,"endLine":134,"endColumn":14},"tokenRange":{"beginToken":{"kind":97,"text":"os"},"endToken":{"kind":97,"text":"os"}},"identifier":"os"}}}}]},"compare":{"!":"com.github.javaparser.ast.expr.BinaryExpr","range":{"beginLine":133,"beginColumn":39,"endLine":133,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":80,"text":"1"}},"left":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":133,"beginColumn":39,"endLine":133,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":133,"beginColumn":39,"endLine":133,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"}},"operator":"NOT_EQUALS","right":{"!":"com.github.javaparser.ast.expr.UnaryExpr","range":{"beginLine":133,"beginColumn":44,"endLine":133,"endColumn":45},"tokenRange":{"beginToken":{"kind":128,"text":"-"},"endToken":{"kind":80,"text":"1"}},"expression":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":133,"beginColumn":45,"endLine":133,"endColumn":45},"tokenRange":{"beginToken":{"kind":80,"text":"1"},"endToken":{"kind":80,"text":"1"}},"value":"1"},"operator":"MINUS"}},"initialization":[{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":133,"beginColumn":14,"endLine":133,"endColumn":36},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":101,"text":")"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":133,"beginColumn":18,"endLine":133,"endColumn":36},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":101,"text":")"}},"initializer":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":133,"beginColumn":22,"endLine":133,"endColumn":36},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":133,"beginColumn":33,"endLine":133,"endColumn":35},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":133,"beginColumn":33,"endLine":133,"endColumn":35},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"identifier":"buf"}}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":133,"beginColumn":28,"endLine":133,"endColumn":31},"tokenRange":{"beginToken":{"kind":97,"text":"read"},"endToken":{"kind":97,"text":"read"}},"identifier":"read"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":133,"beginColumn":22,"endLine":133,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":133,"beginColumn":22,"endLine":133,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"}}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":133,"beginColumn":18,"endLine":133,"endColumn":18},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":133,"beginColumn":14,"endLine":133,"endColumn":16},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":38,"text":"int"}},"type":"INT","annotations":[]}}]}],"update":[{"!":"com.github.javaparser.ast.expr.AssignExpr","range":{"beginLine":133,"beginColumn":48,"endLine":133,"endColumn":66},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":101,"text":")"}},"operator":"ASSIGN","target":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":133,"beginColumn":48,"endLine":133,"endColumn":48},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":133,"beginColumn":48,"endLine":133,"endColumn":48},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"}},"value":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":133,"beginColumn":52,"endLine":133,"endColumn":66},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":133,"beginColumn":63,"endLine":133,"endColumn":65},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":133,"beginColumn":63,"endLine":133,"endColumn":65},"tokenRange":{"beginToken":{"kind":97,"text":"buf"},"endToken":{"kind":97,"text":"buf"}},"identifier":"buf"}}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":133,"beginColumn":58,"endLine":133,"endColumn":61},"tokenRange":{"beginToken":{"kind":97,"text":"read"},"endToken":{"kind":97,"text":"read"}},"identifier":"read"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":133,"beginColumn":52,"endLine":133,"endColumn":56},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":133,"beginColumn":52,"endLine":133,"endColumn":56},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"}}}}]},{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":136,"beginColumn":9,"endLine":136,"endColumn":32},"tokenRange":{"beginToken":{"kind":51,"text":"return"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":136,"beginColumn":16,"endLine":136,"endColumn":31},"tokenRange":{"beginToken":{"kind":97,"text":"os"},"endToken":{"kind":101,"text":")"}},"arguments":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":136,"beginColumn":19,"endLine":136,"endColumn":29},"tokenRange":{"beginToken":{"kind":97,"text":"toByteArray"},"endToken":{"kind":97,"text":"toByteArray"}},"identifier":"toByteArray"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":136,"beginColumn":16,"endLine":136,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"os"},"endToken":{"kind":97,"text":"os"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":136,"beginColumn":16,"endLine":136,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"os"},"endToken":{"kind":97,"text":"os"}},"identifier":"os"}}}}]},"type":{"!":"com.github.javaparser.ast.type.ArrayType","range":{"beginLine":130,"beginColumn":19,"endLine":130,"endColumn":24},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":105,"text":"]"}},"componentType":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":130,"beginColumn":19,"endLine":130,"endColumn":22},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":15,"text":"byte"}},"type":"BYTE","annotations":[]},"origin":"TYPE","annotations":[]},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":130,"beginColumn":5,"endLine":130,"endColumn":10},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":49,"text":"public"}},"keyword":"PUBLIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":130,"beginColumn":12,"endLine":130,"endColumn":17},"tokenRange":{"beginToken":{"kind":54,"text":"static"},"endToken":{"kind":54,"text":"static"}},"keyword":"STATIC"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":130,"beginColumn":26,"endLine":130,"endColumn":36},"tokenRange":{"beginToken":{"kind":97,"text":"toByteArray"},"endToken":{"kind":97,"text":"toByteArray"}},"identifier":"toByteArray"},"parameters":[{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":130,"beginColumn":38,"endLine":130,"endColumn":54},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"input"}},"annotations":[],"isVarArgs":"false","modifiers":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":130,"beginColumn":50,"endLine":130,"endColumn":54},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":130,"beginColumn":38,"endLine":130,"endColumn":48},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"InputStream"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":130,"beginColumn":38,"endLine":130,"endColumn":48},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"InputStream"}},"identifier":"InputStream"},"annotations":[]},"varArgsAnnotations":[]}],"thrownExceptions":[{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":130,"beginColumn":64,"endLine":130,"endColumn":74},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":130,"beginColumn":64,"endLine":130,"endColumn":74},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"identifier":"IOException"},"annotations":[]}],"typeParameters":[],"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":116,"beginColumn":5,"endLine":129,"endColumn":7},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n     * Get the contents of an <code>InputStream</code> as a ByteArray\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedInputStream</code>.\n     *\n     * @param input\n     *            the <code>InputStream</code> to read from\n     * @return the byte array\n     * @throws NullPointerException\n     *             if the input is null\n     * @throws IOException\n     *             if an I/O error occurs\n     */"},"endToken":{"kind":8,"text":"/**\n     * Get the contents of an <code>InputStream</code> as a ByteArray\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedInputStream</code>.\n     *\n     * @param input\n     *            the <code>InputStream</code> to read from\n     * @return the byte array\n     * @throws NullPointerException\n     *             if the input is null\n     * @throws IOException\n     *             if an I/O error occurs\n     */"}},"content":"\n     * Get the contents of an <code>InputStream</code> as a ByteArray\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedInputStream</code>.\n     *\n     * @param input\n     *            the <code>InputStream</code> to read from\n     * @return the byte array\n     * @throws NullPointerException\n     *             if the input is null\n     * @throws IOException\n     *             if an I/O error occurs\n     "}},{"!":"com.github.javaparser.ast.body.MethodDeclaration","range":{"beginLine":158,"beginColumn":5,"endLine":164,"endColumn":5},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":158,"beginColumn":99,"endLine":164,"endColumn":5},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":159,"beginColumn":9,"endLine":159,"endColumn":52},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":159,"beginColumn":9,"endLine":159,"endColumn":51},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":101,"text":")"}},"annotations":[],"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":159,"beginColumn":9,"endLine":159,"endColumn":13},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":29,"text":"final"}},"keyword":"FINAL"}],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":159,"beginColumn":20,"endLine":159,"endColumn":51},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":101,"text":")"}},"initializer":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":159,"beginColumn":28,"endLine":159,"endColumn":51},"tokenRange":{"beginToken":{"kind":97,"text":"copyLarge"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":159,"beginColumn":38,"endLine":159,"endColumn":42},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":159,"beginColumn":38,"endLine":159,"endColumn":42},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"}},{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":159,"beginColumn":45,"endLine":159,"endColumn":50},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":159,"beginColumn":45,"endLine":159,"endColumn":50},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"identifier":"output"}}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":159,"beginColumn":28,"endLine":159,"endColumn":36},"tokenRange":{"beginToken":{"kind":97,"text":"copyLarge"},"endToken":{"kind":97,"text":"copyLarge"}},"identifier":"copyLarge"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":159,"beginColumn":20,"endLine":159,"endColumn":24},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":159,"beginColumn":15,"endLine":159,"endColumn":18},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":40,"text":"long"}},"type":"LONG","annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.IfStmt","range":{"beginLine":160,"beginColumn":9,"endLine":162,"endColumn":9},"tokenRange":{"beginToken":{"kind":34,"text":"if"},"endToken":{"kind":103,"text":"}"}},"condition":{"!":"com.github.javaparser.ast.expr.BinaryExpr","range":{"beginLine":160,"beginColumn":13,"endLine":160,"endColumn":37},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"MAX_VALUE"}},"left":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":160,"beginColumn":13,"endLine":160,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":160,"beginColumn":13,"endLine":160,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"}},"operator":"GREATER","right":{"!":"com.github.javaparser.ast.expr.FieldAccessExpr","range":{"beginLine":160,"beginColumn":21,"endLine":160,"endColumn":37},"tokenRange":{"beginToken":{"kind":97,"text":"Integer"},"endToken":{"kind":97,"text":"MAX_VALUE"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":160,"beginColumn":29,"endLine":160,"endColumn":37},"tokenRange":{"beginToken":{"kind":97,"text":"MAX_VALUE"},"endToken":{"kind":97,"text":"MAX_VALUE"}},"identifier":"MAX_VALUE"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":160,"beginColumn":21,"endLine":160,"endColumn":27},"tokenRange":{"beginToken":{"kind":97,"text":"Integer"},"endToken":{"kind":97,"text":"Integer"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":160,"beginColumn":21,"endLine":160,"endColumn":27},"tokenRange":{"beginToken":{"kind":97,"text":"Integer"},"endToken":{"kind":97,"text":"Integer"}},"identifier":"Integer"}}}},"thenStmt":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":160,"beginColumn":40,"endLine":162,"endColumn":9},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":161,"beginColumn":13,"endLine":161,"endColumn":22},"tokenRange":{"beginToken":{"kind":51,"text":"return"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.UnaryExpr","range":{"beginLine":161,"beginColumn":20,"endLine":161,"endColumn":21},"tokenRange":{"beginToken":{"kind":128,"text":"-"},"endToken":{"kind":80,"text":"1"}},"expression":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":161,"beginColumn":21,"endLine":161,"endColumn":21},"tokenRange":{"beginToken":{"kind":80,"text":"1"},"endToken":{"kind":80,"text":"1"}},"value":"1"},"operator":"MINUS"}}]}},{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":163,"beginColumn":9,"endLine":163,"endColumn":27},"tokenRange":{"beginToken":{"kind":51,"text":"return"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.CastExpr","range":{"beginLine":163,"beginColumn":16,"endLine":163,"endColumn":26},"tokenRange":{"beginToken":{"kind":100,"text":"("},"endToken":{"kind":97,"text":"count"}},"expression":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":163,"beginColumn":22,"endLine":163,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":163,"beginColumn":22,"endLine":163,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"}},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":163,"beginColumn":17,"endLine":163,"endColumn":19},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":38,"text":"int"}},"type":"INT","annotations":[]}}}]},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":158,"beginColumn":19,"endLine":158,"endColumn":21},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":38,"text":"int"}},"type":"INT","annotations":[]},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":158,"beginColumn":5,"endLine":158,"endColumn":10},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":49,"text":"public"}},"keyword":"PUBLIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":158,"beginColumn":12,"endLine":158,"endColumn":17},"tokenRange":{"beginToken":{"kind":54,"text":"static"},"endToken":{"kind":54,"text":"static"}},"keyword":"STATIC"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":158,"beginColumn":23,"endLine":158,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"copy"},"endToken":{"kind":97,"text":"copy"}},"identifier":"copy"},"parameters":[{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":158,"beginColumn":28,"endLine":158,"endColumn":50},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":97,"text":"input"}},"annotations":[],"isVarArgs":"false","modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":158,"beginColumn":28,"endLine":158,"endColumn":32},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":29,"text":"final"}},"keyword":"FINAL"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":158,"beginColumn":46,"endLine":158,"endColumn":50},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":158,"beginColumn":34,"endLine":158,"endColumn":44},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"InputStream"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":158,"beginColumn":34,"endLine":158,"endColumn":44},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"InputStream"}},"identifier":"InputStream"},"annotations":[]},"varArgsAnnotations":[]},{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":158,"beginColumn":53,"endLine":158,"endColumn":77},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":97,"text":"output"}},"annotations":[],"isVarArgs":"false","modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":158,"beginColumn":53,"endLine":158,"endColumn":57},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":29,"text":"final"}},"keyword":"FINAL"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":158,"beginColumn":72,"endLine":158,"endColumn":77},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"identifier":"output"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":158,"beginColumn":59,"endLine":158,"endColumn":70},"tokenRange":{"beginToken":{"kind":97,"text":"OutputStream"},"endToken":{"kind":97,"text":"OutputStream"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":158,"beginColumn":59,"endLine":158,"endColumn":70},"tokenRange":{"beginToken":{"kind":97,"text":"OutputStream"},"endToken":{"kind":97,"text":"OutputStream"}},"identifier":"OutputStream"},"annotations":[]},"varArgsAnnotations":[]}],"thrownExceptions":[{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":158,"beginColumn":87,"endLine":158,"endColumn":97},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":158,"beginColumn":87,"endLine":158,"endColumn":97},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"identifier":"IOException"},"annotations":[]}],"typeParameters":[],"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":139,"beginColumn":5,"endLine":157,"endColumn":6},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n    * Copies bytes from an <code>InputStream</code> to an\n    * <code>OutputStream</code>.\n    * <p>\n    * This method buffers the input internally, so there is no need to use a\n    * <code>BufferedInputStream</code>.\n    * <p>\n    * Large streams (over 2GB) will return a bytes copied value of\n    * <code>-1</code> after the copy has completed since the correct\n    * number of bytes cannot be returned as an int. For large streams\n    * use the <code>copyLarge(InputStream, OutputStream)</code> method.\n    *\n    * @param input the <code>InputStream</code> to read from\n    * @param output the <code>OutputStream</code> to write to\n    * @return the number of bytes copied, or -1 if &gt; Integer.MAX_VALUE\n    * @throws NullPointerException if the input or output is null\n    * @throws IOException if an I/O error occurs\n    * @since Commons IO 1.1\n    */"},"endToken":{"kind":8,"text":"/**\n    * Copies bytes from an <code>InputStream</code> to an\n    * <code>OutputStream</code>.\n    * <p>\n    * This method buffers the input internally, so there is no need to use a\n    * <code>BufferedInputStream</code>.\n    * <p>\n    * Large streams (over 2GB) will return a bytes copied value of\n    * <code>-1</code> after the copy has completed since the correct\n    * number of bytes cannot be returned as an int. For large streams\n    * use the <code>copyLarge(InputStream, OutputStream)</code> method.\n    *\n    * @param input the <code>InputStream</code> to read from\n    * @param output the <code>OutputStream</code> to write to\n    * @return the number of bytes copied, or -1 if &gt; Integer.MAX_VALUE\n    * @throws NullPointerException if the input or output is null\n    * @throws IOException if an I/O error occurs\n    * @since Commons IO 1.1\n    */"}},"content":"\n    * Copies bytes from an <code>InputStream</code> to an\n    * <code>OutputStream</code>.\n    * <p>\n    * This method buffers the input internally, so there is no need to use a\n    * <code>BufferedInputStream</code>.\n    * <p>\n    * Large streams (over 2GB) will return a bytes copied value of\n    * <code>-1</code> after the copy has completed since the correct\n    * number of bytes cannot be returned as an int. For large streams\n    * use the <code>copyLarge(InputStream, OutputStream)</code> method.\n    *\n    * @param input the <code>InputStream</code> to read from\n    * @param output the <code>OutputStream</code> to write to\n    * @return the number of bytes copied, or -1 if &gt; Integer.MAX_VALUE\n    * @throws NullPointerException if the input or output is null\n    * @throws IOException if an I/O error occurs\n    * @since Commons IO 1.1\n    "}},{"!":"com.github.javaparser.ast.body.MethodDeclaration","range":{"beginLine":181,"beginColumn":5,"endLine":191,"endColumn":5},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":182,"beginColumn":28,"endLine":191,"endColumn":5},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":183,"beginColumn":9,"endLine":183,"endColumn":54},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":183,"beginColumn":9,"endLine":183,"endColumn":53},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":105,"text":"]"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":183,"beginColumn":16,"endLine":183,"endColumn":53},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":105,"text":"]"}},"initializer":{"!":"com.github.javaparser.ast.expr.ArrayCreationExpr","range":{"beginLine":183,"beginColumn":25,"endLine":183,"endColumn":53},"tokenRange":{"beginToken":{"kind":42,"text":"new"},"endToken":{"kind":105,"text":"]"}},"elementType":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":183,"beginColumn":29,"endLine":183,"endColumn":32},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":15,"text":"byte"}},"type":"BYTE","annotations":[]},"levels":[{"!":"com.github.javaparser.ast.ArrayCreationLevel","range":{"beginLine":183,"beginColumn":33,"endLine":183,"endColumn":53},"tokenRange":{"beginToken":{"kind":104,"text":"["},"endToken":{"kind":105,"text":"]"}},"annotations":[],"dimension":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":183,"beginColumn":34,"endLine":183,"endColumn":52},"tokenRange":{"beginToken":{"kind":97,"text":"DEFAULT_BUFFER_SIZE"},"endToken":{"kind":97,"text":"DEFAULT_BUFFER_SIZE"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":183,"beginColumn":34,"endLine":183,"endColumn":52},"tokenRange":{"beginToken":{"kind":97,"text":"DEFAULT_BUFFER_SIZE"},"endToken":{"kind":97,"text":"DEFAULT_BUFFER_SIZE"}},"identifier":"DEFAULT_BUFFER_SIZE"}}}]},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":183,"beginColumn":16,"endLine":183,"endColumn":21},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":97,"text":"buffer"}},"identifier":"buffer"},"type":{"!":"com.github.javaparser.ast.type.ArrayType","range":{"beginLine":183,"beginColumn":9,"endLine":183,"endColumn":14},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":105,"text":"]"}},"componentType":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":183,"beginColumn":9,"endLine":183,"endColumn":12},"tokenRange":{"beginToken":{"kind":15,"text":"byte"},"endToken":{"kind":15,"text":"byte"}},"type":"BYTE","annotations":[]},"origin":"TYPE","annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":184,"beginColumn":9,"endLine":184,"endColumn":23},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":184,"beginColumn":9,"endLine":184,"endColumn":22},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":80,"text":"0"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":184,"beginColumn":14,"endLine":184,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":80,"text":"0"}},"initializer":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":184,"beginColumn":22,"endLine":184,"endColumn":22},"tokenRange":{"beginToken":{"kind":80,"text":"0"},"endToken":{"kind":80,"text":"0"}},"value":"0"},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":184,"beginColumn":14,"endLine":184,"endColumn":18},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":184,"beginColumn":9,"endLine":184,"endColumn":12},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":40,"text":"long"}},"type":"LONG","annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":185,"beginColumn":9,"endLine":185,"endColumn":18},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":185,"beginColumn":9,"endLine":185,"endColumn":17},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":80,"text":"0"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":185,"beginColumn":13,"endLine":185,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":80,"text":"0"}},"initializer":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":185,"beginColumn":17,"endLine":185,"endColumn":17},"tokenRange":{"beginToken":{"kind":80,"text":"0"},"endToken":{"kind":80,"text":"0"}},"value":"0"},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":185,"beginColumn":13,"endLine":185,"endColumn":13},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":185,"beginColumn":9,"endLine":185,"endColumn":11},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":38,"text":"int"}},"type":"INT","annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.WhileStmt","range":{"beginLine":186,"beginColumn":9,"endLine":189,"endColumn":9},"tokenRange":{"beginToken":{"kind":67,"text":"while"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":186,"beginColumn":48,"endLine":189,"endColumn":9},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":187,"beginColumn":13,"endLine":187,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":187,"beginColumn":13,"endLine":187,"endColumn":38},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":187,"beginColumn":26,"endLine":187,"endColumn":31},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":97,"text":"buffer"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":187,"beginColumn":26,"endLine":187,"endColumn":31},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":97,"text":"buffer"}},"identifier":"buffer"}},{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":187,"beginColumn":34,"endLine":187,"endColumn":34},"tokenRange":{"beginToken":{"kind":80,"text":"0"},"endToken":{"kind":80,"text":"0"}},"value":"0"},{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":187,"beginColumn":37,"endLine":187,"endColumn":37},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":187,"beginColumn":37,"endLine":187,"endColumn":37},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"}}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":187,"beginColumn":20,"endLine":187,"endColumn":24},"tokenRange":{"beginToken":{"kind":97,"text":"write"},"endToken":{"kind":97,"text":"write"}},"identifier":"write"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":187,"beginColumn":13,"endLine":187,"endColumn":18},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":187,"beginColumn":13,"endLine":187,"endColumn":18},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"identifier":"output"}}}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":188,"beginColumn":13,"endLine":188,"endColumn":23},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.AssignExpr","range":{"beginLine":188,"beginColumn":13,"endLine":188,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"n"}},"operator":"PLUS","target":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":188,"beginColumn":13,"endLine":188,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":188,"beginColumn":13,"endLine":188,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"}},"value":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":188,"beginColumn":22,"endLine":188,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":188,"beginColumn":22,"endLine":188,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"}}}}]},"condition":{"!":"com.github.javaparser.ast.expr.BinaryExpr","range":{"beginLine":186,"beginColumn":16,"endLine":186,"endColumn":45},"tokenRange":{"beginToken":{"kind":128,"text":"-"},"endToken":{"kind":101,"text":")"}},"left":{"!":"com.github.javaparser.ast.expr.UnaryExpr","range":{"beginLine":186,"beginColumn":16,"endLine":186,"endColumn":17},"tokenRange":{"beginToken":{"kind":128,"text":"-"},"endToken":{"kind":80,"text":"1"}},"expression":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":186,"beginColumn":17,"endLine":186,"endColumn":17},"tokenRange":{"beginToken":{"kind":80,"text":"1"},"endToken":{"kind":80,"text":"1"}},"value":"1"},"operator":"MINUS"},"operator":"NOT_EQUALS","right":{"!":"com.github.javaparser.ast.expr.EnclosedExpr","range":{"beginLine":186,"beginColumn":22,"endLine":186,"endColumn":45},"tokenRange":{"beginToken":{"kind":100,"text":"("},"endToken":{"kind":101,"text":")"}},"inner":{"!":"com.github.javaparser.ast.expr.AssignExpr","range":{"beginLine":186,"beginColumn":23,"endLine":186,"endColumn":44},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":101,"text":")"}},"operator":"ASSIGN","target":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":186,"beginColumn":23,"endLine":186,"endColumn":23},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":186,"beginColumn":23,"endLine":186,"endColumn":23},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"}},"value":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":186,"beginColumn":27,"endLine":186,"endColumn":44},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":186,"beginColumn":38,"endLine":186,"endColumn":43},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":97,"text":"buffer"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":186,"beginColumn":38,"endLine":186,"endColumn":43},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":97,"text":"buffer"}},"identifier":"buffer"}}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":186,"beginColumn":33,"endLine":186,"endColumn":36},"tokenRange":{"beginToken":{"kind":97,"text":"read"},"endToken":{"kind":97,"text":"read"}},"identifier":"read"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":186,"beginColumn":27,"endLine":186,"endColumn":31},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":186,"beginColumn":27,"endLine":186,"endColumn":31},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"}}}}}}},{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":190,"beginColumn":9,"endLine":190,"endColumn":21},"tokenRange":{"beginToken":{"kind":51,"text":"return"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":190,"beginColumn":16,"endLine":190,"endColumn":20},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":190,"beginColumn":16,"endLine":190,"endColumn":20},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"}}}]},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":181,"beginColumn":19,"endLine":181,"endColumn":22},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":40,"text":"long"}},"type":"LONG","annotations":[]},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":181,"beginColumn":5,"endLine":181,"endColumn":10},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":49,"text":"public"}},"keyword":"PUBLIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":181,"beginColumn":12,"endLine":181,"endColumn":17},"tokenRange":{"beginToken":{"kind":54,"text":"static"},"endToken":{"kind":54,"text":"static"}},"keyword":"STATIC"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":181,"beginColumn":24,"endLine":181,"endColumn":32},"tokenRange":{"beginToken":{"kind":97,"text":"copyLarge"},"endToken":{"kind":97,"text":"copyLarge"}},"identifier":"copyLarge"},"parameters":[{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":181,"beginColumn":34,"endLine":181,"endColumn":56},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":97,"text":"input"}},"annotations":[],"isVarArgs":"false","modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":181,"beginColumn":34,"endLine":181,"endColumn":38},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":29,"text":"final"}},"keyword":"FINAL"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":181,"beginColumn":52,"endLine":181,"endColumn":56},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":181,"beginColumn":40,"endLine":181,"endColumn":50},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"InputStream"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":181,"beginColumn":40,"endLine":181,"endColumn":50},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"InputStream"}},"identifier":"InputStream"},"annotations":[]},"varArgsAnnotations":[]},{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":181,"beginColumn":59,"endLine":181,"endColumn":83},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":97,"text":"output"}},"annotations":[],"isVarArgs":"false","modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":181,"beginColumn":59,"endLine":181,"endColumn":63},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":29,"text":"final"}},"keyword":"FINAL"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":181,"beginColumn":78,"endLine":181,"endColumn":83},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"identifier":"output"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":181,"beginColumn":65,"endLine":181,"endColumn":76},"tokenRange":{"beginToken":{"kind":97,"text":"OutputStream"},"endToken":{"kind":97,"text":"OutputStream"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":181,"beginColumn":65,"endLine":181,"endColumn":76},"tokenRange":{"beginToken":{"kind":97,"text":"OutputStream"},"endToken":{"kind":97,"text":"OutputStream"}},"identifier":"OutputStream"},"annotations":[]},"varArgsAnnotations":[]}],"thrownExceptions":[{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":182,"beginColumn":16,"endLine":182,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":182,"beginColumn":16,"endLine":182,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"identifier":"IOException"},"annotations":[]}],"typeParameters":[],"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":166,"beginColumn":5,"endLine":180,"endColumn":6},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n    * Copies bytes from a large (over 2GB) <code>InputStream</code> to an\n    * <code>OutputStream</code>.\n    * <p>\n    * This method uses the provided buffer, so there is no need to use a\n    * <code>BufferedInputStream</code>.\n    * <p>\n    *\n    * @param input the <code>InputStream</code> to read from\n    * @param output the <code>OutputStream</code> to write to\n    * @return the number of bytes copied\n    * @throws NullPointerException if the input or output is null\n    * @throws IOException if an I/O error occurs\n    * @since Commons IO 2.2\n    */"},"endToken":{"kind":8,"text":"/**\n    * Copies bytes from a large (over 2GB) <code>InputStream</code> to an\n    * <code>OutputStream</code>.\n    * <p>\n    * This method uses the provided buffer, so there is no need to use a\n    * <code>BufferedInputStream</code>.\n    * <p>\n    *\n    * @param input the <code>InputStream</code> to read from\n    * @param output the <code>OutputStream</code> to write to\n    * @return the number of bytes copied\n    * @throws NullPointerException if the input or output is null\n    * @throws IOException if an I/O error occurs\n    * @since Commons IO 2.2\n    */"}},"content":"\n    * Copies bytes from a large (over 2GB) <code>InputStream</code> to an\n    * <code>OutputStream</code>.\n    * <p>\n    * This method uses the provided buffer, so there is no need to use a\n    * <code>BufferedInputStream</code>.\n    * <p>\n    *\n    * @param input the <code>InputStream</code> to read from\n    * @param output the <code>OutputStream</code> to write to\n    * @return the number of bytes copied\n    * @throws NullPointerException if the input or output is null\n    * @throws IOException if an I/O error occurs\n    * @since Commons IO 2.2\n    "}},{"!":"com.github.javaparser.ast.body.MethodDeclaration","range":{"beginLine":208,"beginColumn":5,"endLine":212,"endColumn":5},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":209,"beginColumn":28,"endLine":212,"endColumn":5},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":210,"beginColumn":9,"endLine":210,"endColumn":60},"tokenRange":{"beginToken":{"kind":97,"text":"InputStreamReader"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":210,"beginColumn":9,"endLine":210,"endColumn":59},"tokenRange":{"beginToken":{"kind":97,"text":"InputStreamReader"},"endToken":{"kind":101,"text":")"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":210,"beginColumn":27,"endLine":210,"endColumn":59},"tokenRange":{"beginToken":{"kind":97,"text":"in"},"endToken":{"kind":101,"text":")"}},"initializer":{"!":"com.github.javaparser.ast.expr.ObjectCreationExpr","range":{"beginLine":210,"beginColumn":32,"endLine":210,"endColumn":59},"tokenRange":{"beginToken":{"kind":42,"text":"new"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":210,"beginColumn":54,"endLine":210,"endColumn":58},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":210,"beginColumn":54,"endLine":210,"endColumn":58},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"}}],"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":210,"beginColumn":36,"endLine":210,"endColumn":52},"tokenRange":{"beginToken":{"kind":97,"text":"InputStreamReader"},"endToken":{"kind":97,"text":"InputStreamReader"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":210,"beginColumn":36,"endLine":210,"endColumn":52},"tokenRange":{"beginToken":{"kind":97,"text":"InputStreamReader"},"endToken":{"kind":97,"text":"InputStreamReader"}},"identifier":"InputStreamReader"},"annotations":[]}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":210,"beginColumn":27,"endLine":210,"endColumn":28},"tokenRange":{"beginToken":{"kind":97,"text":"in"},"endToken":{"kind":97,"text":"in"}},"identifier":"in"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":210,"beginColumn":9,"endLine":210,"endColumn":25},"tokenRange":{"beginToken":{"kind":97,"text":"InputStreamReader"},"endToken":{"kind":97,"text":"InputStreamReader"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":210,"beginColumn":9,"endLine":210,"endColumn":25},"tokenRange":{"beginToken":{"kind":97,"text":"InputStreamReader"},"endToken":{"kind":97,"text":"InputStreamReader"}},"identifier":"InputStreamReader"},"annotations":[]}}]},"comment":{"!":"com.github.javaparser.ast.comments.LineComment","range":{"beginLine":210,"beginColumn":62,"endLine":210,"endColumn":71},"tokenRange":{"beginToken":{"kind":5,"text":"// NOSONAR"},"endToken":{"kind":5,"text":"// NOSONAR"}},"content":" NOSONAR"}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":211,"beginColumn":9,"endLine":211,"endColumn":25},"tokenRange":{"beginToken":{"kind":97,"text":"copy"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":211,"beginColumn":9,"endLine":211,"endColumn":24},"tokenRange":{"beginToken":{"kind":97,"text":"copy"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":211,"beginColumn":14,"endLine":211,"endColumn":15},"tokenRange":{"beginToken":{"kind":97,"text":"in"},"endToken":{"kind":97,"text":"in"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":211,"beginColumn":14,"endLine":211,"endColumn":15},"tokenRange":{"beginToken":{"kind":97,"text":"in"},"endToken":{"kind":97,"text":"in"}},"identifier":"in"}},{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":211,"beginColumn":18,"endLine":211,"endColumn":23},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":211,"beginColumn":18,"endLine":211,"endColumn":23},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"identifier":"output"}}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":211,"beginColumn":9,"endLine":211,"endColumn":12},"tokenRange":{"beginToken":{"kind":97,"text":"copy"},"endToken":{"kind":97,"text":"copy"}},"identifier":"copy"}}}]},"type":{"!":"com.github.javaparser.ast.type.VoidType","range":{"beginLine":208,"beginColumn":19,"endLine":208,"endColumn":22},"tokenRange":{"beginToken":{"kind":65,"text":"void"},"endToken":{"kind":65,"text":"void"}},"annotations":[]},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":208,"beginColumn":5,"endLine":208,"endColumn":10},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":49,"text":"public"}},"keyword":"PUBLIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":208,"beginColumn":12,"endLine":208,"endColumn":17},"tokenRange":{"beginToken":{"kind":54,"text":"static"},"endToken":{"kind":54,"text":"static"}},"keyword":"STATIC"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":208,"beginColumn":24,"endLine":208,"endColumn":27},"tokenRange":{"beginToken":{"kind":97,"text":"copy"},"endToken":{"kind":97,"text":"copy"}},"identifier":"copy"},"parameters":[{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":208,"beginColumn":29,"endLine":208,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"input"}},"annotations":[],"isVarArgs":"false","modifiers":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":208,"beginColumn":41,"endLine":208,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":208,"beginColumn":29,"endLine":208,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"InputStream"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":208,"beginColumn":29,"endLine":208,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"InputStream"},"endToken":{"kind":97,"text":"InputStream"}},"identifier":"InputStream"},"annotations":[]},"varArgsAnnotations":[]},{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":208,"beginColumn":48,"endLine":208,"endColumn":60},"tokenRange":{"beginToken":{"kind":97,"text":"Writer"},"endToken":{"kind":97,"text":"output"}},"annotations":[],"isVarArgs":"false","modifiers":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":208,"beginColumn":55,"endLine":208,"endColumn":60},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"identifier":"output"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":208,"beginColumn":48,"endLine":208,"endColumn":53},"tokenRange":{"beginToken":{"kind":97,"text":"Writer"},"endToken":{"kind":97,"text":"Writer"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":208,"beginColumn":48,"endLine":208,"endColumn":53},"tokenRange":{"beginToken":{"kind":97,"text":"Writer"},"endToken":{"kind":97,"text":"Writer"}},"identifier":"Writer"},"annotations":[]},"varArgsAnnotations":[]}],"thrownExceptions":[{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":209,"beginColumn":16,"endLine":209,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":209,"beginColumn":16,"endLine":209,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"identifier":"IOException"},"annotations":[]}],"typeParameters":[],"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":193,"beginColumn":5,"endLine":207,"endColumn":7},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n     * Copy bytes from an <code>InputStream</code> to chars on a\n     * <code>Writer</code> using the default character encoding of the platform.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedInputStream</code>.\n     * <p>\n     * This method uses {@link InputStreamReader}.\n     *\n     * @param input  the <code>InputStream</code> to read from\n     * @param output the <code>Writer</code> to write to\n     * @throws NullPointerException if the input or output is null\n     * @throws IOException          if an I/O error occurs\n     * @since Commons IO 1.1\n     */"},"endToken":{"kind":8,"text":"/**\n     * Copy bytes from an <code>InputStream</code> to chars on a\n     * <code>Writer</code> using the default character encoding of the platform.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedInputStream</code>.\n     * <p>\n     * This method uses {@link InputStreamReader}.\n     *\n     * @param input  the <code>InputStream</code> to read from\n     * @param output the <code>Writer</code> to write to\n     * @throws NullPointerException if the input or output is null\n     * @throws IOException          if an I/O error occurs\n     * @since Commons IO 1.1\n     */"}},"content":"\n     * Copy bytes from an <code>InputStream</code> to chars on a\n     * <code>Writer</code> using the default character encoding of the platform.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedInputStream</code>.\n     * <p>\n     * This method uses {@link InputStreamReader}.\n     *\n     * @param input  the <code>InputStream</code> to read from\n     * @param output the <code>Writer</code> to write to\n     * @throws NullPointerException if the input or output is null\n     * @throws IOException          if an I/O error occurs\n     * @since Commons IO 1.1\n     "}},{"!":"com.github.javaparser.ast.body.MethodDeclaration","range":{"beginLine":236,"beginColumn":5,"endLine":242,"endColumn":5},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":236,"beginColumn":76,"endLine":242,"endColumn":5},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":237,"beginColumn":9,"endLine":237,"endColumn":46},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":237,"beginColumn":9,"endLine":237,"endColumn":45},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":101,"text":")"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":237,"beginColumn":14,"endLine":237,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":101,"text":")"}},"initializer":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":237,"beginColumn":22,"endLine":237,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"copyLarge"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":237,"beginColumn":32,"endLine":237,"endColumn":36},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":237,"beginColumn":32,"endLine":237,"endColumn":36},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"}},{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":237,"beginColumn":39,"endLine":237,"endColumn":44},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":237,"beginColumn":39,"endLine":237,"endColumn":44},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"identifier":"output"}}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":237,"beginColumn":22,"endLine":237,"endColumn":30},"tokenRange":{"beginToken":{"kind":97,"text":"copyLarge"},"endToken":{"kind":97,"text":"copyLarge"}},"identifier":"copyLarge"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":237,"beginColumn":14,"endLine":237,"endColumn":18},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":237,"beginColumn":9,"endLine":237,"endColumn":12},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":40,"text":"long"}},"type":"LONG","annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.IfStmt","range":{"beginLine":238,"beginColumn":9,"endLine":240,"endColumn":9},"tokenRange":{"beginToken":{"kind":34,"text":"if"},"endToken":{"kind":103,"text":"}"}},"condition":{"!":"com.github.javaparser.ast.expr.BinaryExpr","range":{"beginLine":238,"beginColumn":13,"endLine":238,"endColumn":37},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"MAX_VALUE"}},"left":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":238,"beginColumn":13,"endLine":238,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":238,"beginColumn":13,"endLine":238,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"}},"operator":"GREATER","right":{"!":"com.github.javaparser.ast.expr.FieldAccessExpr","range":{"beginLine":238,"beginColumn":21,"endLine":238,"endColumn":37},"tokenRange":{"beginToken":{"kind":97,"text":"Integer"},"endToken":{"kind":97,"text":"MAX_VALUE"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":238,"beginColumn":29,"endLine":238,"endColumn":37},"tokenRange":{"beginToken":{"kind":97,"text":"MAX_VALUE"},"endToken":{"kind":97,"text":"MAX_VALUE"}},"identifier":"MAX_VALUE"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":238,"beginColumn":21,"endLine":238,"endColumn":27},"tokenRange":{"beginToken":{"kind":97,"text":"Integer"},"endToken":{"kind":97,"text":"Integer"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":238,"beginColumn":21,"endLine":238,"endColumn":27},"tokenRange":{"beginToken":{"kind":97,"text":"Integer"},"endToken":{"kind":97,"text":"Integer"}},"identifier":"Integer"}}}},"thenStmt":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":238,"beginColumn":40,"endLine":240,"endColumn":9},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":239,"beginColumn":13,"endLine":239,"endColumn":22},"tokenRange":{"beginToken":{"kind":51,"text":"return"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.UnaryExpr","range":{"beginLine":239,"beginColumn":20,"endLine":239,"endColumn":21},"tokenRange":{"beginToken":{"kind":128,"text":"-"},"endToken":{"kind":80,"text":"1"}},"expression":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":239,"beginColumn":21,"endLine":239,"endColumn":21},"tokenRange":{"beginToken":{"kind":80,"text":"1"},"endToken":{"kind":80,"text":"1"}},"value":"1"},"operator":"MINUS"}}]}},{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":241,"beginColumn":9,"endLine":241,"endColumn":27},"tokenRange":{"beginToken":{"kind":51,"text":"return"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.CastExpr","range":{"beginLine":241,"beginColumn":16,"endLine":241,"endColumn":26},"tokenRange":{"beginToken":{"kind":100,"text":"("},"endToken":{"kind":97,"text":"count"}},"expression":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":241,"beginColumn":22,"endLine":241,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":241,"beginColumn":22,"endLine":241,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"}},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":241,"beginColumn":17,"endLine":241,"endColumn":19},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":38,"text":"int"}},"type":"INT","annotations":[]}}}]},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":236,"beginColumn":19,"endLine":236,"endColumn":21},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":38,"text":"int"}},"type":"INT","annotations":[]},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":236,"beginColumn":5,"endLine":236,"endColumn":10},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":49,"text":"public"}},"keyword":"PUBLIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":236,"beginColumn":12,"endLine":236,"endColumn":17},"tokenRange":{"beginToken":{"kind":54,"text":"static"},"endToken":{"kind":54,"text":"static"}},"keyword":"STATIC"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":236,"beginColumn":23,"endLine":236,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"copy"},"endToken":{"kind":97,"text":"copy"}},"identifier":"copy"},"parameters":[{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":236,"beginColumn":28,"endLine":236,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"Reader"},"endToken":{"kind":97,"text":"input"}},"annotations":[],"isVarArgs":"false","modifiers":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":236,"beginColumn":35,"endLine":236,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":236,"beginColumn":28,"endLine":236,"endColumn":33},"tokenRange":{"beginToken":{"kind":97,"text":"Reader"},"endToken":{"kind":97,"text":"Reader"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":236,"beginColumn":28,"endLine":236,"endColumn":33},"tokenRange":{"beginToken":{"kind":97,"text":"Reader"},"endToken":{"kind":97,"text":"Reader"}},"identifier":"Reader"},"annotations":[]},"varArgsAnnotations":[]},{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":236,"beginColumn":42,"endLine":236,"endColumn":54},"tokenRange":{"beginToken":{"kind":97,"text":"Writer"},"endToken":{"kind":97,"text":"output"}},"annotations":[],"isVarArgs":"false","modifiers":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":236,"beginColumn":49,"endLine":236,"endColumn":54},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"identifier":"output"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":236,"beginColumn":42,"endLine":236,"endColumn":47},"tokenRange":{"beginToken":{"kind":97,"text":"Writer"},"endToken":{"kind":97,"text":"Writer"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":236,"beginColumn":42,"endLine":236,"endColumn":47},"tokenRange":{"beginToken":{"kind":97,"text":"Writer"},"endToken":{"kind":97,"text":"Writer"}},"identifier":"Writer"},"annotations":[]},"varArgsAnnotations":[]}],"thrownExceptions":[{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":236,"beginColumn":64,"endLine":236,"endColumn":74},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":236,"beginColumn":64,"endLine":236,"endColumn":74},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"identifier":"IOException"},"annotations":[]}],"typeParameters":[],"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":217,"beginColumn":5,"endLine":235,"endColumn":7},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n     * Copy chars from a <code>Reader</code> to a <code>Writer</code>.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedReader</code>.\n     * <p>\n     * Large streams (over 2GB) will return a chars copied value of\n     * <code>-1</code> after the copy has completed since the correct\n     * number of chars cannot be returned as an int. For large streams\n     * use the <code>copyLarge(Reader, Writer)</code> method.\n     *\n     * @param input  the <code>Reader</code> to read from\n     * @param output the <code>Writer</code> to write to\n     * @return the number of characters copied\n     * @throws NullPointerException if the input or output is null\n     * @throws IOException          if an I/O error occurs\n     * @throws ArithmeticException  if the character count is too large\n     * @since Commons IO 1.1\n     */"},"endToken":{"kind":8,"text":"/**\n     * Copy chars from a <code>Reader</code> to a <code>Writer</code>.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedReader</code>.\n     * <p>\n     * Large streams (over 2GB) will return a chars copied value of\n     * <code>-1</code> after the copy has completed since the correct\n     * number of chars cannot be returned as an int. For large streams\n     * use the <code>copyLarge(Reader, Writer)</code> method.\n     *\n     * @param input  the <code>Reader</code> to read from\n     * @param output the <code>Writer</code> to write to\n     * @return the number of characters copied\n     * @throws NullPointerException if the input or output is null\n     * @throws IOException          if an I/O error occurs\n     * @throws ArithmeticException  if the character count is too large\n     * @since Commons IO 1.1\n     */"}},"content":"\n     * Copy chars from a <code>Reader</code> to a <code>Writer</code>.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedReader</code>.\n     * <p>\n     * Large streams (over 2GB) will return a chars copied value of\n     * <code>-1</code> after the copy has completed since the correct\n     * number of chars cannot be returned as an int. For large streams\n     * use the <code>copyLarge(Reader, Writer)</code> method.\n     *\n     * @param input  the <code>Reader</code> to read from\n     * @param output the <code>Writer</code> to write to\n     * @return the number of characters copied\n     * @throws NullPointerException if the input or output is null\n     * @throws IOException          if an I/O error occurs\n     * @throws ArithmeticException  if the character count is too large\n     * @since Commons IO 1.1\n     "}},{"!":"com.github.javaparser.ast.body.MethodDeclaration","range":{"beginLine":257,"beginColumn":5,"endLine":266,"endColumn":5},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":257,"beginColumn":82,"endLine":266,"endColumn":5},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":258,"beginColumn":9,"endLine":258,"endColumn":54},"tokenRange":{"beginToken":{"kind":18,"text":"char"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":258,"beginColumn":9,"endLine":258,"endColumn":53},"tokenRange":{"beginToken":{"kind":18,"text":"char"},"endToken":{"kind":105,"text":"]"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":258,"beginColumn":16,"endLine":258,"endColumn":53},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":105,"text":"]"}},"initializer":{"!":"com.github.javaparser.ast.expr.ArrayCreationExpr","range":{"beginLine":258,"beginColumn":25,"endLine":258,"endColumn":53},"tokenRange":{"beginToken":{"kind":42,"text":"new"},"endToken":{"kind":105,"text":"]"}},"elementType":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":258,"beginColumn":29,"endLine":258,"endColumn":32},"tokenRange":{"beginToken":{"kind":18,"text":"char"},"endToken":{"kind":18,"text":"char"}},"type":"CHAR","annotations":[]},"levels":[{"!":"com.github.javaparser.ast.ArrayCreationLevel","range":{"beginLine":258,"beginColumn":33,"endLine":258,"endColumn":53},"tokenRange":{"beginToken":{"kind":104,"text":"["},"endToken":{"kind":105,"text":"]"}},"annotations":[],"dimension":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":258,"beginColumn":34,"endLine":258,"endColumn":52},"tokenRange":{"beginToken":{"kind":97,"text":"DEFAULT_BUFFER_SIZE"},"endToken":{"kind":97,"text":"DEFAULT_BUFFER_SIZE"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":258,"beginColumn":34,"endLine":258,"endColumn":52},"tokenRange":{"beginToken":{"kind":97,"text":"DEFAULT_BUFFER_SIZE"},"endToken":{"kind":97,"text":"DEFAULT_BUFFER_SIZE"}},"identifier":"DEFAULT_BUFFER_SIZE"}}}]},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":258,"beginColumn":16,"endLine":258,"endColumn":21},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":97,"text":"buffer"}},"identifier":"buffer"},"type":{"!":"com.github.javaparser.ast.type.ArrayType","range":{"beginLine":258,"beginColumn":9,"endLine":258,"endColumn":14},"tokenRange":{"beginToken":{"kind":18,"text":"char"},"endToken":{"kind":105,"text":"]"}},"componentType":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":258,"beginColumn":9,"endLine":258,"endColumn":12},"tokenRange":{"beginToken":{"kind":18,"text":"char"},"endToken":{"kind":18,"text":"char"}},"type":"CHAR","annotations":[]},"origin":"TYPE","annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":259,"beginColumn":9,"endLine":259,"endColumn":23},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":259,"beginColumn":9,"endLine":259,"endColumn":22},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":80,"text":"0"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":259,"beginColumn":14,"endLine":259,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":80,"text":"0"}},"initializer":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":259,"beginColumn":22,"endLine":259,"endColumn":22},"tokenRange":{"beginToken":{"kind":80,"text":"0"},"endToken":{"kind":80,"text":"0"}},"value":"0"},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":259,"beginColumn":14,"endLine":259,"endColumn":18},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":259,"beginColumn":9,"endLine":259,"endColumn":12},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":40,"text":"long"}},"type":"LONG","annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":260,"beginColumn":9,"endLine":260,"endColumn":18},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.VariableDeclarationExpr","range":{"beginLine":260,"beginColumn":9,"endLine":260,"endColumn":17},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":80,"text":"0"}},"annotations":[],"modifiers":[],"variables":[{"!":"com.github.javaparser.ast.body.VariableDeclarator","range":{"beginLine":260,"beginColumn":13,"endLine":260,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":80,"text":"0"}},"initializer":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":260,"beginColumn":17,"endLine":260,"endColumn":17},"tokenRange":{"beginToken":{"kind":80,"text":"0"},"endToken":{"kind":80,"text":"0"}},"value":"0"},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":260,"beginColumn":13,"endLine":260,"endColumn":13},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":260,"beginColumn":9,"endLine":260,"endColumn":11},"tokenRange":{"beginToken":{"kind":38,"text":"int"},"endToken":{"kind":38,"text":"int"}},"type":"INT","annotations":[]}}]}},{"!":"com.github.javaparser.ast.stmt.WhileStmt","range":{"beginLine":261,"beginColumn":9,"endLine":264,"endColumn":9},"tokenRange":{"beginToken":{"kind":67,"text":"while"},"endToken":{"kind":103,"text":"}"}},"body":{"!":"com.github.javaparser.ast.stmt.BlockStmt","range":{"beginLine":261,"beginColumn":48,"endLine":264,"endColumn":9},"tokenRange":{"beginToken":{"kind":102,"text":"{"},"endToken":{"kind":103,"text":"}"}},"statements":[{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":262,"beginColumn":13,"endLine":262,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":262,"beginColumn":13,"endLine":262,"endColumn":38},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":262,"beginColumn":26,"endLine":262,"endColumn":31},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":97,"text":"buffer"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":262,"beginColumn":26,"endLine":262,"endColumn":31},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":97,"text":"buffer"}},"identifier":"buffer"}},{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":262,"beginColumn":34,"endLine":262,"endColumn":34},"tokenRange":{"beginToken":{"kind":80,"text":"0"},"endToken":{"kind":80,"text":"0"}},"value":"0"},{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":262,"beginColumn":37,"endLine":262,"endColumn":37},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":262,"beginColumn":37,"endLine":262,"endColumn":37},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"}}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":262,"beginColumn":20,"endLine":262,"endColumn":24},"tokenRange":{"beginToken":{"kind":97,"text":"write"},"endToken":{"kind":97,"text":"write"}},"identifier":"write"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":262,"beginColumn":13,"endLine":262,"endColumn":18},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":262,"beginColumn":13,"endLine":262,"endColumn":18},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"identifier":"output"}}}},{"!":"com.github.javaparser.ast.stmt.ExpressionStmt","range":{"beginLine":263,"beginColumn":13,"endLine":263,"endColumn":23},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.AssignExpr","range":{"beginLine":263,"beginColumn":13,"endLine":263,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"n"}},"operator":"PLUS","target":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":263,"beginColumn":13,"endLine":263,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":263,"beginColumn":13,"endLine":263,"endColumn":17},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"}},"value":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":263,"beginColumn":22,"endLine":263,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":263,"beginColumn":22,"endLine":263,"endColumn":22},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"}}}}]},"condition":{"!":"com.github.javaparser.ast.expr.BinaryExpr","range":{"beginLine":261,"beginColumn":16,"endLine":261,"endColumn":45},"tokenRange":{"beginToken":{"kind":128,"text":"-"},"endToken":{"kind":101,"text":")"}},"left":{"!":"com.github.javaparser.ast.expr.UnaryExpr","range":{"beginLine":261,"beginColumn":16,"endLine":261,"endColumn":17},"tokenRange":{"beginToken":{"kind":128,"text":"-"},"endToken":{"kind":80,"text":"1"}},"expression":{"!":"com.github.javaparser.ast.expr.IntegerLiteralExpr","range":{"beginLine":261,"beginColumn":17,"endLine":261,"endColumn":17},"tokenRange":{"beginToken":{"kind":80,"text":"1"},"endToken":{"kind":80,"text":"1"}},"value":"1"},"operator":"MINUS"},"operator":"NOT_EQUALS","right":{"!":"com.github.javaparser.ast.expr.EnclosedExpr","range":{"beginLine":261,"beginColumn":22,"endLine":261,"endColumn":45},"tokenRange":{"beginToken":{"kind":100,"text":"("},"endToken":{"kind":101,"text":")"}},"inner":{"!":"com.github.javaparser.ast.expr.AssignExpr","range":{"beginLine":261,"beginColumn":23,"endLine":261,"endColumn":44},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":101,"text":")"}},"operator":"ASSIGN","target":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":261,"beginColumn":23,"endLine":261,"endColumn":23},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":261,"beginColumn":23,"endLine":261,"endColumn":23},"tokenRange":{"beginToken":{"kind":97,"text":"n"},"endToken":{"kind":97,"text":"n"}},"identifier":"n"}},"value":{"!":"com.github.javaparser.ast.expr.MethodCallExpr","range":{"beginLine":261,"beginColumn":27,"endLine":261,"endColumn":44},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":101,"text":")"}},"arguments":[{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":261,"beginColumn":38,"endLine":261,"endColumn":43},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":97,"text":"buffer"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":261,"beginColumn":38,"endLine":261,"endColumn":43},"tokenRange":{"beginToken":{"kind":97,"text":"buffer"},"endToken":{"kind":97,"text":"buffer"}},"identifier":"buffer"}}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":261,"beginColumn":33,"endLine":261,"endColumn":36},"tokenRange":{"beginToken":{"kind":97,"text":"read"},"endToken":{"kind":97,"text":"read"}},"identifier":"read"},"scope":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":261,"beginColumn":27,"endLine":261,"endColumn":31},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":261,"beginColumn":27,"endLine":261,"endColumn":31},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"}}}}}}},{"!":"com.github.javaparser.ast.stmt.ReturnStmt","range":{"beginLine":265,"beginColumn":9,"endLine":265,"endColumn":21},"tokenRange":{"beginToken":{"kind":51,"text":"return"},"endToken":{"kind":106,"text":";"}},"expression":{"!":"com.github.javaparser.ast.expr.NameExpr","range":{"beginLine":265,"beginColumn":16,"endLine":265,"endColumn":20},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":265,"beginColumn":16,"endLine":265,"endColumn":20},"tokenRange":{"beginToken":{"kind":97,"text":"count"},"endToken":{"kind":97,"text":"count"}},"identifier":"count"}}}]},"type":{"!":"com.github.javaparser.ast.type.PrimitiveType","range":{"beginLine":257,"beginColumn":19,"endLine":257,"endColumn":22},"tokenRange":{"beginToken":{"kind":40,"text":"long"},"endToken":{"kind":40,"text":"long"}},"type":"LONG","annotations":[]},"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":257,"beginColumn":5,"endLine":257,"endColumn":10},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":49,"text":"public"}},"keyword":"PUBLIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":257,"beginColumn":12,"endLine":257,"endColumn":17},"tokenRange":{"beginToken":{"kind":54,"text":"static"},"endToken":{"kind":54,"text":"static"}},"keyword":"STATIC"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":257,"beginColumn":24,"endLine":257,"endColumn":32},"tokenRange":{"beginToken":{"kind":97,"text":"copyLarge"},"endToken":{"kind":97,"text":"copyLarge"}},"identifier":"copyLarge"},"parameters":[{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":257,"beginColumn":34,"endLine":257,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"Reader"},"endToken":{"kind":97,"text":"input"}},"annotations":[],"isVarArgs":"false","modifiers":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":257,"beginColumn":41,"endLine":257,"endColumn":45},"tokenRange":{"beginToken":{"kind":97,"text":"input"},"endToken":{"kind":97,"text":"input"}},"identifier":"input"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":257,"beginColumn":34,"endLine":257,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"Reader"},"endToken":{"kind":97,"text":"Reader"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":257,"beginColumn":34,"endLine":257,"endColumn":39},"tokenRange":{"beginToken":{"kind":97,"text":"Reader"},"endToken":{"kind":97,"text":"Reader"}},"identifier":"Reader"},"annotations":[]},"varArgsAnnotations":[]},{"!":"com.github.javaparser.ast.body.Parameter","range":{"beginLine":257,"beginColumn":48,"endLine":257,"endColumn":60},"tokenRange":{"beginToken":{"kind":97,"text":"Writer"},"endToken":{"kind":97,"text":"output"}},"annotations":[],"isVarArgs":"false","modifiers":[],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":257,"beginColumn":55,"endLine":257,"endColumn":60},"tokenRange":{"beginToken":{"kind":97,"text":"output"},"endToken":{"kind":97,"text":"output"}},"identifier":"output"},"type":{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":257,"beginColumn":48,"endLine":257,"endColumn":53},"tokenRange":{"beginToken":{"kind":97,"text":"Writer"},"endToken":{"kind":97,"text":"Writer"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":257,"beginColumn":48,"endLine":257,"endColumn":53},"tokenRange":{"beginToken":{"kind":97,"text":"Writer"},"endToken":{"kind":97,"text":"Writer"}},"identifier":"Writer"},"annotations":[]},"varArgsAnnotations":[]}],"thrownExceptions":[{"!":"com.github.javaparser.ast.type.ClassOrInterfaceType","range":{"beginLine":257,"beginColumn":70,"endLine":257,"endColumn":80},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":257,"beginColumn":70,"endLine":257,"endColumn":80},"tokenRange":{"beginToken":{"kind":97,"text":"IOException"},"endToken":{"kind":97,"text":"IOException"}},"identifier":"IOException"},"annotations":[]}],"typeParameters":[],"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":244,"beginColumn":5,"endLine":256,"endColumn":7},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n     * Copy chars from a large (over 2GB) <code>Reader</code> to a <code>Writer</code>.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedReader</code>.\n     *\n     * @param input  the <code>Reader</code> to read from\n     * @param output the <code>Writer</code> to write to\n     * @return the number of characters copied\n     * @throws NullPointerException if the input or output is null\n     * @throws IOException          if an I/O error occurs\n     * @since Commons IO 1.3\n     */"},"endToken":{"kind":8,"text":"/**\n     * Copy chars from a large (over 2GB) <code>Reader</code> to a <code>Writer</code>.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedReader</code>.\n     *\n     * @param input  the <code>Reader</code> to read from\n     * @param output the <code>Writer</code> to write to\n     * @return the number of characters copied\n     * @throws NullPointerException if the input or output is null\n     * @throws IOException          if an I/O error occurs\n     * @since Commons IO 1.3\n     */"}},"content":"\n     * Copy chars from a large (over 2GB) <code>Reader</code> to a <code>Writer</code>.\n     * <p>\n     * This method buffers the input internally, so there is no need to use a\n     * <code>BufferedReader</code>.\n     *\n     * @param input  the <code>Reader</code> to read from\n     * @param output the <code>Writer</code> to write to\n     * @return the number of characters copied\n     * @throws NullPointerException if the input or output is null\n     * @throws IOException          if an I/O error occurs\n     * @since Commons IO 1.3\n     "}}],"modifiers":[{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":72,"beginColumn":1,"endLine":72,"endColumn":6},"tokenRange":{"beginToken":{"kind":49,"text":"public"},"endToken":{"kind":49,"text":"public"}},"keyword":"PUBLIC"},{"!":"com.github.javaparser.ast.Modifier","range":{"beginLine":72,"beginColumn":8,"endLine":72,"endColumn":12},"tokenRange":{"beginToken":{"kind":29,"text":"final"},"endToken":{"kind":29,"text":"final"}},"keyword":"FINAL"}],"name":{"!":"com.github.javaparser.ast.expr.SimpleName","range":{"beginLine":72,"beginColumn":20,"endLine":72,"endColumn":26},"tokenRange":{"beginToken":{"kind":97,"text":"IOUtils"},"endToken":{"kind":97,"text":"IOUtils"}},"identifier":"IOUtils"},"annotations":[],"comment":{"!":"com.github.javaparser.ast.comments.JavadocComment","range":{"beginLine":29,"beginColumn":1,"endLine":71,"endColumn":3},"tokenRange":{"beginToken":{"kind":8,"text":"/**\n * General IO stream manipulation utilities.\n * <p>\n * This class provides static utility methods for input/output operations.\n * <ul>\n * <li>closeQuietly - these methods close a stream ignoring nulls and exceptions\n * <li>toXxx/read - these methods read data from a stream\n * <li>write - these methods write data to a stream\n * <li>copy - these methods copy all the data from one stream to another\n * <li>contentEquals - these methods compare the content of two streams\n * </ul>\n * <p>\n * The byte-to-char methods and char-to-byte methods involve a conversion step.\n * Two methods are provided in each case, one that uses the platform default\n * encoding and the other which allows you to specify an encoding. You are\n * encouraged to always specify an encoding because relying on the platform\n * default can lead to unexpected results, for example when moving from\n * development to production.\n * <p>\n * All the methods in this class that read a stream are buffered internally.\n * This means that there is no cause to use a <code>BufferedInputStream</code>\n * or <code>BufferedReader</code>. The default buffer size of 4K has been shown\n * to be efficient in tests.\n * <p>\n * Wherever possible, the methods in this class do <em>not</em> flush or close\n * the stream. This is to avoid making non-portable assumptions about the\n * streams' origin and further use. Thus the caller is still responsible for\n * closing streams after use.\n * <p>\n * Origin of code: Excalibur.\n *\n * @author Peter Donald\n * @author Jeff Turner\n * @author Matthew Hawthorne\n * @author Stephen Colebourne\n * @author Gareth Davis\n * @author Ian Springer\n * @author Niall Pemberton\n * @author Sandy McArthur\n * @version $Id: IOUtils.java 481854 2006-12-03 18:30:07Z scolebourne $\n *\n * Code copied from apache commons io source. Changes made (mostly removal of methods) by Per Wendel.\n */"},"endToken":{"kind":8,"text":"/**\n * General IO stream manipulation utilities.\n * <p>\n * This class provides static utility methods for input/output operations.\n * <ul>\n * <li>closeQuietly - these methods close a stream ignoring nulls and exceptions\n * <li>toXxx/read - these methods read data from a stream\n * <li>write - these methods write data to a stream\n * <li>copy - these methods copy all the data from one stream to another\n * <li>contentEquals - these methods compare the content of two streams\n * </ul>\n * <p>\n * The byte-to-char methods and char-to-byte methods involve a conversion step.\n * Two methods are provided in each case, one that uses the platform default\n * encoding and the other which allows you to specify an encoding. You are\n * encouraged to always specify an encoding because relying on the platform\n * default can lead to unexpected results, for example when moving from\n * development to production.\n * <p>\n * All the methods in this class that read a stream are buffered internally.\n * This means that there is no cause to use a <code>BufferedInputStream</code>\n * or <code>BufferedReader</code>. The default buffer size of 4K has been shown\n * to be efficient in tests.\n * <p>\n * Wherever possible, the methods in this class do <em>not</em> flush or close\n * the stream. This is to avoid making non-portable assumptions about the\n * streams' origin and further use. Thus the caller is still responsible for\n * closing streams after use.\n * <p>\n * Origin of code: Excalibur.\n *\n * @author Peter Donald\n * @author Jeff Turner\n * @author Matthew Hawthorne\n * @author Stephen Colebourne\n * @author Gareth Davis\n * @author Ian Springer\n * @author Niall Pemberton\n * @author Sandy McArthur\n * @version $Id: IOUtils.java 481854 2006-12-03 18:30:07Z scolebourne $\n *\n * Code copied from apache commons io source. Changes made (mostly removal of methods) by Per Wendel.\n */"}},"content":"\n * General IO stream manipulation utilities.\n * <p>\n * This class provides static utility methods for input/output operations.\n * <ul>\n * <li>closeQuietly - these methods close a stream ignoring nulls and exceptions\n * <li>toXxx/read - these methods read data from a stream\n * <li>write - these methods write data to a stream\n * <li>copy - these methods copy all the data from one stream to another\n * <li>contentEquals - these methods compare the content of two streams\n * </ul>\n * <p>\n * The byte-to-char methods and char-to-byte methods involve a conversion step.\n * Two methods are provided in each case, one that uses the platform default\n * encoding and the other which allows you to specify an encoding. You are\n * encouraged to always specify an encoding because relying on the platform\n * default can lead to unexpected results, for example when moving from\n * development to production.\n * <p>\n * All the methods in this class that read a stream are buffered internally.\n * This means that there is no cause to use a <code>BufferedInputStream</code>\n * or <code>BufferedReader</code>. The default buffer size of 4K has been shown\n * to be efficient in tests.\n * <p>\n * Wherever possible, the methods in this class do <em>not</em> flush or close\n * the stream. This is to avoid making non-portable assumptions about the\n * streams' origin and further use. Thus the caller is still responsible for\n * closing streams after use.\n * <p>\n * Origin of code: Excalibur.\n *\n * @author Peter Donald\n * @author Jeff Turner\n * @author Matthew Hawthorne\n * @author Stephen Colebourne\n * @author Gareth Davis\n * @author Ian Springer\n * @author Niall Pemberton\n * @author Sandy McArthur\n * @version $Id: IOUtils.java 481854 2006-12-03 18:30:07Z scolebourne $\n *\n * Code copied from apache commons io source. Changes made (mostly removal of methods) by Per Wendel.\n "}}],"comment":{"!":"com.github.javaparser.ast.comments.BlockComment","range":{"beginLine":1,"beginColumn":1,"endLine":16,"endColumn":3},"tokenRange":{"beginToken":{"kind":9,"text":"/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */"},"endToken":{"kind":9,"text":"/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */"}},"content":"\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n "}}