{"Application/spark-master/src/test/java/spark/GenericIntegrationTest.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":51,"fullExpression":"LoggerFactory.getLogger(GenericIntegrationTest.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":218,"fullExpression":"Assert.assertTrue(response.status == 401)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":410,"fullExpression":"Assert.assertTrue(response.status == 401)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":416,"fullExpression":"Assert.assertTrue(response.status == 404)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":507,"fullExpression":"Assert.assertEquals(3, events.size(), 3)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":508,"fullExpression":"Assert.assertEquals(\"onConnect\", events.get(0))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":509,"fullExpression":"Assert.assertEquals(\"onMessage: Hi Spark!\", events.get(1))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":510,"fullExpression":"Assert.assertEquals(\"onClose: 1000 Bye!\", events.get(2))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":516,"fullExpression":"Assert.assertTrue(response.status == 200)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":524,"fullExpression":"Assert.assertTrue(response.status == 200)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":532,"fullExpression":"Assert.assertTrue(response.status == 200)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/StaticFilesMemberTest.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":43,"fullExpression":"LoggerFactory.getLogger(StaticFilesMemberTest.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"debug","lineNumber":60,"fullExpression":"LOGGER.debug(\"tearDown().deleting: \" + tmpExternalFile)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":341,"declarationEndLine":341,"methodName":"debug","innerMethodCalls":[]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":107,"fullExpression":"Assert.assertEquals(expectedContentType, \"application/javascript\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":110,"fullExpression":"Assert.assertEquals(\"export default function () { console.log(\\\"Hello, I'm a .mjs file\\\"); }\\n\", body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/examples/templateview/FreeMarkerTemplateEngine.java":[{"declaringType":"freemarker.template.Configuration","methodName":"setClassForTemplateLoading","lineNumber":38,"fullExpression":"retVal.setClassForTemplateLoading(FreeMarkerTemplateEngine.class, \"freemarker\")","declarationInfo":null}],"Application/spark-master/src/test/java/spark/embeddedserver/jetty/SocketConnectorFactoryTest.java":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":24,"fullExpression":"fail(\"SocketConnector creation should have thrown an IllegalArgumentException\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":94,"declarationEndLine":96,"methodName":"fail","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":95,"fullExpression":"fail(null)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":26,"fullExpression":"assertEquals(\"'server' must not be null\", ex.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":38,"fullExpression":"fail(\"SocketConnector creation should have thrown an IllegalArgumentException\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":94,"declarationEndLine":96,"methodName":"fail","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":95,"fullExpression":"fail(null)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":40,"fullExpression":"assertEquals(\"'host' must not be null\", ex.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":57,"fullExpression":"assertEquals(\"Server Connector Host should be set to the specified server\", host, internalHost)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":58,"fullExpression":"assertEquals(\"Server Connector Port should be set to the specified port\", port, internalPort)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":59,"fullExpression":"assertEquals(\"Server Connector Server should be set to the specified server\", internalServerConnector, server)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":67,"fullExpression":"fail(\"SocketConnector creation should have thrown an IllegalArgumentException\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":94,"declarationEndLine":96,"methodName":"fail","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":95,"fullExpression":"fail(null)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":69,"fullExpression":"assertEquals(\"'server' must not be null\", ex.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":80,"fullExpression":"fail(\"SocketConnector creation should have thrown an IllegalArgumentException\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":94,"declarationEndLine":96,"methodName":"fail","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":95,"fullExpression":"fail(null)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":82,"fullExpression":"assertEquals(\"'host' must not be null\", ex.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":93,"fullExpression":"fail(\"SocketConnector creation should have thrown an IllegalArgumentException\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":94,"declarationEndLine":96,"methodName":"fail","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":95,"fullExpression":"fail(null)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":95,"fullExpression":"assertEquals(\"'sslStores' must not be null\", ex.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":121,"fullExpression":"assertEquals(\"Server Connector Host should be set to the specified server\", host, internalHost)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":122,"fullExpression":"assertEquals(\"Server Connector Port should be set to the specified port\", port, internalPort)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":126,"fullExpression":"assertTrue(\"Should return true because factory for SSL should have been set\", factories.containsKey(\"ssl\") && factories.get(\"ssl\") != null)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.eclipse.jetty.server.SslConnectionFactory","methodName":"getSslContextFactory","lineNumber":130,"fullExpression":"sslConnectionFactory.getSslContextFactory()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.jetty-server/org/eclipse/jetty/server/SslConnectionFactory.java","declarationStartLine":64,"declarationEndLine":67,"methodName":"getSslContextFactory","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/CookiesIntegrationTest.java":[{"declaringType":"org.apache.http.impl.client.HttpClientBuilder","methodName":"build","lineNumber":23,"fullExpression":"HttpClientBuilder.create().build()","declarationInfo":null},{"declaringType":"org.apache.http.impl.client.HttpClientBuilder","methodName":"create","lineNumber":23,"fullExpression":"HttpClientBuilder.create()","declarationInfo":null},{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":130,"fullExpression":"fail(ex.toString())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":94,"declarationEndLine":96,"methodName":"fail","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":95,"fullExpression":"fail(null)","declarationInfo":null}]}}],"Application/spark-master/src/main/java/spark/CustomErrorPages.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":32,"fullExpression":"LoggerFactory.getLogger(CustomErrorPages.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"warn","lineNumber":66,"fullExpression":"LOG.warn(\"Custom error page handler for status code {} has thrown an exception: {}. Using default page instead.\", status, e.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":592,"declarationEndLine":592,"methodName":"warn","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/ServiceTest.java":[{"declaringType":"org.junit.rules.ExpectedException","methodName":"none","lineNumber":31,"fullExpression":"ExpectedException.none()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/rules/ExpectedException.java","declarationStartLine":111,"declarationEndLine":113,"methodName":"none","innerMethodCalls":[]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":89,"fullExpression":"assertEquals(\"IP address should be set to the IP address that was specified\", IP_ADDRESS, ipAddress)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":106,"fullExpression":"assertEquals(\"IP address should be set to the IP address that was specified\", IP_ADDRESS, ipAddress)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":123,"fullExpression":"assertEquals(\"Port should be set to the Port that was specified\", 8080, port)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":140,"fullExpression":"assertEquals(\"Port should be set to the Port that was specified\", 8080, port)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":169,"fullExpression":"assertEquals(\"Port retrieved should be the port setted\", expectedPort, actualPort)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":179,"fullExpression":"assertEquals(\"Port retrieved should be the port setted\", expectedPort, actualPort)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":188,"fullExpression":"assertEquals(\"Should return maxThreads specified\", 100, maxThreads)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":189,"fullExpression":"assertEquals(\"Should return minThreads specified\", -1, minThreads)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":190,"fullExpression":"assertEquals(\"Should return threadIdleTimeoutMillis specified\", -1, threadIdleTimeoutMillis)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":199,"fullExpression":"assertEquals(\"Should return maxThreads specified\", 100, maxThreads)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":200,"fullExpression":"assertEquals(\"Should return minThreads specified\", 50, minThreads)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":201,"fullExpression":"assertEquals(\"Should return threadIdleTimeoutMillis specified\", 75, threadIdleTimeoutMillis)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/main/java/spark/http/matching/GeneralError.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":32,"fullExpression":"org.slf4j.LoggerFactory.getLogger(GeneralError.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"error","lineNumber":55,"fullExpression":"LOG.error(\"\", e)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":719,"declarationEndLine":719,"methodName":"error","innerMethodCalls":[]}}],"Application/spark-master/src/main/java/spark/Service.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":58,"fullExpression":"LoggerFactory.getLogger(\"spark.Spark\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"error","lineNumber":94,"fullExpression":"LOG.error(\"ignite failed\", e)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":719,"declarationEndLine":719,"methodName":"error","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"warn","lineNumber":346,"fullExpression":"LOG.warn(\"Static file location has already been set\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":592,"declarationEndLine":592,"methodName":"warn","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"warn","lineNumber":366,"fullExpression":"LOG.warn(\"External static file location has already been set\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":592,"declarationEndLine":592,"methodName":"warn","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":498,"fullExpression":"LOG.info(\"Interrupted by another thread\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"warn","lineNumber":531,"fullExpression":"LOG.warn(\"Interrupted by another thread\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":592,"declarationEndLine":592,"methodName":"warn","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"error","lineNumber":647,"fullExpression":"LOG.error(\"server interrupted\", e)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":719,"declarationEndLine":719,"methodName":"error","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/MultipleFiltersTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":32,"fullExpression":"Assert.assertEquals(counter, 2)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":36,"fullExpression":"Assert.assertEquals((int) request.attribute(\"counter\"), 1)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/globalstate/ServletFlagTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertFalse","lineNumber":27,"fullExpression":"assertFalse(\"Should be false because it is the default value\", isRunningFromServlet.get())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":73,"declarationEndLine":75,"methodName":"assertFalse","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertFalse","lineNumber":74,"fullExpression":"assertFalse(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":36,"fullExpression":"assertTrue(\"Should be true because it flag has been set after runFromServlet\", isRunningFromServlet.get())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/GzipTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":58,"fullExpression":"Assert.assertEquals(\"Content of css file\", decompressed)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/examples/transformer/JsonTransformer.java":[{"declaringType":"com.google.gson.Gson","methodName":"toJson","lineNumber":13,"fullExpression":"gson.toJson(model)","declarationInfo":null}],"Application/spark-master/src/main/java/spark/route/Routes.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":39,"fullExpression":"org.slf4j.LoggerFactory.getLogger(Routes.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"error","lineNumber":283,"fullExpression":"LOG.error(\"The @Route value: \" + route + \" has an invalid HTTP method part: \" + httpMethod + \".\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":719,"declarationEndLine":719,"methodName":"error","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"error","lineNumber":292,"fullExpression":"LOG.error(\"The @Route value: \" + route + \" is not in the correct format\", e)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":719,"declarationEndLine":719,"methodName":"error","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/embeddedserver/jetty/websocket/WebSocketCreatorFactoryTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":20,"fullExpression":"assertTrue(annotated instanceof SparkWebSocketCreator)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":21,"fullExpression":"assertTrue(SparkWebSocketCreator.class.cast(annotated).getHandler() instanceof AnnotatedHandler)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":25,"fullExpression":"assertTrue(listener instanceof SparkWebSocketCreator)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":26,"fullExpression":"assertTrue(SparkWebSocketCreator.class.cast(listener).getHandler() instanceof ListenerHandler)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":33,"fullExpression":"fail(\"Handler creation should have thrown an IllegalArgumentException\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":94,"declarationEndLine":96,"methodName":"fail","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":95,"fullExpression":"fail(null)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":35,"fullExpression":"assertEquals(\"WebSocket handler must implement 'WebSocketListener' or be annotated as '@WebSocket'\", ex.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":45,"fullExpression":"fail(\"Handler creation should have thrown a RunTimeException\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":94,"declarationEndLine":96,"methodName":"fail","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":95,"fullExpression":"fail(null)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":47,"fullExpression":"assertEquals(\"Could not instantiate websocket handler\", ex.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/RouteImplTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":53,"fullExpression":"assertNotNull(\"Should return an Object because we configured it to have one\", value)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":54,"fullExpression":"assertEquals(\"Should return a string object specified\", finalObjValue, value.toString())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"junit.framework.TestCase","methodName":"assertNull","lineNumber":61,"fullExpression":"assertNull(\"Should return null because the element from render is null\", value)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/junit/framework/TestCase.java","declarationStartLine":445,"declarationEndLine":448,"methodName":"assertNull","innerMethodCalls":[{"declaringType":"junit.framework.Assert","methodName":"assertNull","lineNumber":447,"fullExpression":"Assert.assertNull(message, object)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/RequestTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":73,"fullExpression":"assertEquals(\"Invalid name in query string\", \"Federico\", name)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":82,"fullExpression":"assertEquals(\"Invalid name in query string\", \"Federico\", name)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":91,"fullExpression":"assertEquals(\"Invalid name in default value\", \"David\", name)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":102,"fullExpression":"assertEquals(\"Invalid name in query string\", \"Federico\", name)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.mockito.Mockito","methodName":"times","lineNumber":184,"fullExpression":"times(2)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.mockito.mockito-core/org/mockito/Mockito.java","declarationStartLine":2017,"declarationEndLine":2019,"methodName":"times","innerMethodCalls":[{"declaringType":"org.mockito.internal.verification.VerificationModeFactory","methodName":"times","lineNumber":2018,"fullExpression":"VerificationModeFactory.times(wantedNumberOfInvocations)","declarationInfo":null}]}},{"declaringType":"org.mockito.Mockito","methodName":"times","lineNumber":195,"fullExpression":"times(2)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.mockito.mockito-core/org/mockito/Mockito.java","declarationStartLine":2017,"declarationEndLine":2019,"methodName":"times","innerMethodCalls":[{"declaringType":"org.mockito.internal.verification.VerificationModeFactory","methodName":"times","lineNumber":2018,"fullExpression":"VerificationModeFactory.times(wantedNumberOfInvocations)","declarationInfo":null}]}},{"declaringType":"org.mockito.Mockito","methodName":"times","lineNumber":207,"fullExpression":"times(1)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.mockito.mockito-core/org/mockito/Mockito.java","declarationStartLine":2017,"declarationEndLine":2019,"methodName":"times","innerMethodCalls":[{"declaringType":"org.mockito.internal.verification.VerificationModeFactory","methodName":"times","lineNumber":2018,"fullExpression":"VerificationModeFactory.times(wantedNumberOfInvocations)","declarationInfo":null}]}},{"declaringType":"org.mockito.Mockito","methodName":"times","lineNumber":218,"fullExpression":"times(1)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.mockito.mockito-core/org/mockito/Mockito.java","declarationStartLine":2017,"declarationEndLine":2019,"methodName":"times","innerMethodCalls":[{"declaringType":"org.mockito.internal.verification.VerificationModeFactory","methodName":"times","lineNumber":2018,"fullExpression":"VerificationModeFactory.times(wantedNumberOfInvocations)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":237,"fullExpression":"assertTrue(\"The count of cookies returned should be the same as those in the request\", request.cookies().size() == 2)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":252,"fullExpression":"assertTrue(\"The Map of cookies should be empty because cookies are not present in the request\", request.cookies().size() == 0)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":479,"fullExpression":"assertArrayEquals(\"Should return the query parameter names\", params.keySet().toArray(), result.toArray())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":513,"declarationEndLine":515,"methodName":"assertArrayEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":514,"fullExpression":"assertArrayEquals(null, expecteds, actuals, delta)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/QueryParamsMapTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":69,"fullExpression":"assertEquals(\"user\", parsed[0])","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":70,"fullExpression":"assertEquals(\"[name][more]\", parsed[1])","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":79,"fullExpression":"assertEquals(\"name\", parsed[0])","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":80,"fullExpression":"assertEquals(\"[more]\", parsed[1])","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":84,"fullExpression":"assertEquals(\"more\", parsed[0])","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":85,"fullExpression":"assertEquals(\"\", parsed[1])","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNull","lineNumber":94,"fullExpression":"assertNull(ret)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":746,"declarationEndLine":748,"methodName":"assertNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNull","lineNumber":747,"fullExpression":"assertNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":118,"fullExpression":"assertEquals(2, map.size())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":119,"fullExpression":"assertEquals(\"fede\", map.get(\"name\")[0])","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":120,"fullExpression":"assertEquals(\"dayan\", map.get(\"last\")[0])","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/main/java/spark/Request.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":48,"fullExpression":"org.slf4j.LoggerFactory.getLogger(Request.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"warn","lineNumber":275,"fullExpression":"LOG.warn(\"Exception when reading body\", e)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":592,"declarationEndLine":592,"methodName":"warn","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"debug","lineNumber":529,"fullExpression":"LOG.debug(\"matchedPart: \" + matchedPart + \" = \" + decodedReq)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":341,"declarationEndLine":341,"methodName":"debug","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/ServicePortIntegrationTest.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":19,"fullExpression":"LoggerFactory.getLogger(ServicePortIntegrationTest.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":35,"fullExpression":"LOGGER.info(\"got port \")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}}],"Application/spark-master/src/main/java/spark/servlet/SparkFilter.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":49,"fullExpression":"LoggerFactory.getLogger(SparkFilter.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"isDebugEnabled","lineNumber":151,"fullExpression":"LOG.isDebugEnabled()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":290,"declarationEndLine":290,"methodName":"isDebugEnabled","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"debug","lineNumber":152,"fullExpression":"LOG.debug(relativePath)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":341,"declarationEndLine":341,"methodName":"debug","innerMethodCalls":[]}}],"Application/spark-master/src/main/java/spark/Response.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":38,"fullExpression":"LoggerFactory.getLogger(Response.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"isDebugEnabled","lineNumber":119,"fullExpression":"LOG.isDebugEnabled()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":290,"declarationEndLine":290,"methodName":"isDebugEnabled","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"warn","lineNumber":125,"fullExpression":"LOG.warn(\"Redirect failure\", ioException)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":592,"declarationEndLine":592,"methodName":"warn","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"isDebugEnabled","lineNumber":136,"fullExpression":"LOG.isDebugEnabled()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":290,"declarationEndLine":290,"methodName":"isDebugEnabled","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"debug","lineNumber":137,"fullExpression":"LOG.debug(\"Redirecting ({} to {}\", httpStatusCode, location)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":341,"declarationEndLine":341,"methodName":"debug","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"warn","lineNumber":145,"fullExpression":"LOG.warn(\"Exception when trying to redirect permanently\", e)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":592,"declarationEndLine":592,"methodName":"warn","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/ResponseTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":70,"fullExpression":"assertEquals(\"Should return body specified\", finalBody, returnBody)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":79,"fullExpression":"assertEquals(\"Should return body specified\", finalBody, returnBody)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.mockito.Mockito","methodName":"times","lineNumber":265,"fullExpression":"times(2)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.mockito.mockito-core/org/mockito/Mockito.java","declarationStartLine":2017,"declarationEndLine":2019,"methodName":"times","innerMethodCalls":[{"declaringType":"org.mockito.internal.verification.VerificationModeFactory","methodName":"times","lineNumber":2018,"fullExpression":"VerificationModeFactory.times(wantedNumberOfInvocations)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/BodyAvailabilityTest.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":18,"fullExpression":"LoggerFactory.getLogger(BodyAvailabilityTest.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"debug","lineNumber":41,"fullExpression":"LOGGER.debug(\"setup()\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":341,"declarationEndLine":341,"methodName":"debug","innerMethodCalls":[]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":75,"fullExpression":"Assert.assertEquals(BODY_CONTENT, beforeBody)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":76,"fullExpression":"Assert.assertEquals(BODY_CONTENT, routeBody)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":77,"fullExpression":"Assert.assertEquals(BODY_CONTENT, afterBody)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/util/ResourceUtilsTest.java":[{"declaringType":"org.junit.rules.ExpectedException","methodName":"none","lineNumber":20,"fullExpression":"ExpectedException.none()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/rules/ExpectedException.java","declarationStartLine":111,"declarationEndLine":113,"methodName":"none","innerMethodCalls":[]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":44,"fullExpression":"assertEquals(\"Should be equals because URL protocol is file\", file, new File(ResourceUtils.toURI(url).getSchemeSpecificPart()))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/util/SparkTestUtil.java":[{"declaringType":"org.apache.http.impl.client.HttpClientBuilder","methodName":"build","lineNumber":52,"fullExpression":"httpClientBuilder().build()","declarationInfo":null},{"declaringType":"org.apache.http.impl.client.HttpClientBuilder","methodName":"setConnectionManager","lineNumber":64,"fullExpression":"HttpClientBuilder.create().setConnectionManager(connManager)","declarationInfo":null},{"declaringType":"org.apache.http.impl.client.HttpClientBuilder","methodName":"create","lineNumber":64,"fullExpression":"HttpClientBuilder.create()","declarationInfo":null},{"declaringType":"org.apache.http.impl.client.HttpClientBuilder","methodName":"build","lineNumber":86,"fullExpression":"httpClientBuilder().setRedirectStrategy(redirectStrategy).build()","declarationInfo":null},{"declaringType":"org.apache.http.impl.client.HttpClientBuilder","methodName":"setRedirectStrategy","lineNumber":86,"fullExpression":"httpClientBuilder().setRedirectStrategy(redirectStrategy)","declarationInfo":null}],"Application/spark-master/src/test/java/spark/embeddedserver/jetty/websocket/WebSocketServletContextHandlerFactoryTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":55,"fullExpression":"assertNotNull(\"Should return a WebSocketUpgradeFilter because we configured it to have one\", webSocketUpgradeFilter)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":91,"fullExpression":"assertNotNull(\"Should return a WebSocketUpgradeFilter because we configured it to have one\", webSocketUpgradeFilter)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.eclipse.jetty.websocket.server.NativeWebSocketConfiguration","methodName":"getFactory","lineNumber":96,"fullExpression":"webSocketConfiguration.getFactory()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.websocket.websocket-server/org/eclipse/jetty/websocket/server/NativeWebSocketConfiguration.java","declarationStartLine":73,"declarationEndLine":76,"methodName":"getFactory","innerMethodCalls":[]}},{"declaringType":"org.eclipse.jetty.websocket.server.WebSocketServerFactory","methodName":"getPolicy","lineNumber":98,"fullExpression":"webSocketServerFactory.getPolicy()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.websocket.websocket-server/org/eclipse/jetty/websocket/server/WebSocketServerFactory.java","declarationStartLine":517,"declarationEndLine":521,"methodName":"getPolicy","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/SessionTest.java":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":37,"fullExpression":"fail(\"Session instantiation with a null HttpSession should throw an IllegalArgumentException\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":94,"declarationEndLine":96,"methodName":"fail","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":95,"fullExpression":"fail(null)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":41,"fullExpression":"assertEquals(\"session cannot be null\", ex.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":51,"fullExpression":"fail(\"Session instantiation with a null Request should throw an IllegalArgumentException\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":94,"declarationEndLine":96,"methodName":"fail","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":95,"fullExpression":"fail(null)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":55,"fullExpression":"assertEquals(\"request cannot be null\", ex.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/staticfiles/StaticFilesTestExternal.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":44,"fullExpression":"LoggerFactory.getLogger(StaticFilesTestExternal.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"debug","lineNumber":63,"fullExpression":"LOGGER.debug(\"tearDown(). Deleting tmp files\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":341,"declarationEndLine":341,"methodName":"debug","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/examples/filter/FilterExampleAttributes.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":32,"fullExpression":"LoggerFactory.getLogger(FilterExampleAttributes.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":42,"fullExpression":"LOGGER.info(\"attr: \" + attr)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/embeddedserver/jetty/JettyServerTest.java":[{"declaringType":"org.eclipse.jetty.server.Server","methodName":"getThreadPool","lineNumber":16,"fullExpression":"server.getThreadPool()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.jetty-server/org/eclipse/jetty/server/Server.java","declarationStartLine":286,"declarationEndLine":290,"methodName":"getThreadPool","innerMethodCalls":[]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":22,"fullExpression":"assertEquals(\"Server thread pool default minThreads should be 8\", 8, minThreads)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":23,"fullExpression":"assertEquals(\"Server thread pool default maxThreads should be 200\", 200, maxThreads)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":24,"fullExpression":"assertEquals(\"Server thread pool default idleTimeout should be 60000\", 60000, idleTimeout)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.eclipse.jetty.server.Server","methodName":"getThreadPool","lineNumber":31,"fullExpression":"server.getThreadPool()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.jetty-server/org/eclipse/jetty/server/Server.java","declarationStartLine":286,"declarationEndLine":290,"methodName":"getThreadPool","innerMethodCalls":[]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":37,"fullExpression":"assertEquals(\"Server thread pool default minThreads should be 8\", 8, minThreads)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":38,"fullExpression":"assertEquals(\"Server thread pool default maxThreads should be the same as specified\", 9, maxThreads)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":39,"fullExpression":"assertEquals(\"Server thread pool default idleTimeout should be 60000\", 60000, idleTimeout)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":47,"fullExpression":"fail(\"expected IllegalArgumentException\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":94,"declarationEndLine":96,"methodName":"fail","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"fail","lineNumber":95,"fullExpression":"fail(null)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":50,"fullExpression":"assertEquals(\"max threads (2) less than min threads (8)\", expected.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/main/java/spark/staticfiles/StaticFilesFolder.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":14,"fullExpression":"LoggerFactory.getLogger(StaticFilesFolder.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"warn","lineNumber":29,"fullExpression":"LOG.warn(\"Registering external static files folder [{}] as [{}].\", folder, unixLikeFolder)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":592,"declarationEndLine":592,"methodName":"warn","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/staticfiles/StaticFilesTest.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":44,"fullExpression":"LoggerFactory.getLogger(StaticFilesTest.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"debug","lineNumber":61,"fullExpression":"LOGGER.debug(\"tearDown().deleting: \" + tmpExternalFile)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":341,"declarationEndLine":341,"methodName":"debug","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/ResponseBodyTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":61,"fullExpression":"assertEquals(HELLO_WORLD, body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":71,"fullExpression":"assertEquals(XIDXUS, body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":81,"fullExpression":"assertEquals(GALLUS_SCANDALUM, body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":91,"fullExpression":"assertEquals($11AB, body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/serialization/InputStreamSerializerTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":20,"fullExpression":"Assert.assertArrayEquals(bytes, output.toByteArray())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":513,"declarationEndLine":515,"methodName":"assertArrayEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":514,"fullExpression":"assertArrayEquals(null, expecteds, actuals, delta)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":30,"fullExpression":"Assert.assertTrue(\"Expected stream to be closed\", input.closed)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/StaticFilesFromArchiveTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":86,"fullExpression":"assertEquals(expectedContentType, \"text/css\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":89,"fullExpression":"assertEquals(\"Content of css file\", body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/BooksIntegrationTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":65,"fullExpression":"assertNotNull(response)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":66,"fullExpression":"assertNotNull(response.body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":67,"fullExpression":"assertTrue(Integer.valueOf(response.body) > 0)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":68,"fullExpression":"assertEquals(201, response.status)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":77,"fullExpression":"assertNotNull(response)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":79,"fullExpression":"assertNotNull(body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":80,"fullExpression":"assertTrue(Integer.valueOf(body) > 0)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":81,"fullExpression":"assertEquals(200, response.status)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":82,"fullExpression":"assertTrue(response.body.contains(bookId))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":92,"fullExpression":"assertNotNull(response)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":93,"fullExpression":"assertNotNull(response.body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":94,"fullExpression":"assertEquals(200, response.status)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":95,"fullExpression":"assertTrue(result.contains(AUTHOR))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":96,"fullExpression":"assertTrue(result.contains(TITLE))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":97,"fullExpression":"assertTrue(beforeFilterIsSet(response))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":98,"fullExpression":"assertTrue(afterFilterIsSet(response))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":108,"fullExpression":"assertNotNull(response)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":109,"fullExpression":"assertNotNull(response.body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":110,"fullExpression":"assertEquals(200, response.status)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":111,"fullExpression":"assertTrue(result.contains(bookId))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":112,"fullExpression":"assertTrue(result.contains(\"updated\"))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":123,"fullExpression":"assertNotNull(response)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":124,"fullExpression":"assertNotNull(response.body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":125,"fullExpression":"assertEquals(200, response.status)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":126,"fullExpression":"assertTrue(result.contains(AUTHOR))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":127,"fullExpression":"assertTrue(result.contains(NEW_TITLE))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":137,"fullExpression":"assertNotNull(response)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":138,"fullExpression":"assertNotNull(response.body)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":721,"declarationEndLine":723,"methodName":"assertNotNull","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertNotNull","lineNumber":722,"fullExpression":"assertNotNull(null, object)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":139,"fullExpression":"assertEquals(200, response.status)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":140,"fullExpression":"assertTrue(result.contains(bookId))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":141,"fullExpression":"assertTrue(result.contains(\"deleted\"))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/staticfiles/DisableMimeGuessingTest.java":[{"declaringType":"org.slf4j.Logger","methodName":"debug","lineNumber":56,"fullExpression":"LOGGER.debug(\"tearDown().deleting: \" + tmpExternalFile)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":341,"declarationEndLine":341,"methodName":"debug","innerMethodCalls":[]}}],"Application/spark-master/src/main/java/spark/embeddedserver/jetty/EmbeddedJettyServer.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":55,"fullExpression":"LoggerFactory.getLogger(this.getClass())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"error","lineNumber":98,"fullExpression":"logger.error(\"Could not get first available port (port set to 0), using default: {}\", SPARK_DEFAULT_PORT)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":719,"declarationEndLine":719,"methodName":"error","innerMethodCalls":[]}},{"declaringType":"org.eclipse.jetty.server.Server","methodName":"getConnectors","lineNumber":118,"fullExpression":"server.getConnectors()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.jetty-server/org/eclipse/jetty/server/Server.java","declarationStartLine":216,"declarationEndLine":221,"methodName":"getConnectors","innerMethodCalls":[]}},{"declaringType":"org.eclipse.jetty.server.AbstractConnector","methodName":"getServer","lineNumber":119,"fullExpression":"connector.getServer()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.jetty-server/org/eclipse/jetty/server/AbstractConnector.java","declarationStartLine":250,"declarationEndLine":254,"methodName":"getServer","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":147,"fullExpression":"logger.info(\"== {} has ignited ...\", NAME)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":149,"fullExpression":"logger.info(\">> Listening on Custom Server ports!\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":151,"fullExpression":"logger.info(\">> Listening on {}:{}\", host, port)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}},{"declaringType":"org.eclipse.jetty.server.Server","methodName":"join","lineNumber":163,"fullExpression":"server.join()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.jetty-server/org/eclipse/jetty/server/Server.java","declarationStartLine":564,"declarationEndLine":567,"methodName":"join","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":171,"fullExpression":"logger.info(\">>> {} shutting down ...\", NAME)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"error","lineNumber":177,"fullExpression":"logger.error(\"stop failed\", e)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":719,"declarationEndLine":719,"methodName":"error","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":180,"fullExpression":"logger.info(\"done\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}},{"declaringType":"org.eclipse.jetty.server.Server","methodName":"getThreadPool","lineNumber":188,"fullExpression":"server.getThreadPool()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.jetty-server/org/eclipse/jetty/server/Server.java","declarationStartLine":286,"declarationEndLine":290,"methodName":"getThreadPool","innerMethodCalls":[]}},{"declaringType":"org.eclipse.jetty.server.Server","methodName":"getThreadPool","lineNumber":188,"fullExpression":"server.getThreadPool()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.jetty-server/org/eclipse/jetty/server/Server.java","declarationStartLine":286,"declarationEndLine":290,"methodName":"getThreadPool","innerMethodCalls":[]}}],"Application/spark-master/src/main/java/spark/staticfiles/StaticFilesConfiguration.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":48,"fullExpression":"LoggerFactory.getLogger(StaticFilesConfiguration.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":150,"fullExpression":"LOG.info(\"StaticResourceHandler configured with folder = \" + folder)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"error","lineNumber":167,"fullExpression":"LOG.error(\"External Static resource location must be a folder\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":719,"declarationEndLine":719,"methodName":"error","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":175,"fullExpression":"LOG.info(\"External StaticResourceHandler configured with folder = \" + folder)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"error","lineNumber":177,"fullExpression":"LOG.error(\"Error when creating external StaticResourceHandler\", e)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":719,"declarationEndLine":719,"methodName":"error","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/embeddedserver/jetty/EmbeddedJettyFactoryTest.java":[{"declaringType":"org.mockito.Mockito","methodName":"times","lineNumber":41,"fullExpression":"times(1)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.mockito.mockito-core/org/mockito/Mockito.java","declarationStartLine":2017,"declarationEndLine":2019,"methodName":"times","innerMethodCalls":[{"declaringType":"org.mockito.internal.verification.VerificationModeFactory","methodName":"times","lineNumber":2018,"fullExpression":"VerificationModeFactory.times(wantedNumberOfInvocations)","declarationInfo":null}]}},{"declaringType":"org.mockito.Mockito","methodName":"times","lineNumber":62,"fullExpression":"times(1)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.mockito.mockito-core/org/mockito/Mockito.java","declarationStartLine":2017,"declarationEndLine":2019,"methodName":"times","innerMethodCalls":[{"declaringType":"org.mockito.internal.verification.VerificationModeFactory","methodName":"times","lineNumber":2018,"fullExpression":"VerificationModeFactory.times(wantedNumberOfInvocations)","declarationInfo":null}]}},{"declaringType":"org.mockito.Mockito","methodName":"times","lineNumber":81,"fullExpression":"times(1)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.mockito.mockito-core/org/mockito/Mockito.java","declarationStartLine":2017,"declarationEndLine":2019,"methodName":"times","innerMethodCalls":[{"declaringType":"org.mockito.internal.verification.VerificationModeFactory","methodName":"times","lineNumber":2018,"fullExpression":"VerificationModeFactory.times(wantedNumberOfInvocations)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/InitExceptionHandlerTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertEquals","lineNumber":27,"fullExpression":"Assert.assertEquals(\"Custom init error\", errorMessage)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":891,"declarationEndLine":894,"methodName":"assertEquals","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertArrayEquals","lineNumber":893,"fullExpression":"assertArrayEquals(expecteds, actuals)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/servlet/ServletTest.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":24,"fullExpression":"LoggerFactory.getLogger(ServletTest.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":62,"fullExpression":"LOGGER.info(\">>> STARTING EMBEDDED JETTY SERVER for jUnit testing of SparkFilter\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":66,"fullExpression":"LOGGER.info(\">>> STOPPING EMBEDDED JETTY SERVER\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}},{"declaringType":"org.eclipse.jetty.server.Server","methodName":"join","lineNumber":68,"fullExpression":"server.join()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.jetty-server/org/eclipse/jetty/server/Server.java","declarationStartLine":564,"declarationEndLine":567,"methodName":"join","innerMethodCalls":[]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":123,"fullExpression":"Assert.assertTrue(urlResponse.status == 401)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":129,"fullExpression":"Assert.assertTrue(urlResponse.status == 404)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}}],"Application/spark-master/src/main/java/spark/embeddedserver/jetty/websocket/WebSocketServletContextHandlerFactory.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":35,"fullExpression":"LoggerFactory.getLogger(WebSocketServletContextHandlerFactory.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.eclipse.jetty.websocket.servlet.WebSocketServletFactory","methodName":"getPolicy","lineNumber":52,"fullExpression":"webSocketUpgradeFilter.getFactory().getPolicy()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.websocket.websocket-servlet/org/eclipse/jetty/websocket/servlet/WebSocketServletFactory.java","declarationStartLine":98,"declarationEndLine":98,"methodName":"getPolicy","innerMethodCalls":[]}},{"declaringType":"org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter","methodName":"getFactory","lineNumber":52,"fullExpression":"webSocketUpgradeFilter.getFactory()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.eclipse.jetty.websocket.websocket-server/org/eclipse/jetty/websocket/server/WebSocketUpgradeFilter.java","declarationStartLine":364,"declarationEndLine":367,"methodName":"getFactory","innerMethodCalls":[{"declaringType":"org.eclipse.jetty.websocket.server.NativeWebSocketConfiguration","methodName":"getFactory","lineNumber":366,"fullExpression":"configuration.getFactory()","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"error","lineNumber":64,"fullExpression":"logger.error(\"creation of websocket context handler failed.\", ex)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":719,"declarationEndLine":719,"methodName":"error","innerMethodCalls":[]}}],"Application/spark-master/src/main/java/spark/http/matching/MatcherFilter.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":47,"fullExpression":"org.slf4j.LoggerFactory.getLogger(MatcherFilter.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":167,"fullExpression":"LOG.info(\"The requested route [{}] has not been mapped in Spark for {}: [{}]\", uri, ACCEPT_TYPE_REQUEST_MIME_HEADER, acceptType)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/examples/filter/DummyFilter.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":28,"fullExpression":"LoggerFactory.getLogger(DummyFilter.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":32,"fullExpression":"LOGGER.info(\"Before\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"info","lineNumber":36,"fullExpression":"LOGGER.info(\"After\")","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":466,"declarationEndLine":466,"methodName":"info","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/Base64Test.java":[{"declaringType":"org.junit.Assert","methodName":"assertFalse","lineNumber":16,"fullExpression":"Assert.assertFalse(in.equals(encode))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":73,"declarationEndLine":75,"methodName":"assertFalse","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertFalse","lineNumber":74,"fullExpression":"assertFalse(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":27,"fullExpression":"Assert.assertTrue(in.equals(decode))","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/MultipleServicesTest.java":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":115,"fullExpression":"Assert.assertTrue(isUriOnList)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}}],"Application/spark-master/src/test/java/spark/GenericSecureIntegrationTest.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":27,"fullExpression":"LoggerFactory.getLogger(GenericSecureIntegrationTest.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":142,"fullExpression":"Assert.assertTrue(urlResponse.status == 401)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":148,"fullExpression":"Assert.assertTrue(urlResponse.status == 404)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}}],"Application/spark-master/src/main/java/spark/resource/ClassPathResourceHandler.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":33,"fullExpression":"LoggerFactory.getLogger(ClassPathResourceHandler.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"isDebugEnabled","lineNumber":92,"fullExpression":"LOG.isDebugEnabled()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":290,"declarationEndLine":290,"methodName":"isDebugEnabled","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"debug","lineNumber":93,"fullExpression":"LOG.debug(e.getClass().getSimpleName() + \" when trying to get resource. \" + e.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":341,"declarationEndLine":341,"methodName":"debug","innerMethodCalls":[]}}],"Application/spark-master/src/test/java/spark/embeddedserver/EmbeddedServersTest.java":[{"declaringType":"org.junit.rules.TemporaryFolder","methodName":"newFolder","lineNumber":33,"fullExpression":"temporaryFolder.newFolder()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/rules/TemporaryFolder.java","declarationStartLine":129,"declarationEndLine":131,"methodName":"newFolder","innerMethodCalls":[{"declaringType":"org.junit.rules.TemporaryFolder","methodName":"createTemporaryFolderIn","lineNumber":130,"fullExpression":"createTemporaryFolderIn(getRoot())","declarationInfo":null},{"declaringType":"org.junit.rules.TemporaryFolder","methodName":"getRoot","lineNumber":130,"fullExpression":"getRoot()","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":49,"fullExpression":"assertTrue(requestLogFile.exists())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}},{"declaringType":"org.junit.rules.TemporaryFolder","methodName":"newFolder","lineNumber":56,"fullExpression":"temporaryFolder.newFolder()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/rules/TemporaryFolder.java","declarationStartLine":129,"declarationEndLine":131,"methodName":"newFolder","innerMethodCalls":[{"declaringType":"org.junit.rules.TemporaryFolder","methodName":"createTemporaryFolderIn","lineNumber":130,"fullExpression":"createTemporaryFolderIn(getRoot())","declarationInfo":null},{"declaringType":"org.junit.rules.TemporaryFolder","methodName":"getRoot","lineNumber":130,"fullExpression":"getRoot()","declarationInfo":null}]}},{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":75,"fullExpression":"assertTrue(requestLogFile.exists())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/junit.junit/org/junit/Assert.java","declarationStartLine":51,"declarationEndLine":53,"methodName":"assertTrue","innerMethodCalls":[{"declaringType":"org.junit.Assert","methodName":"assertTrue","lineNumber":52,"fullExpression":"assertTrue(null, condition)","declarationInfo":null}]}}],"Application/spark-master/src/main/java/spark/resource/ExternalResourceHandler.java":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":33,"fullExpression":"LoggerFactory.getLogger(ExternalResourceHandler.class)","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/LoggerFactory.java","declarationStartLine":382,"declarationEndLine":393,"methodName":"getLogger","innerMethodCalls":[{"declaringType":"org.slf4j.LoggerFactory","methodName":"getLogger","lineNumber":383,"fullExpression":"getLogger(clazz.getName())","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"getCallingClass","lineNumber":385,"fullExpression":"Util.getCallingClass()","declarationInfo":null},{"declaringType":"org.slf4j.LoggerFactory","methodName":"nonMatchingClasses","lineNumber":386,"fullExpression":"nonMatchingClasses(clazz, autoComputedCallingClass)","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":387,"fullExpression":"Util.report(String.format(\"Detected logger name mismatch. Given name: \\\"%s\\\"; computed name: \\\"%s\\\".\", logger.getName(), autoComputedCallingClass.getName()))","declarationInfo":null},{"declaringType":"org.slf4j.Logger","methodName":"getName","lineNumber":387,"fullExpression":"logger.getName()","declarationInfo":null},{"declaringType":"org.slf4j.helpers.Util","methodName":"report","lineNumber":389,"fullExpression":"Util.report(\"See \" + LOGGER_NAME_MISMATCH_URL + \" for an explanation\")","declarationInfo":null}]}},{"declaringType":"org.slf4j.Logger","methodName":"isDebugEnabled","lineNumber":91,"fullExpression":"LOG.isDebugEnabled()","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":290,"declarationEndLine":290,"methodName":"isDebugEnabled","innerMethodCalls":[]}},{"declaringType":"org.slf4j.Logger","methodName":"debug","lineNumber":92,"fullExpression":"LOG.debug(e.getClass().getSimpleName() + \" when trying to get resource. \" + e.getMessage())","declarationInfo":{"sourceFilePath":"/Users/yunzezhao/Code/CovSBOM/decompressed/org.slf4j.slf4j-api/org/slf4j/Logger.java","declarationStartLine":341,"declarationEndLine":341,"methodName":"debug","innerMethodCalls":[]}}]}