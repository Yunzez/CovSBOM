{"Application/XChart-develop/xchart/src/main/java/org/knowm/xchart/GifEncoder.java":[{"declaringType":"com.madgag.gif.fmsware.AnimatedGifEncoder","methodSignature":"setRepeat(int)","methodName":"setRepeat","lineNumber":["33"],"fullExpression":"gif.setRepeat(repeat)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.madgag.gif.fmsware.AnimatedGifEncoder","methodSignature":"setDelay(int)","methodName":"setDelay","lineNumber":["35"],"fullExpression":"gif.setDelay(delay)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.madgag.gif.fmsware.AnimatedGifEncoder","methodSignature":"addFrame(java.awt.image.BufferedImage)","methodName":"addFrame","lineNumber":["37"],"fullExpression":"gif.addFrame(image)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.madgag.gif.fmsware.AnimatedGifEncoder","methodSignature":"finish()","methodName":"finish","lineNumber":["39"],"fullExpression":"gif.finish()","currentLayer":0,"declarationInfo":null}],"Application/XChart-develop/xchart/src/test/java/org/knowm/xchart/CategoryChartTest.java":[{"declaringType":"org.junit.jupiter.api.Assertions","methodSignature":"assertDoesNotThrow(org.junit.jupiter.api.function.Executable)","methodName":"assertDoesNotThrow","lineNumber":["38","39","40","41"],"fullExpression":"assertDoesNotThrow(() -> new CategoryChart(800, 600))","currentLayer":0,"declarationInfo":null},{"declaringType":"org.assertj.core.api.AbstractAssert","methodSignature":"isInstanceOf(java.lang.Class<?>)","methodName":"isInstanceOf","lineNumber":["46","64","75","89","103","117","160"],"fullExpression":"assertThatThrownBy(() -> {\n    chart.addSeries(\"a\", Arrays.asList(1, 2, 3, 4, 5), Arrays.asList(10, 2, 30, 40, 50), Arrays.asList(1, 3, 2, 1, 2));\n    chart.addSeries(\"a\", Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\"), Arrays.asList(10, 25, 30., 4, 5));\n}).isInstanceOf(IllegalArgumentException.class)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.assertj.core.api.Assertions","methodSignature":"assertThatThrownBy(org.assertj.core.api.ThrowableAssert.ThrowingCallable)","methodName":"assertThatThrownBy","lineNumber":["46","64","75","89","103","117","160"],"fullExpression":"assertThatThrownBy(() -> {\n    chart.addSeries(\"a\", Arrays.asList(1, 2, 3, 4, 5), Arrays.asList(10, 2, 30, 40, 50), Arrays.asList(1, 3, 2, 1, 2));\n    chart.addSeries(\"a\", Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\"), Arrays.asList(10, 25, 30., 4, 5));\n})","currentLayer":0,"declarationInfo":null},{"declaringType":"org.junit.jupiter.api.Assertions","methodSignature":"assertAll(org.junit.jupiter.api.function.Executable...)","methodName":"assertAll","lineNumber":["37","138"],"fullExpression":"assertAll(() -> assertDoesNotThrow(() -> new CategoryChart(800, 600)), () -> assertDoesNotThrow(() -> new CategoryChart(800, 600, new CustomTheme())), () -> assertDoesNotThrow(() -> new CategoryChart(800, 600, XChart)), () -> assertDoesNotThrow(() -> new CategoryChart(builder)))","currentLayer":0,"declarationInfo":null}],"Application/XChart-develop/xchart/src/test/java/org/knowm/xchart/AnnotationLineTest.java":[{"declaringType":"org.junit.jupiter.api.Assertions","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["26","27","28"],"fullExpression":"assertTrue(annotation.getBounds().getX() > 50)","currentLayer":0,"declarationInfo":null}],"Application/XChart-develop/xchart/src/main/java/org/knowm/xchart/PdfboxGraphicsEncoder.java":[{"declaringType":"de.rototor.pdfbox.graphics2d.PdfBoxGraphics2D","methodSignature":"dispose()","methodName":"dispose","lineNumber":["113"],"fullExpression":"pdfBoxGraphics2D.dispose()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.apache.pdfbox.pdmodel.PDDocument","methodSignature":"save(java.io.OutputStream)","methodName":"save","lineNumber":["121"],"fullExpression":"document.save(os)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.apache.pdfbox.pdmodel.PDDocument","methodSignature":"addPage(org.apache.pdfbox.pdmodel.PDPage)","methodName":"addPage","lineNumber":["110"],"fullExpression":"document.addPage(page)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.apache.pdfbox.pdmodel.PDDocument","methodSignature":"close()","methodName":"close","lineNumber":["122"],"fullExpression":"document.close()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.apache.pdfbox.pdmodel.PDAbstractContentStream","methodSignature":"close()","methodName":"close","lineNumber":["118"],"fullExpression":"contentStream.close()","currentLayer":0,"declarationInfo":null},{"declaringType":"de.rototor.pdfbox.graphics2d.PdfBoxGraphics2D","methodSignature":"getXFormObject()","methodName":"getXFormObject","lineNumber":["114"],"fullExpression":"pdfBoxGraphics2D.getXFormObject()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.apache.pdfbox.pdmodel.PDAbstractContentStream","methodSignature":"drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)","methodName":"drawForm","lineNumber":["117"],"fullExpression":"contentStream.drawForm(xform)","currentLayer":0,"declarationInfo":null}],"Application/XChart-develop/xchart/src/main/java/org/knowm/xchart/VectorGraphicsEncoder.java":[{"declaringType":"de.erichseifert.vectorgraphics2d.Document","methodSignature":"writeTo(java.io.OutputStream)","methodName":"writeTo","lineNumber":["63"],"fullExpression":"doc.writeTo(os)","currentLayer":0,"declarationInfo":null},{"declaringType":"de.erichseifert.vectorgraphics2d.Processor","methodSignature":"getDocument(de.erichseifert.vectorgraphics2d.intermediate.CommandSequence, de.erichseifert.vectorgraphics2d.util.PageSize)","methodName":"getDocument","lineNumber":["62"],"fullExpression":"p.getDocument(commands, pageSize)","currentLayer":0,"declarationInfo":null},{"declaringType":"de.erichseifert.vectorgraphics2d.VectorGraphics2D","methodSignature":"getCommands()","methodName":"getCommands","lineNumber":["57"],"fullExpression":"vg2d.getCommands()","currentLayer":0,"declarationInfo":null}],"Application/XChart-develop/xchart/src/test/java/org/knowm/xchart/internal/chartpart/AxisTickCalculatorCategoryTest.java":[{"declaringType":"org.junit.jupiter.api.Assertions","methodSignature":"assertThrows(java.lang.Class<T>, org.junit.jupiter.api.function.Executable)","methodName":"assertThrows","lineNumber":["38"],"fullExpression":"Assertions.assertThrows(IllegalArgumentException.class, () -> {\n    new AxisTickCalculator_Category(Axis.Direction.X, 900, categories, Series.DataType.String, styler);\n})","currentLayer":0,"declarationInfo":null}],"Application/XChart-develop/xchart/src/test/java/org/knowm/xchart/regressiontests/SimplestExampleTest.java":[{"declaringType":"org.junit.jupiter.api.Assertions","methodSignature":"assertArrayEquals(byte[], byte[])","methodName":"assertArrayEquals","lineNumber":["58"],"fullExpression":"assertArrayEquals(expectedDigest, actualDigest)","currentLayer":0,"declarationInfo":null}],"Application/XChart-develop/xchart/src/test/java/org/knowm/xchart/internal/chartpart/RegressionIssue536Test.java":[{"declaringType":"org.assertj.core.api.Assertions","methodSignature":"assertThat(java.lang.String)","methodName":"assertThat","lineNumber":["81"],"fullExpression":"assertThat(tickLabels.get(0))","currentLayer":0,"declarationInfo":null},{"declaringType":"org.assertj.core.api.AbstractStringAssert","methodSignature":"isEqualTo(java.lang.String)","methodName":"isEqualTo","lineNumber":["81"],"fullExpression":"assertThat(tickLabels.get(0)).isEqualTo(\"10-18\")","currentLayer":0,"declarationInfo":null},{"declaringType":"org.assertj.core.api.AbstractBooleanAssert","methodSignature":"isEqualTo(boolean)","methodName":"isEqualTo","lineNumber":["85"],"fullExpression":"assertThat(areAllLabelsUnique).isEqualTo(true)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.assertj.core.api.Assertions","methodSignature":"assertThat(boolean)","methodName":"assertThat","lineNumber":["85"],"fullExpression":"assertThat(areAllLabelsUnique)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.assertj.core.api.AbstractIntegerAssert","methodSignature":"isEqualTo(int)","methodName":"isEqualTo","lineNumber":["80"],"fullExpression":"assertThat(tickLabels.size()).isEqualTo(13)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.assertj.core.api.Assertions","methodSignature":"assertThat(int)","methodName":"assertThat","lineNumber":["80"],"fullExpression":"assertThat(tickLabels.size())","currentLayer":0,"declarationInfo":null}]}