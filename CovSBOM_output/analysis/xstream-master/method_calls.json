{"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/persistence/XmlSetTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["35","42","43","49","51"],"fullExpression":"assertTrue(strategy.map.containsValue(\"guilherme\"))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["28"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(boolean)","methodName":"assertFalse","lineNumber":["52","58"],"fullExpression":"assertFalse(strategy.map.containsValue(\"guilherme\"))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["100"],"fullExpression":"assertEquals(\"guilherme\", onlyValue)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/DomDriver.java":[{"declaringType":"org.xml.sax.InputSource","methodSignature":"setEncoding(java.lang.String)","methodName":"setEncoding","lineNumber":["107"],"fullExpression":"source.setEncoding(encoding)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/enums/EnumCustomConverterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["28"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/LambdaTest.java":[{"declaringType":"com.thoughtworks.acceptance.LambdaTest","methodSignature":"normalizeLambda(java.lang.String)","methodName":"normalizeLambda","lineNumber":["194","194","198","198"],"fullExpression":"normalizeLambda(expected)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.LambdaTest.LambdaKeeper","methodSignature":"keep(java.util.concurrent.Callable<java.lang.String>)","methodName":"keep","lineNumber":["41"],"fullExpression":"keeper.keep((Callable<String>) () -> \"result\")","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.LambdaTest","methodSignature":"assertBothWaysNormalized(java.lang.Object, java.lang.String)","methodName":"assertBothWaysNormalized","lineNumber":["73","104","189","234"],"fullExpression":"assertBothWaysNormalized(keeper, expected)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.LambdaTest.LambdaKeeper","methodSignature":"reference()","methodName":"reference","lineNumber":["83"],"fullExpression":"keeper.reference()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/xppdom/XppFactory.java":[{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"setInput(java.io.InputStream, java.lang.String)","methodName":"setInput","lineNumber":["82"],"fullExpression":"parser.setInput(in, encoding)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParserFactory","methodSignature":"newInstance()","methodName":"newInstance","lineNumber":["38"],"fullExpression":"XmlPullParserFactory.newInstance()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"setInput(java.io.Reader)","methodName":"setInput","lineNumber":["66"],"fullExpression":"parser.setInput(r)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParserFactory","methodSignature":"newPullParser()","methodName":"newPullParser","lineNumber":["39"],"fullExpression":"factory.newPullParser()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/TraxSource.java":[{"declaringType":"org.xml.sax.XMLFilter","methodSignature":"getParent()","methodName":"getParent","lineNumber":["301","302","304"],"fullExpression":"filter.getParent()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xml.sax.SAXException","methodSignature":"getMessage()","methodName":"getMessage","lineNumber":["328","503"],"fullExpression":"e.getMessage()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/mapper/SecurityMapperTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["42"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/binary/TokenTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["32"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"fail(java.lang.String)","methodName":"fail","lineNumber":["42"],"fullExpression":"fail(\"Expected exception\")","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["51","58","65","72","79","86","96","99"],"fullExpression":"assertEquals(2, buffer.size())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/core/util/ThreadSafeSimpleDateFormatTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(java.lang.String, boolean)","methodName":"assertTrue","lineNumber":["108"],"fullExpression":"assertTrue(\"Each thread should have made at least 1 conversion\", counter[0] >= threads.length)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"fail(java.lang.String)","methodName":"fail","lineNumber":["71","73"],"fullExpression":"fail(\"Unexpected InterruptedException\")","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, int, int)","methodName":"assertEquals","lineNumber":["107"],"fullExpression":"assertEquals(\"Exceptions have been thrown: \" + exceptions, 0, exceptions.size())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/reflection/FieldDictionaryTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["35"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"fail(java.lang.String)","methodName":"fail","lineNumber":["186"],"fullExpression":"fail(\"Exception \" + e.getClass())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, int, int)","methodName":"assertEquals","lineNumber":["179","183"],"fullExpression":"assertEquals(\"fieldCount not equal for type \" + type.getName(), 2, fieldCount)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["158"],"fullExpression":"assertEquals(\"Assertions failed or exceptions thrown\", Collections.emptyList(), exceptions)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["50","51","52","53","64","65","66","67","68","88","90"],"fullExpression":"assertEquals(\"a\", getNonStaticFieldName(fields))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["91"],"fullExpression":"assertEquals(FieldDictionaryTest.class, innerField.getType())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(java.lang.String, boolean)","methodName":"assertFalse","lineNumber":["54","69","92","99"],"fullExpression":"assertFalse(\"No more fields should be present\", fields.hasNext())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/JDomDriver.java":[{"declaringType":"org.jdom.input.SAXBuilder","methodSignature":"build(java.io.InputStream)","methodName":"build","lineNumber":["73"],"fullExpression":"builder.build(in)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.input.SAXBuilder","methodSignature":"build(java.io.File)","methodName":"build","lineNumber":["95"],"fullExpression":"builder.build(in)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.input.SAXBuilder","methodSignature":"build(java.io.Reader)","methodName":"build","lineNumber":["62"],"fullExpression":"builder.build(reader)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.input.SAXBuilder","methodSignature":"build(java.net.URL)","methodName":"build","lineNumber":["84"],"fullExpression":"builder.build(in)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.input.SAXBuilder","methodSignature":"setFeature(java.lang.String, boolean)","methodName":"setFeature","lineNumber":["120"],"fullExpression":"builder.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/Dom4JDriver.java":[{"declaringType":"org.dom4j.io.SAXReader","methodSignature":"read(java.io.File)","methodName":"read","lineNumber":["135"],"fullExpression":"createReader().read(in)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.OutputFormat","methodSignature":"setTrimText(boolean)","methodName":"setTrimText","lineNumber":["52"],"fullExpression":"outputFormat.setTrimText(false)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.OutputFormat","methodSignature":"createPrettyPrint()","methodName":"createPrettyPrint","lineNumber":["51"],"fullExpression":"OutputFormat.createPrettyPrint()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.OutputFormat","methodSignature":"getEncoding()","methodName":"getEncoding","lineNumber":["158"],"fullExpression":"getOutputFormat().getEncoding()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.SAXReader","methodSignature":"read(java.net.URL)","methodName":"read","lineNumber":["122"],"fullExpression":"createReader().read(in)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.SAXReader","methodSignature":"read(java.io.Reader)","methodName":"read","lineNumber":["99"],"fullExpression":"createReader().read(text)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.SAXReader","methodSignature":"setFeature(java.lang.String, boolean)","methodName":"setFeature","lineNumber":["174"],"fullExpression":"reader.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.SAXReader","methodSignature":"read(java.io.InputStream)","methodName":"read","lineNumber":["109"],"fullExpression":"createReader().read(in)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/PersistenceTest.java":[{"declaringType":"com.thoughtworks.acceptance.PersistenceTest","methodSignature":"cleanUp()","methodName":"cleanUp","lineNumber":["44","49"],"fullExpression":"cleanUp()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/JDomAcceptanceTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["36"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.output.Format","methodSignature":"getPrettyFormat()","methodName":"getPrettyFormat","lineNumber":["83"],"fullExpression":"Format.getPrettyFormat()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.input.SAXBuilder","methodSignature":"build(java.io.Reader)","methodName":"build","lineNumber":["51"],"fullExpression":"new SAXBuilder().build(new StringReader(xml))","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.output.XMLOutputter","methodSignature":"outputString(java.util.List)","methodName":"outputString","lineNumber":["85"],"fullExpression":"outputter.outputString(result)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, int, int)","methodName":"assertEquals","lineNumber":["81"],"fullExpression":"assertEquals(\"Result list should contain exactly 1 element\", 1, result.size())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["85"],"fullExpression":"assertEquals(expected, outputter.outputString(result))","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.output.Format","methodSignature":"setLineSeparator(java.lang.String)","methodName":"setLineSeparator","lineNumber":["83"],"fullExpression":"Format.getPrettyFormat().setLineSeparator(\"\\n\")","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/reflection/SerializableConverterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["79","153","248","297","323","348"],"fullExpression":"assertEquals(expected, xml)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["350"],"fullExpression":"assertEquals(s.serializable, serialized.serializable)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/extended/ISO8601DateConverterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["30"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["55","67","79"],"fullExpression":"assertEquals(in.toString(), out.toString())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(long, long)","methodName":"assertEquals","lineNumber":["56"],"fullExpression":"assertEquals(in.getTime(), out.getTime())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"tearDown()","methodName":"tearDown","lineNumber":["42"],"fullExpression":"super.tearDown()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["54","68"],"fullExpression":"assertEquals(in, out)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/persistence/XmlMapTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["35","42","43","49","160"],"fullExpression":"assertTrue(strategy.map.containsKey(\"guilherme\"))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["28"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertNull(java.lang.Object)","methodName":"assertNull","lineNumber":["58","106"],"fullExpression":"assertNull(aCuteString)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["51","100"],"fullExpression":"assertEquals(\"aCuteString\", aCuteString)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(boolean)","methodName":"assertFalse","lineNumber":["52"],"fullExpression":"assertFalse(strategy.map.containsKey(\"guilherme\"))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/testutil/CallLog.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["30"],"fullExpression":"Assert.assertEquals(expected.toString(), actual.toString())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/WriteReplaceTest.java":[{"declaringType":"org.apache.commons.lang3.StringUtils","methodSignature":"reverse(java.lang.String)","methodName":"reverse","lineNumber":["334","339"],"fullExpression":"StringUtils.reverse(replacedValue)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/DriverEndToEndTestSuite.java":[{"declaringType":"junit.framework.TestSuite","methodSignature":"addTest(junit.framework.Test)","methodName":"addTest","lineNumber":["149","155"],"fullExpression":"addTest(new TestCase(testName + \"_Object\") {\n\n    @Override\n    protected void runTest() throws Throwable {\n        testObject(driver);\n    }\n})","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/basic/DateConverterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["39"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(java.lang.String, boolean)","methodName":"assertTrue","lineNumber":["168"],"fullExpression":"assertTrue(\"Nothing suceeded\", results.contains(\"PASS\"))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["64","108","205"],"fullExpression":"assertEquals(in.toString(), out.toString())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(long, long)","methodName":"assertEquals","lineNumber":["65"],"fullExpression":"assertEquals(in.getTime(), out.getTime())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["217"],"fullExpression":"assertEquals(GregorianCalendar.AD, cal.get(Calendar.ERA))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"tearDown()","methodName":"tearDown","lineNumber":["51"],"fullExpression":"super.tearDown()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["63","115","119","123","124","128","129"],"fullExpression":"assertEquals(in, out)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(java.lang.String, boolean)","methodName":"assertFalse","lineNumber":["169"],"fullExpression":"assertFalse(\"At least one attempt failed\", results.contains(\"FAIL\"))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/annotations/ImplicitMapTest.java":[{"declaringType":"com.thoughtworks.acceptance.annotations.ImplicitMapTest.ImplicitRootTwo","methodSignature":"getValues()","methodName":"getValues","lineNumber":["71","72"],"fullExpression":"implicitRoot.getValues()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.annotations.ImplicitMapTest.ImplicitRootOne","methodSignature":"getValues()","methodName":"getValues","lineNumber":["53","54"],"fullExpression":"implicitRoot.getValues()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/enums/EnumSetConverterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["27"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/Dom4JXmlWriterTest.java":[{"declaringType":"org.dom4j.io.OutputFormat","methodSignature":"setTrimText(boolean)","methodName":"setTrimText","lineNumber":["30"],"fullExpression":"format.setTrimText(false)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.OutputFormat","methodSignature":"createCompactFormat()","methodName":"createCompactFormat","lineNumber":["29"],"fullExpression":"OutputFormat.createCompactFormat()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.OutputFormat","methodSignature":"setSuppressDeclaration(boolean)","methodName":"setSuppressDeclaration","lineNumber":["31"],"fullExpression":"format.setSuppressDeclaration(true)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/JDom2Writer.java":[{"declaringType":"org.jdom2.JDOMFactory","methodSignature":"text(java.lang.String)","methodName":"text","lineNumber":["89"],"fullExpression":"documentFactory.text(text)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.Element","methodSignature":"addContent(org.jdom2.Content)","methodName":"addContent","lineNumber":["82","89"],"fullExpression":"parent.addContent(element)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/XppDriver.java":[{"declaringType":"org.xmlpull.v1.XmlPullParserFactory","methodSignature":"newInstance()","methodName":"newInstance","lineNumber":["62"],"fullExpression":"XmlPullParserFactory.newInstance()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParserFactory","methodSignature":"newPullParser()","methodName":"newPullParser","lineNumber":["64"],"fullExpression":"factory.newPullParser()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/core/JVMTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"fail(java.lang.String)","methodName":"fail","lineNumber":["22"],"fullExpression":"fail(\"Error thrown\")","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/AbstractXppDomDriver.java":[{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"setInput(java.io.Reader)","methodName":"setInput","lineNumber":["55"],"fullExpression":"parser.setInput(in)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/SecurityManagerTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["52"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"runTest()","methodName":"runTest","lineNumber":["89"],"fullExpression":"super.runTest()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["317"],"fullExpression":"assertEquals(xml, resultXml)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"tearDown()","methodName":"tearDown","lineNumber":["83"],"fullExpression":"super.tearDown()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.apache.commons.lang3.StringUtils","methodSignature":"split(java.lang.String, char)","methodName":"split","lineNumber":["63"],"fullExpression":"StringUtils.split(System.getProperty(\"java.class.path\"), File.pathSeparatorChar)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.SecurityManagerTest","methodSignature":"assertBothWays()","methodName":"assertBothWays","lineNumber":["149","192","233","301"],"fullExpression":"assertBothWays()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/reflection/SortableFieldKeySorterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"fail()","methodName":"fail","lineNumber":["51"],"fullExpression":"fail()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["42","66"],"fullExpression":"assertEquals(fieldOrder[i], fields[i - 1].getName())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["40","64"],"fullExpression":"assertEquals(fieldOrder.length - 1, fields.length)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/OmitFieldsTest.java":[{"declaringType":"com.thoughtworks.acceptance.OmitFieldsTest.Child","methodSignature":"getHidden()","methodName":"getHidden","lineNumber":["474"],"fullExpression":"out.getHidden()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.OmitFieldsTest.Child","methodSignature":"setHidden(com.thoughtworks.acceptance.OmitFieldsTest.Member)","methodName":"setHidden","lineNumber":["457"],"fullExpression":"child.setHidden(child.member = member)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/JDomReaderTest.java":[{"declaringType":"org.jdom.input.SAXBuilder","methodSignature":"build(java.io.Reader)","methodName":"build","lineNumber":["51"],"fullExpression":"new SAXBuilder().build(new StringReader(xml))","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.Element","methodSignature":"getChild(java.lang.String)","methodName":"getChild","lineNumber":["52"],"fullExpression":"document.getRootElement().getChild(\"small\")","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.Document","methodSignature":"getRootElement()","methodName":"getRootElement","lineNumber":["52"],"fullExpression":"document.getRootElement()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/extended/ISO8601SqlTimestampConverterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["31"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, int, int)","methodName":"assertEquals","lineNumber":["89"],"fullExpression":"assertEquals(\"Nanos are not equal\", ts1.getNanos(), ts2.getNanos())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["57","73","88"],"fullExpression":"assertEquals(\"ISO Timestamp Converted is not the same \", ts1, ts2)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"tearDown()","methodName":"tearDown","lineNumber":["43"],"fullExpression":"super.tearDown()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, long, long)","methodName":"assertEquals","lineNumber":["58","74"],"fullExpression":"assertEquals(\"Current time not equal to converted timestamp\", currentTime, ts2.getTime() / 1000 * 1000 + ts2.getNanos() / 1000000)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/InheritanceTest.java":[{"declaringType":"com.thoughtworks.acceptance.InheritanceTest.ParentClass","methodSignature":"getParentName()","methodName":"getParentName","lineNumber":["63","73","83","110"],"fullExpression":"getParentName()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.InheritanceTest.ChildClass","methodSignature":"getChildName()","methodName":"getChildName","lineNumber":["63","73","84"],"fullExpression":"getChildName()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.InheritanceTest.ChildClass","methodSignature":"toString()","methodName":"toString","lineNumber":["68"],"fullExpression":"toString()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/DomWriterTest.java":[{"declaringType":"org.w3c.dom.Node","methodSignature":"appendChild(org.w3c.dom.Node)","methodName":"appendChild","lineNumber":["46","48","67","69"],"fullExpression":"document.appendChild(root)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Document","methodSignature":"getDocumentElement()","methodName":"getDocumentElement","lineNumber":["60","81"],"fullExpression":"document.getDocumentElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Document","methodSignature":"createElement(java.lang.String)","methodName":"createElement","lineNumber":["45","47","66","68"],"fullExpression":"document.createElement(\"root\")","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/EncodingTestSuite.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(java.lang.String, boolean)","methodName":"assertTrue","lineNumber":["100"],"fullExpression":"Assert.assertTrue(\"'\" + obj.data + \"' was not found\", generated.indexOf(obj.data) > 0)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestSuite","methodSignature":"addTest(junit.framework.Test)","methodName":"addTest","lineNumber":["113","121","137","143"],"fullExpression":"addTest(new TestCase(testName + \"Native\") {\n\n    @Override\n    protected void runTest() throws Throwable {\n        test(driver, null);\n    }\n})","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/JDom2AcceptanceTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["35"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.output.Format","methodSignature":"setLineSeparator(java.lang.String)","methodName":"setLineSeparator","lineNumber":["82"],"fullExpression":"Format.getPrettyFormat().setLineSeparator(\"\\n\")","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.output.XMLOutputter","methodSignature":"outputString(java.util.List<? extends org.jdom2.Content>)","methodName":"outputString","lineNumber":["84"],"fullExpression":"outputter.outputString(result)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, int, int)","methodName":"assertEquals","lineNumber":["80"],"fullExpression":"assertEquals(\"Result list should contain exactly 1 element\", 1, result.size())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["84"],"fullExpression":"assertEquals(expected, outputter.outputString(result))","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.output.Format","methodSignature":"getPrettyFormat()","methodName":"getPrettyFormat","lineNumber":["82"],"fullExpression":"Format.getPrettyFormat()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.input.SAXBuilder","methodSignature":"build(java.io.Reader)","methodName":"build","lineNumber":["50"],"fullExpression":"new SAXBuilder().build(new StringReader(xml))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/StatefulWriterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["53","62","70","77","88","98","106","117","136","142","148","154","160"],"fullExpression":"assertTrue(e.getCause() instanceof IllegalStateException)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["32"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["43"],"fullExpression":"assertEquals(\"<junit test=\\\"true\\\">foo</junit>\", stringWriter.toString())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/core/util/WeakCacheTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["41","42"],"fullExpression":"assertTrue(map.containsKey(new String(\"key\")))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(java.lang.String, boolean)","methodName":"assertTrue","lineNumber":["70","89","108","128","181"],"fullExpression":"assertTrue(\"Key still alive even after \" + i + \" forced garbage collections\", i++ < 5)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertNull(java.lang.Object)","methodName":"assertNull","lineNumber":["38"],"fullExpression":"assertNull(map.put(\"key\", \"value\"))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["40","43","44","45","46","47","49","53"],"fullExpression":"assertEquals(\"value\", map.get(\"key\"))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["37","39","50","52","55","74","93","112","132","166","185"],"fullExpression":"assertEquals(0, map.size())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream-builder/src/test/com/thoughtworks/acceptance/AbstractBuilderAcceptanceTest.java":[{"declaringType":"com.thoughtworks.acceptance.AbstractBuilderAcceptanceTest","methodSignature":"toXML(java.lang.Object)","methodName":"toXML","lineNumber":["66","89","114"],"fullExpression":"toXML(root)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertNull(java.lang.Object)","methodName":"assertNull","lineNumber":["133"],"fullExpression":"assertNull(actual)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractBuilderAcceptanceTest","methodSignature":"createDriver()","methodName":"createDriver","lineNumber":["41"],"fullExpression":"createDriver()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractBuilderAcceptanceTest","methodSignature":"normalizedXML(java.lang.String, java.lang.String[], java.lang.String, java.lang.String)","methodName":"normalizedXML","lineNumber":["65","68"],"fullExpression":"normalizedXML(toXML(root), new String[] { match }, templateSelect, sortSelect)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertNotNull(java.lang.String, java.lang.Object)","methodName":"assertNotNull","lineNumber":["135"],"fullExpression":"assertNotNull(\"Should not be null\", actual)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractBuilderAcceptanceTest","methodSignature":"assertBinarySerialization(java.lang.Object)","methodName":"assertBinarySerialization","lineNumber":["76","97"],"fullExpression":"assertBinarySerialization(root)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractBuilderAcceptanceTest","methodSignature":"assertArrayEquals(java.lang.Object, java.lang.Object)","methodName":"assertArrayEquals","lineNumber":["137"],"fullExpression":"assertArrayEquals(expected, actual)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["150"],"fullExpression":"assertEquals(Array.getLength(expected), Array.getLength(actual))","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractBuilderAcceptanceTest","methodSignature":"assertObjectsEqual(java.lang.Object, java.lang.Object)","methodName":"assertObjectsEqual","lineNumber":["73","94","110","117"],"fullExpression":"assertObjectsEqual(root, resultRoot)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractBuilderAcceptanceTest","methodSignature":"dumpBytes(byte[])","methodName":"dumpBytes","lineNumber":["157","157"],"fullExpression":"dumpBytes(expected)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["67","90","115","157","218"],"fullExpression":"assertEquals(normalizedXML(xml, new String[] { match }, templateSelect, sortSelect), resultXml)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractBuilderAcceptanceTest","methodSignature":"createXStream()","methodName":"createXStream","lineNumber":["38"],"fullExpression":"createXStream()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["152"],"fullExpression":"assertEquals(Array.get(expected, i), Array.get(actual, i))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/Dom4JReader.java":[{"declaringType":"org.dom4j.Node","methodSignature":"getName()","methodName":"getName","lineNumber":["77","132"],"fullExpression":"currentElement.getName()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Element","methodSignature":"attributeCount()","methodName":"attributeCount","lineNumber":["97"],"fullExpression":"currentElement.attributeCount()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Node","methodSignature":"getParent()","methodName":"getParent","lineNumber":["107"],"fullExpression":"currentElement.getParent()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Element","methodSignature":"attribute(int)","methodName":"attribute","lineNumber":["92","102"],"fullExpression":"currentElement.attribute(index)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Node","methodSignature":"getPath()","methodName":"getPath","lineNumber":["137"],"fullExpression":"currentElement.getPath()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Element","methodSignature":"getText()","methodName":"getText","lineNumber":["82"],"fullExpression":"currentElement.getText()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Attribute","methodSignature":"getQualifiedName()","methodName":"getQualifiedName","lineNumber":["102"],"fullExpression":"currentElement.attribute(index).getQualifiedName()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Document","methodSignature":"getRootElement()","methodName":"getRootElement","lineNumber":["32","40","54","72"],"fullExpression":"((Document) branch).getRootElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Element","methodSignature":"elements()","methodName":"elements","lineNumber":["112","117","128"],"fullExpression":"currentElement.elements()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Attribute","methodSignature":"getValue()","methodName":"getValue","lineNumber":["92"],"fullExpression":"currentElement.attribute(index).getValue()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/SaxWriter.java":[{"declaringType":"org.xml.sax.ContentHandler","methodSignature":"characters(char[], int, int)","methodName":"characters","lineNumber":["692"],"fullExpression":"contentHandler.characters(buffer, 0, lg)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xml.sax.ContentHandler","methodSignature":"endElement(java.lang.String, java.lang.String, java.lang.String)","methodName":"endElement","lineNumber":["705"],"fullExpression":"contentHandler.endElement(\"\", tagName, tagName)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xml.sax.ContentHandler","methodSignature":"startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)","methodName":"startElement","lineNumber":["757"],"fullExpression":"contentHandler.startElement(\"\", tagName, tagName, attributeList)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xml.sax.ContentHandler","methodSignature":"endDocument()","methodName":"endDocument","lineNumber":["743"],"fullExpression":"contentHandler.endDocument()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xml.sax.ContentHandler","methodSignature":"startDocument()","methodName":"startDocument","lineNumber":["725"],"fullExpression":"contentHandler.startDocument()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xml.sax.helpers.AttributesImpl","methodSignature":"addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)","methodName":"addAttribute","lineNumber":["675"],"fullExpression":"attributeList.addAttribute(\"\", escapedName, escapedName, \"CDATA\", value)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xml.sax.helpers.AttributesImpl","methodSignature":"clear()","methodName":"clear","lineNumber":["758"],"fullExpression":"attributeList.clear()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/basic/StringConverterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["33","63"],"fullExpression":"assertEquals(1, map.size())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream-hibernate/src/test/acceptance/hibernate/HibernateReferenceTest.java":[{"declaringType":"acceptance.hibernate.HibernateReferenceTest","methodSignature":"setupNonpersistentDivision()","methodName":"setupNonpersistentDivision","lineNumber":["55"],"fullExpression":"setupNonpersistentDivision()","currentLayer":0,"declarationInfo":null},{"declaringType":"acceptance.hibernate.HibernateReferenceTest","methodSignature":"setupPersistentDivision()","methodName":"setupPersistentDivision","lineNumber":["56","72"],"fullExpression":"setupPersistentDivision()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/mapper/DefaultClassMapperTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["41","58","59","60","66","67","68"],"fullExpression":"assertTrue(arrayType.isArray())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["25"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(boolean)","methodName":"assertFalse","lineNumber":["62","70"],"fullExpression":"assertFalse(arrayType.getComponentType().getComponentType().getComponentType().isArray())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["42","63","71"],"fullExpression":"assertEquals(String.class, arrayType.getComponentType())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/DomReaderTest.java":[{"declaringType":"org.w3c.dom.NodeList","methodSignature":"item(int)","methodName":"item","lineNumber":["60"],"fullExpression":"document.getDocumentElement().getElementsByTagName(\"small\").item(0)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Document","methodSignature":"getDocumentElement()","methodName":"getDocumentElement","lineNumber":["60"],"fullExpression":"document.getDocumentElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Element","methodSignature":"getElementsByTagName(java.lang.String)","methodName":"getElementsByTagName","lineNumber":["60"],"fullExpression":"document.getDocumentElement().getElementsByTagName(\"small\")","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/reflection/ReflectionConverterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["94","122"],"fullExpression":"assertEquals(expected, xml)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/json/JsonWriterModeTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["79"],"fullExpression":"assertTrue(equals(jsonObject, new JSONObject(jsonObject.toString())))","currentLayer":0,"declarationInfo":null},{"declaringType":"org.json.JSONObject","methodSignature":"toString()","methodName":"toString","lineNumber":["79"],"fullExpression":"jsonObject.toString()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.json.JSONObject","methodSignature":"getNames(org.json.JSONObject)","methodName":"getNames","lineNumber":["83","86","88"],"fullExpression":"JSONObject.getNames(object1)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestSuite","methodSignature":"addTest(junit.framework.Test)","methodName":"addTest","lineNumber":["169","170","171","173","175","177","179","180","181","183"],"fullExpression":"suite.addTest(new JsonWriterModeTest(\"optimizedCompact\", XStream.NO_REFERENCES, 0, compactFormat))","currentLayer":0,"declarationInfo":null},{"declaringType":"org.json.JSONObject","methodSignature":"get(java.lang.String)","methodName":"get","lineNumber":["91","91"],"fullExpression":"object1.get(name)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.json.JSONArray","methodSignature":"length()","methodName":"length","lineNumber":["104","105"],"fullExpression":"array1.length()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.json.JSONArray","methodSignature":"get(int)","methodName":"get","lineNumber":["108","108"],"fullExpression":"array1.get(length)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/converters/reflection/SunLimitedUnsafeReflectionProvider.java":[{"declaringType":"sun.misc.Unsafe","methodSignature":"allocateInstance(java.lang.Class<? extends java.lang.Object>)","methodName":"allocateInstance","lineNumber":["81"],"fullExpression":"unsafe.allocateInstance(type)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/XomDriver.java":[{"declaringType":"nu.xom.Builder","methodSignature":"build(java.io.InputStream)","methodName":"build","lineNumber":["122"],"fullExpression":"createBuilder().build(in)","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Builder","methodSignature":"build(java.io.Reader)","methodName":"build","lineNumber":["110"],"fullExpression":"createBuilder().build(text)","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Builder","methodSignature":"build(java.lang.String)","methodName":"build","lineNumber":["134"],"fullExpression":"createBuilder().build(in.toExternalForm())","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Builder","methodSignature":"build(java.io.File)","methodName":"build","lineNumber":["146"],"fullExpression":"createBuilder().build(in)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/json/JettisonMappedXmlDriverTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["55"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["80","97","115","134","164","175","186","196","210","220","239","252","261","287","298","304","315","327"],"fullExpression":"assertEquals(SIMPLE, result)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"tearDown()","methodName":"tearDown","lineNumber":["67"],"fullExpression":"super.tearDown()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/JDom2Reader.java":[{"declaringType":"org.jdom2.Element","methodSignature":"getChildren()","methodName":"getChildren","lineNumber":["68","73","108"],"fullExpression":"currentElement.getChildren()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.Document","methodSignature":"getRootElement()","methodName":"getRootElement","lineNumber":["39","53"],"fullExpression":"document.getRootElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.Element","methodSignature":"getName()","methodName":"getName","lineNumber":["78","112"],"fullExpression":"currentElement.getName()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.Attribute","methodSignature":"getValue()","methodName":"getValue","lineNumber":["93"],"fullExpression":"currentElement.getAttributes().get(index).getValue()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.Content","methodSignature":"getParentElement()","methodName":"getParentElement","lineNumber":["63"],"fullExpression":"currentElement.getParentElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.Element","methodSignature":"getText()","methodName":"getText","lineNumber":["83"],"fullExpression":"currentElement.getText()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.Element","methodSignature":"getAttributes()","methodName":"getAttributes","lineNumber":["93","98","103"],"fullExpression":"currentElement.getAttributes()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.Attribute","methodSignature":"getQualifiedName()","methodName":"getQualifiedName","lineNumber":["103"],"fullExpression":"currentElement.getAttributes().get(index).getQualifiedName()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/DomWriter.java":[{"declaringType":"org.w3c.dom.Node","methodSignature":"appendChild(org.w3c.dom.Node)","methodName":"appendChild","lineNumber":["91","93","106"],"fullExpression":"top().appendChild(child)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Document","methodSignature":"getDocumentElement()","methodName":"getDocumentElement","lineNumber":["40","49","65"],"fullExpression":"document.getDocumentElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Document","methodSignature":"createTextNode(java.lang.String)","methodName":"createTextNode","lineNumber":["106"],"fullExpression":"document.createTextNode(text)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Node","methodSignature":"getOwnerDocument()","methodName":"getOwnerDocument","lineNumber":["56","83"],"fullExpression":"rootElement.getOwnerDocument()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/xppdom/XppDomComparatorTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["34"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertNull(java.lang.Object)","methodName":"assertNull","lineNumber":["55","96","108","163","247"],"fullExpression":"assertNull(xpath.get())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/core/util/QuickWriterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, int, int)","methodName":"assertEquals","lineNumber":["40","42","44","53","56","58","67","69","71"],"fullExpression":"assertEquals(\"not flushed yet\", 0, stringWriter.getBuffer().length())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["27","29","31"],"fullExpression":"assertEquals(stringWriter.toString(), \"Joe\")","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/security/CGLIBProxyTypePermission.java":[{"declaringType":"net.sf.cglib.proxy.Proxy","methodSignature":"isProxyClass(java.lang.Class)","methodName":"isProxyClass","lineNumber":["27"],"fullExpression":"Proxy.isProxyClass(type)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/BeanIDCircularReferenceTest.java":[{"declaringType":"com.thoughtworks.acceptance.BeanIDCircularReferenceTest","methodSignature":"setUp()","methodName":"setUp","lineNumber":["107"],"fullExpression":"setUp()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/JDom2Driver.java":[{"declaringType":"org.jdom2.input.SAXBuilder","methodSignature":"build(java.io.InputStream)","methodName":"build","lineNumber":["64"],"fullExpression":"builder.build(in)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.input.SAXBuilder","methodSignature":"build(java.io.File)","methodName":"build","lineNumber":["86"],"fullExpression":"builder.build(in)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.input.SAXBuilder","methodSignature":"setFeature(java.lang.String, boolean)","methodName":"setFeature","lineNumber":["111"],"fullExpression":"builder.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.input.SAXBuilder","methodSignature":"build(java.io.Reader)","methodName":"build","lineNumber":["53"],"fullExpression":"builder.build(reader)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.input.SAXBuilder","methodSignature":"build(java.net.URL)","methodName":"build","lineNumber":["75"],"fullExpression":"builder.build(in)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/ImplicitCollectionTest.java":[{"declaringType":"com.thoughtworks.acceptance.ImplicitCollectionTest.Farm","methodSignature":"add(com.thoughtworks.acceptance.ImplicitCollectionTest.Animal)","methodName":"add","lineNumber":["69","70","90","91","113","114","152","153","233","234","256","257","578","579","596","597"],"fullExpression":"farm.add(new Animal(\"Cow\"))","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.ImplicitCollectionTest.House","methodSignature":"getRooms()","methodName":"getRooms","lineNumber":["388","388"],"fullExpression":"house.getRooms()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.ImplicitCollectionTest.Person","methodSignature":"addEmailAddress(java.lang.String)","methodName":"addEmailAddress","lineNumber":["351","352","355","356","357"],"fullExpression":"joe.addEmailAddress(\"joe@house.org\")","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.ImplicitCollectionTest.Aquarium","methodSignature":"addFish(java.lang.String)","methodName":"addFish","lineNumber":["507","508","509","527","528","529","548","549","550"],"fullExpression":"aquarium.addFish(\"salmon\")","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.ImplicitCollectionTest.House","methodSignature":"getPeople()","methodName":"getPeople","lineNumber":["387","387"],"fullExpression":"house.getPeople()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.ImplicitCollectionTest.Zoo","methodSignature":"add(com.thoughtworks.acceptance.ImplicitCollectionTest.Animal)","methodName":"add","lineNumber":["437","438","473","474"],"fullExpression":"zoo.add(new Animal(\"Lion\"))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/mapper/CGLIBMapper.java":[{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"isEnhanced(java.lang.Class)","methodName":"isEnhanced","lineNumber":["51"],"fullExpression":"Enhancer.isEnhanced(type)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/ImplicitArrayTest.java":[{"declaringType":"com.thoughtworks.acceptance.ImplicitArrayTest.House","methodSignature":"getRooms()","methodName":"getRooms","lineNumber":["304","304","338","338"],"fullExpression":"house.getRooms()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.ImplicitArrayTest.House","methodSignature":"getPeople()","methodName":"getPeople","lineNumber":["303","303"],"fullExpression":"house.getPeople()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/annotations/FieldConverterTest.java":[{"declaringType":"com.thoughtworks.acceptance.annotations.FieldConverterTest.DerivedTask","methodSignature":"equals(java.lang.Object)","methodName":"equals","lineNumber":["147"],"fullExpression":"task.equals(((TaskContainer) obj).task)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.annotations.FieldConverterTest.TaskWithAnnotations","methodSignature":"hashCode()","methodName":"hashCode","lineNumber":["152"],"fullExpression":"task.hashCode()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.annotations.FieldConverterTest.TaskWithAnnotations","methodSignature":"equals(java.lang.Object)","methodName":"equals","lineNumber":["138"],"fullExpression":"super.equals(obj)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/annotations/AliasTest.java":[{"declaringType":"com.thoughtworks.acceptance.annotations.AliasTest.AddressBookInfo","methodSignature":"getAddresses()","methodName":"getAddresses","lineNumber":["218"],"fullExpression":"((AddressBookInfo) obj).getAddresses()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.annotations.AliasTest.CustomPerson","methodSignature":"toString()","methodName":"toString","lineNumber":["127","147"],"fullExpression":"toString()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.annotations.AliasTest.Person","methodSignature":"toString()","methodName":"toString","lineNumber":["179"],"fullExpression":"toString()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.annotations.AliasTest.PersonConverter","methodSignature":"toString(java.lang.Object)","methodName":"toString","lineNumber":["277"],"fullExpression":"toString(source)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/InnerClassesTest.java":[{"declaringType":"com.thoughtworks.acceptance.Outer","methodSignature":"getInner()","methodName":"getInner","lineNumber":["22"],"fullExpression":"outer.getInner()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.Outer.Inner","methodSignature":"getMessage()","methodName":"getMessage","lineNumber":["24","40"],"fullExpression":"inner.getMessage()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/DomReader.java":[{"declaringType":"org.w3c.dom.Document","methodSignature":"getDocumentElement()","methodName":"getDocumentElement","lineNumber":["40","57","75"],"fullExpression":"document.getDocumentElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Attr","methodSignature":"getName()","methodName":"getName","lineNumber":["116"],"fullExpression":"((Attr) currentElement.getAttributes().item(index)).getName()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Element","methodSignature":"getTagName()","methodName":"getTagName","lineNumber":["80","169"],"fullExpression":"currentElement.getTagName()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.NamedNodeMap","methodSignature":"item(int)","methodName":"item","lineNumber":["106","116"],"fullExpression":"currentElement.getAttributes().item(index)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.NamedNodeMap","methodSignature":"getLength()","methodName":"getLength","lineNumber":["111"],"fullExpression":"currentElement.getAttributes().getLength()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.NodeList","methodSignature":"item(int)","methodName":"item","lineNumber":["89","143","167"],"fullExpression":"childNodes.item(i)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.CharacterData","methodSignature":"getData()","methodName":"getData","lineNumber":["92"],"fullExpression":"text.getData()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.NodeList","methodSignature":"getLength()","methodName":"getLength","lineNumber":["87","142","166"],"fullExpression":"childNodes.getLength()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Node","methodSignature":"getParentNode()","methodName":"getParentNode","lineNumber":["121"],"fullExpression":"currentElement.getParentNode()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Attr","methodSignature":"getValue()","methodName":"getValue","lineNumber":["101","106"],"fullExpression":"attribute.getValue()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Node","methodSignature":"getAttributes()","methodName":"getAttributes","lineNumber":["106","111","116"],"fullExpression":"currentElement.getAttributes()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.w3c.dom.Node","methodSignature":"getChildNodes()","methodName":"getChildNodes","lineNumber":["85","140","165"],"fullExpression":"currentElement.getChildNodes()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/XomWriter.java":[{"declaringType":"nu.xom.ParentNode","methodSignature":"appendChild(nu.xom.Node)","methodName":"appendChild","lineNumber":["54"],"fullExpression":"top().appendChild(newNode)","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Element","methodSignature":"appendChild(java.lang.String)","methodName":"appendChild","lineNumber":["66"],"fullExpression":"top().appendChild(text)","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Element","methodSignature":"addAttribute(nu.xom.Attribute)","methodName":"addAttribute","lineNumber":["61"],"fullExpression":"top().addAttribute(new Attribute(encodeAttribute(name), value))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/reflection/AbstractReflectionProviderTest.java":[{"declaringType":"org.jmock.builder.ArgumentsMatchBuilder","methodSignature":"with(org.jmock.core.Constraint, org.jmock.core.Constraint, org.jmock.core.Constraint, org.jmock.core.Constraint)","methodName":"with","lineNumber":["53","54","73","74","75","98","100","105"],"fullExpression":"mockBlock.expects(once()).method(\"visit\").with(eq(\"a\"), eq(int.class), eq(WithFields.class), ANYTHING)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["26"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jmock.Mock","methodSignature":"proxy()","methodName":"proxy","lineNumber":["57","78","108"],"fullExpression":"mockBlock.proxy()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jmock.Mock","methodSignature":"verify()","methodName":"verify","lineNumber":["60","82","112"],"fullExpression":"mockBlock.verify()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jmock.builder.MatchBuilder","methodSignature":"after(java.lang.String)","methodName":"after","lineNumber":["100"],"fullExpression":"mockBlock.expects(once()).method(\"visit\").with(eq(\"b\"), eq(int.class), eq(SubClassWithHiddenFields.class), ANYTHING).after(\"first\")","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"fail(java.lang.String)","methodName":"fail","lineNumber":["131"],"fullExpression":"fail(\"Should not have been able to newInstance \" + type)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jmock.core.MockObjectSupportTestCase","methodSignature":"eq(java.lang.Object)","methodName":"eq","lineNumber":["53","53","53","54","54","54","73","73","73","74","74","74","75","75","75","98","98","98","103","103","103","105"],"fullExpression":"eq(\"a\")","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["119","120"],"fullExpression":"assertEquals(10, o.getChildB())","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jmock.builder.NameMatchBuilder","methodSignature":"method(java.lang.String)","methodName":"method","lineNumber":["53","54","73","74","75","98","100","105"],"fullExpression":"mockBlock.expects(once()).method(\"visit\")","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jmock.Mock","methodSignature":"expects(org.jmock.core.InvocationMatcher)","methodName":"expects","lineNumber":["53","54","73","74","75","98","100","105"],"fullExpression":"mockBlock.expects(once())","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jmock.MockObjectTestCase","methodSignature":"once()","methodName":"once","lineNumber":["53","54","73","74","75","98","101","105"],"fullExpression":"once()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jmock.builder.IdentityBuilder","methodSignature":"id(java.lang.String)","methodName":"id","lineNumber":["98"],"fullExpression":"mockBlock.expects(once()).method(\"visit\").with(eq(\"b\"), eq(int.class), eq(WithFields.class), ANYTHING).id(\"first\")","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["125"],"fullExpression":"assertEquals(type, result.getClass())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/core/util/PrioritizedListTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(java.lang.String, boolean)","methodName":"assertTrue","lineNumber":["22"],"fullExpression":"assertTrue(\"Expected to pull of another item from iterator : \" + expected, iterator.hasNext())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["23"],"fullExpression":"assertEquals(expected, iterator.next())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(java.lang.String, boolean)","methodName":"assertFalse","lineNumber":["27"],"fullExpression":"assertFalse(\"Should be no more items in iterator\", iterator.hasNext())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/AbstractReferenceTest.java":[{"declaringType":"com.thoughtworks.acceptance.AbstractReferenceTest.TreeData","methodSignature":"add(com.thoughtworks.acceptance.AbstractReferenceTest.TreeData)","methodName":"add","lineNumber":["436"],"fullExpression":"parent.add(new TreeData(\"child\") {\n\n    private static final long serialVersionUID = 201107L;\n})","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/extended/PropertyEditorCapableConverterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(java.lang.String, boolean)","methodName":"assertTrue","lineNumber":["126"],"fullExpression":"assertTrue(\"Each thread should have made at least 1 conversion\", counter[0] >= threads.length)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"fail(java.lang.String)","methodName":"fail","lineNumber":["91"],"fullExpression":"fail(\"Unexpected InterruptedException\")","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, int, int)","methodName":"assertEquals","lineNumber":["125"],"fullExpression":"assertEquals(\"Exceptions have been thrown: \" + exceptions, 0, exceptions.size())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/core/util/XmlHeaderAwareReaderTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["31","32"],"fullExpression":"assertEquals(\"\", reader.readLine())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/objects/StandardObject.java":[{"declaringType":"org.apache.commons.lang3.builder.EqualsBuilder","methodSignature":"reflectionEquals(java.lang.Object, java.lang.Object, java.lang.String...)","methodName":"reflectionEquals","lineNumber":["27"],"fullExpression":"EqualsBuilder.reflectionEquals(this, obj)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.apache.commons.lang3.builder.CompareToBuilder","methodSignature":"reflectionCompare(java.lang.Object, java.lang.Object)","methodName":"reflectionCompare","lineNumber":["42"],"fullExpression":"CompareToBuilder.reflectionCompare(this, obj)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.apache.commons.lang3.builder.HashCodeBuilder","methodSignature":"reflectionHashCode(java.lang.Object, java.lang.String...)","methodName":"reflectionHashCode","lineNumber":["32"],"fullExpression":"HashCodeBuilder.reflectionHashCode(this)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.apache.commons.lang3.builder.ToStringBuilder","methodSignature":"reflectionToString(java.lang.Object)","methodName":"reflectionToString","lineNumber":["37"],"fullExpression":"ToStringBuilder.reflectionToString(this)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/JodaTimeTypesTest.java":[{"declaringType":"org.joda.time.DateTimeZone","methodSignature":"setDefault(org.joda.time.DateTimeZone)","methodName":"setDefault","lineNumber":["26"],"fullExpression":"DateTimeZone.setDefault(DateTimeZone.forID(\"America/Los_Angeles\"))","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.DateTimeZone","methodSignature":"forID(java.lang.String)","methodName":"forID","lineNumber":["26"],"fullExpression":"DateTimeZone.forID(\"America/Los_Angeles\")","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/JDom2ReaderTest.java":[{"declaringType":"org.jdom2.Element","methodSignature":"getChild(java.lang.String)","methodName":"getChild","lineNumber":["51"],"fullExpression":"document.getRootElement().getChild(\"small\")","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.Document","methodSignature":"getRootElement()","methodName":"getRootElement","lineNumber":["51"],"fullExpression":"document.getRootElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom2.input.SAXBuilder","methodSignature":"build(java.io.Reader)","methodName":"build","lineNumber":["50"],"fullExpression":"new SAXBuilder().build(new StringReader(xml))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/enums/EnumConverterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["29"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/XStream12CompatibilityTest.java":[{"declaringType":"com.thoughtworks.acceptance.XStream12CompatibilityTest.ChildClass","methodSignature":"toString()","methodName":"toString","lineNumber":["69"],"fullExpression":"child.toString()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/SerializationNestedWriteObjectsTest.java":[{"declaringType":"com.thoughtworks.acceptance.SerializationNestedWriteObjectsTest.Parent","methodSignature":"getName()","methodName":"getName","lineNumber":["119"],"fullExpression":"parent.getName()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.SerializationNestedWriteObjectsTest.Parent","methodSignature":"getChild()","methodName":"getChild","lineNumber":["120"],"fullExpression":"parent.getChild()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.SerializationNestedWriteObjectsTest.RawString","methodSignature":"getS()","methodName":"getS","lineNumber":["230"],"fullExpression":"rawString.getS()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.SerializationNestedWriteObjectsTest.Child","methodSignature":"getI()","methodName":"getI","lineNumber":["120"],"fullExpression":"parent.getChild().getI()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/core/util/DependencyInjectionFactoryTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["26","29","31","45","48","50","58","59","61","68","71","73","80","84","86","93","97","99","149","150","151","160","161","168","169","178","179","187","188"],"fullExpression":"assertTrue(exception instanceof ObjectAccessException)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["37","57"],"fullExpression":"assertEquals(\"\", string)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(boolean)","methodName":"assertFalse","lineNumber":["30","38","49","60","72","83","85","96","98","100","180","189"],"fullExpression":"assertFalse(used.get(1))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["147","148","158","159","166","167","176","177","185","186"],"fullExpression":"assertEquals(1, thing.getFirst())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertSame(java.lang.Object, java.lang.Object)","methodName":"assertSame","lineNumber":["146","157","165","175","184"],"fullExpression":"assertSame(this, thing.getTestCase())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/Dom4JReaderTest.java":[{"declaringType":"org.dom4j.DocumentHelper","methodSignature":"parseText(java.lang.String)","methodName":"parseText","lineNumber":["40"],"fullExpression":"DocumentHelper.parseText(\"\" + \"<big>\" + \"  <small>\" + \"    <tiny/>\" + \"  </small>\" + \"  <small-two>\" + \"  </small-two>\" + \"</big>\")","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Document","methodSignature":"getRootElement()","methodName":"getRootElement","lineNumber":["49"],"fullExpression":"document.getRootElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Element","methodSignature":"element(java.lang.String)","methodName":"element","lineNumber":["49"],"fullExpression":"document.getRootElement().element(\"small\")","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/ExternalizableTest.java":[{"declaringType":"com.thoughtworks.acceptance.ExternalizableTest.CircularExternalizable","methodSignature":"setParent(com.thoughtworks.acceptance.ExternalizableTest.CircularExternalizable)","methodName":"setParent","lineNumber":["118"],"fullExpression":"child.setParent(parent)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/core/util/ObjectIdDictionaryTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(java.lang.String, boolean)","methodName":"assertTrue","lineNumber":["56"],"fullExpression":"assertTrue(\"Dictionary did not shrink; \" + counter + \" distinct objects; \" + size + \" size\", dict.size() < 250)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/XomReader.java":[{"declaringType":"nu.xom.Element","methodSignature":"getAttributeCount()","methodName":"getAttributeCount","lineNumber":["99"],"fullExpression":"currentElement.getAttributeCount()","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.ParentNode","methodSignature":"getChild(int)","methodName":"getChild","lineNumber":["78"],"fullExpression":"currentElement.getChild(i)","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Attribute","methodSignature":"getQualifiedName()","methodName":"getQualifiedName","lineNumber":["104"],"fullExpression":"currentElement.getAttribute(index).getQualifiedName()","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Text","methodSignature":"getValue()","methodName":"getValue","lineNumber":["81"],"fullExpression":"text.getValue()","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Element","methodSignature":"getLocalName()","methodName":"getLocalName","lineNumber":["69","133"],"fullExpression":"currentElement.getLocalName()","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.ParentNode","methodSignature":"getChildCount()","methodName":"getChildCount","lineNumber":["76"],"fullExpression":"currentElement.getChildCount()","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Element","methodSignature":"getAttribute(int)","methodName":"getAttribute","lineNumber":["94","104"],"fullExpression":"currentElement.getAttribute(index)","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Element","methodSignature":"getChildElements()","methodName":"getChildElements","lineNumber":["109","119","129"],"fullExpression":"currentElement.getChildElements()","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Node","methodSignature":"getParent()","methodName":"getParent","lineNumber":["114"],"fullExpression":"currentElement.getParent()","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Document","methodSignature":"getRootElement()","methodName":"getRootElement","lineNumber":["32","46","64"],"fullExpression":"document.getRootElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Attribute","methodSignature":"getValue()","methodName":"getValue","lineNumber":["94"],"fullExpression":"currentElement.getAttribute(index).getValue()","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Elements","methodSignature":"get(int)","methodName":"get","lineNumber":["119","133"],"fullExpression":"currentElement.getChildElements().get(index)","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Elements","methodSignature":"size()","methodName":"size","lineNumber":["109","130"],"fullExpression":"currentElement.getChildElements().size()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/json/JettisonStaxWriter.java":[{"declaringType":"org.codehaus.jettison.mapped.MappedNamespaceConvention","methodSignature":"createKey(java.lang.String, java.lang.String, java.lang.String)","methodName":"createKey","lineNumber":["103"],"fullExpression":"convention.createKey(prefix, uri, qname.getLocalPart())","currentLayer":0,"declarationInfo":null},{"declaringType":"org.codehaus.jettison.AbstractXMLStreamWriter","methodSignature":"getSerializedAsArrays()","methodName":"getSerializedAsArrays","lineNumber":["123"],"fullExpression":"((AbstractXMLStreamWriter) out).getSerializedAsArrays()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/AbstractReaderTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["156","163"],"fullExpression":"assertEquals(expected, actual)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/AbstractAcceptanceTest.java":[{"declaringType":"com.thoughtworks.acceptance.AbstractAcceptanceTest","methodSignature":"assertArrayEquals(java.lang.Object, java.lang.Object)","methodName":"assertArrayEquals","lineNumber":["185"],"fullExpression":"assertArrayEquals(expected, actual)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertNull(java.lang.Object)","methodName":"assertNull","lineNumber":["181"],"fullExpression":"assertNull(actual)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractAcceptanceTest","methodSignature":"fail(java.lang.String, java.lang.Throwable)","methodName":"fail","lineNumber":["137","143","155","159"],"fullExpression":"fail(\"Serialization of object of type \" + object.getClass().getName() + \" failed because of reference to type \" + e.getMessage(), e)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractAcceptanceTest","methodSignature":"serialize(T)","methodName":"serialize","lineNumber":["165"],"fullExpression":"serialize(in)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertNotNull(java.lang.String, java.lang.Object)","methodName":"assertNotNull","lineNumber":["183"],"fullExpression":"assertNotNull(\"Should not be null\", actual)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractAcceptanceTest","methodSignature":"createDriver()","methodName":"createDriver","lineNumber":["46"],"fullExpression":"createDriver()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractAcceptanceTest","methodSignature":"deserialize(byte[])","methodName":"deserialize","lineNumber":["166"],"fullExpression":"deserialize(data)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractAcceptanceTest","methodSignature":"dumpBytes(byte[])","methodName":"dumpBytes","lineNumber":["204","204"],"fullExpression":"dumpBytes(expected)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["197"],"fullExpression":"assertEquals(Array.getLength(expected), Array.getLength(actual))","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractAcceptanceTest","methodSignature":"createXStream()","methodName":"createXStream","lineNumber":["43"],"fullExpression":"createXStream()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractAcceptanceTest","methodSignature":"assertObjectsEqual(java.lang.Object, java.lang.Object)","methodName":"assertObjectsEqual","lineNumber":["81","103","120","127","199"],"fullExpression":"assertObjectsEqual(root, resultRoot)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractAcceptanceTest","methodSignature":"normalizedXML(java.lang.String, java.lang.String[], java.lang.String, java.lang.String)","methodName":"normalizedXML","lineNumber":["76","77"],"fullExpression":"normalizedXML(toXML(root), new String[] { match }, templateSelect, sortSelect)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["77","99","125","204"],"fullExpression":"assertEquals(normalizedXML(xml, new String[] { match }, templateSelect, sortSelect), resultXml)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractAcceptanceTest","methodSignature":"toXML(java.lang.Object)","methodName":"toXML","lineNumber":["76","98","124"],"fullExpression":"toXML(root)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.AbstractAcceptanceTest","methodSignature":"assertBinarySerialization(java.lang.Object)","methodName":"assertBinarySerialization","lineNumber":["84","106"],"fullExpression":"assertBinarySerialization(root)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/extended/ToAttributedValueConverterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["60"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["92","112","135","162","182","205"],"fullExpression":"assertEquals(\"<software>XStream</software>\", writer.toString())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/XppReader.java":[{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getText()","methodName":"getText","lineNumber":["139"],"fullExpression":"parser.getText()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getAttributeCount()","methodName":"getAttributeCount","lineNumber":["154"],"fullExpression":"parser.getAttributeCount()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"setInput(java.io.Reader)","methodName":"setInput","lineNumber":["60","85"],"fullExpression":"parser.setInput(this.reader)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getAttributeName(int)","methodName":"getAttributeName","lineNumber":["159"],"fullExpression":"parser.getAttributeName(index)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getLineNumber()","methodName":"getLineNumber","lineNumber":["164"],"fullExpression":"parser.getLineNumber()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getName()","methodName":"getName","lineNumber":["134"],"fullExpression":"parser.getName()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getAttributeValue(int)","methodName":"getAttributeValue","lineNumber":["149"],"fullExpression":"parser.getAttributeValue(index)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"next()","methodName":"next","lineNumber":["113"],"fullExpression":"parser.next()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/SaxWriterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["69"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.megginson.sax.DataWriter","methodSignature":"setIndentStep(int)","methodName":"setIndentStep","lineNumber":["100","119"],"fullExpression":"outputter.setIndentStep(2)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"fail(java.lang.String)","methodName":"fail","lineNumber":["186","196","206","244"],"fullExpression":"fail(\"Null source object not rejected\")","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["107","128","147","178"],"fullExpression":"assertEquals(expected, buffer.toString())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/extended/FontConverterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["43"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["55","66","84","125"],"fullExpression":"assertEquals(in, out)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/JDomReader.java":[{"declaringType":"org.jdom.Element","methodSignature":"getChildren()","methodName":"getChildren","lineNumber":["90","95","131"],"fullExpression":"currentElement.getChildren()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.Attribute","methodSignature":"getValue()","methodName":"getValue","lineNumber":["115"],"fullExpression":"((Attribute) currentElement.getAttributes().get(index)).getValue()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.Document","methodSignature":"getRootElement()","methodName":"getRootElement","lineNumber":["35","49","67"],"fullExpression":"document.getRootElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.Content","methodSignature":"getParentElement()","methodName":"getParentElement","lineNumber":["78"],"fullExpression":"currentElement.getParentElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.Element","methodSignature":"getAttributes()","methodName":"getAttributes","lineNumber":["115","120","125"],"fullExpression":"currentElement.getAttributes()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.Attribute","methodSignature":"getQualifiedName()","methodName":"getQualifiedName","lineNumber":["125"],"fullExpression":"((Attribute) currentElement.getAttributes().get(index)).getQualifiedName()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.Element","methodSignature":"getName()","methodName":"getName","lineNumber":["100","135"],"fullExpression":"currentElement.getName()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.Element","methodSignature":"getText()","methodName":"getText","lineNumber":["105"],"fullExpression":"currentElement.getText()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/AttributeTest.java":[{"declaringType":"com.thoughtworks.acceptance.AttributeTest.One","methodSignature":"setID(com.thoughtworks.acceptance.AttributeTest.ID)","methodName":"setID","lineNumber":["144"],"fullExpression":"four.setID(new ID(\"1\"))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/ConversionExceptionTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["46","47","48","49"],"fullExpression":"assertEquals(\"message             : Message\", tokenizer.nextToken())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["35"],"fullExpression":"assertEquals(1, ends)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/QNameMappedConcreteClassesTest.java":[{"declaringType":"com.thoughtworks.acceptance.QNameMappedConcreteClassesTest","methodSignature":"getDefaultNS(java.lang.Class<?>)","methodName":"getDefaultNS","lineNumber":["131","132"],"fullExpression":"getDefaultNS(String.class)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/path/PathTrackingWriterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["29"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["44"],"fullExpression":"assertEquals(\"<foo att=\\\"something\\\">getValue</foo>\", out.toString())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/reflection/NativeFieldKeySorterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["43"],"fullExpression":"assertEquals(fieldOrder.length, fields.length)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["45"],"fullExpression":"assertEquals(\"Field[\" + i + ']', fieldOrder[i], fields[i].getName())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/persistence/FileStreamStrategyTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["112","119","120","126","176","191"],"fullExpression":"assertTrue(file.exists())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["31"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertNull(java.lang.Object)","methodName":"assertNull","lineNumber":["135","184"],"fullExpression":"assertNull(aCuteString)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["128","178"],"fullExpression":"assertEquals(\"aCuteString\", aCuteString)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(boolean)","methodName":"assertFalse","lineNumber":["129"],"fullExpression":"assertFalse(new File(baseDir, \"guilherme.xml\").exists())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"tearDown()","methodName":"tearDown","lineNumber":["40"],"fullExpression":"super.tearDown()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/core/util/OrderRetainingMapTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(java.lang.String, boolean)","methodName":"assertTrue","lineNumber":["24","30"],"fullExpression":"assertTrue(\"Expected to pull of another item from iterator : \" + expected, iterator.hasNext())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["43"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["25","33","34"],"fullExpression":"assertEquals(expected, iterator.next())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(java.lang.String, boolean)","methodName":"assertFalse","lineNumber":["38"],"fullExpression":"assertFalse(\"Should be no more items in iterator\", iterator.hasNext())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/converters/reflection/CGLIBEnhancedConverter.java":[{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setCallbackFilter(net.sf.cglib.proxy.CallbackFilter)","methodName":"setCallbackFilter","lineNumber":["388"],"fullExpression":"enhancer.setCallbackFilter(new ReverseEngineeredCallbackFilter(callbackIndexMap))","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setCallbacks(net.sf.cglib.proxy.Callback[])","methodName":"setCallbacks","lineNumber":["386"],"fullExpression":"enhancer.setCallbacks(callbacksToEnhance.toArray(new Callback[callbacksToEnhance.size()]))","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Factory","methodSignature":"getCallbacks()","methodName":"getCallbacks","lineNumber":["125","214"],"fullExpression":"((Factory) source).getCallbacks()","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"isEnhanced(java.lang.Class)","methodName":"isEnhanced","lineNumber":["99"],"fullExpression":"Enhancer.isEnhanced(type)","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setUseFactory(boolean)","methodName":"setUseFactory","lineNumber":["365"],"fullExpression":"enhancer.setUseFactory(useFactory)","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"create()","methodName":"create","lineNumber":["420"],"fullExpression":"enhancer.create()","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setInterfaces(java.lang.Class[])","methodName":"setInterfaces","lineNumber":["361"],"fullExpression":"enhancer.setInterfaces(interfaces.toArray(new Class[interfaces.size()]))","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Factory","methodSignature":"setCallbacks(net.sf.cglib.proxy.Callback[])","methodName":"setCallbacks","lineNumber":["232","291","422"],"fullExpression":"source.setCallbacks(reverseEngineeringCallbacks)","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setSuperclass(java.lang.Class)","methodName":"setSuperclass","lineNumber":["352"],"fullExpression":"enhancer.setSuperclass((Class<?>) context.convertAnother(null, Class.class))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/persistence/XmlArrayListTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["37","53","60","61","62","63","96"],"fullExpression":"assertTrue(strategy.map.containsValue(\"guilherme\"))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["30"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"fail()","methodName":"fail","lineNumber":["44","79"],"fullExpression":"fail()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["70","71","175","176"],"fullExpression":"assertEquals(\"guilherme\", strategy.map.get(new Integer(0)))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(boolean)","methodName":"assertFalse","lineNumber":["89","102"],"fullExpression":"assertFalse(strategy.map.containsValue(\"guilherme\"))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["144"],"fullExpression":"assertEquals(\"guilherme\", onlyValue)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/ImplicitTest.java":[{"declaringType":"com.thoughtworks.acceptance.ImplicitTest","methodSignature":"stripSeparator(java.lang.String)","methodName":"stripSeparator","lineNumber":["143","145","195","313"],"fullExpression":"stripSeparator(expected)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/NamedLocalElementsTest.java":[{"declaringType":"com.thoughtworks.acceptance.NamedLocalElementsTest","methodSignature":"test(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)","methodName":"test","lineNumber":["462","463","464","465","466","467","468","469","470"],"fullExpression":"test(null, \"key\", \"value\", true, true)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/json/JettisonMappedXmlDriver.java":[{"declaringType":"org.codehaus.jettison.mapped.Configuration","methodSignature":"setRootElementArrayWrapper(boolean)","methodName":"setRootElementArrayWrapper","lineNumber":["85"],"fullExpression":"config.setRootElementArrayWrapper(false)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.codehaus.jettison.AbstractXMLInputFactory","methodSignature":"createXMLStreamReader(java.io.InputStream)","methodName":"createXMLStreamReader","lineNumber":["105"],"fullExpression":"mif.createXMLStreamReader(input)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.codehaus.jettison.AbstractXMLInputFactory","methodSignature":"createXMLStreamReader(java.io.Reader)","methodName":"createXMLStreamReader","lineNumber":["96"],"fullExpression":"mif.createXMLStreamReader(reader)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.codehaus.jettison.mapped.MappedXMLOutputFactory","methodSignature":"createXMLStreamWriter(java.io.Writer)","methodName":"createXMLStreamWriter","lineNumber":["155","158"],"fullExpression":"mof.createXMLStreamWriter(writer)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.codehaus.jettison.AbstractXMLOutputFactory","methodSignature":"createXMLStreamWriter(java.io.OutputStream)","methodName":"createXMLStreamWriter","lineNumber":["169","172"],"fullExpression":"mof.createXMLStreamWriter(output)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.codehaus.jettison.AbstractXMLInputFactory","methodSignature":"createXMLStreamReader(java.lang.String, java.io.InputStream)","methodName":"createXMLStreamReader","lineNumber":["116","136"],"fullExpression":"mif.createXMLStreamReader(in.toExternalForm(), instream)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/javabean/PropertyDictionaryTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["26"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["90","91","92","93","94","131","132","133","134","135","136","137"],"fullExpression":"assertEquals(\"URL\", propertyDesc.next().getName())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(java.lang.String, boolean)","methodName":"assertFalse","lineNumber":["95","138"],"fullExpression":"assertFalse(\"No more fields should be present\", propertyDesc.hasNext())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/XStreamTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["53"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertNotNull(java.lang.Object)","methodName":"assertNotNull","lineNumber":["254"],"fullExpression":"assertNotNull(person.element)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"fail(java.lang.String)","methodName":"fail","lineNumber":["377","389"],"fullExpression":"fail(\"Closing and flushing should throw a StreamException\")","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Element","methodSignature":"getText()","methodName":"getText","lineNumber":["255"],"fullExpression":"person.element.element(\"foo\").getText()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["87","180","216","252","253","255","306","331"],"fullExpression":"assertEquals(\"custom value\", u.aStr)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["206","307","332","400","407"],"fullExpression":"assertEquals(obj.field, result.field)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Element","methodSignature":"element(java.lang.String)","methodName":"element","lineNumber":["255"],"fullExpression":"person.element.element(\"foo\")","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertSame(java.lang.Object, java.lang.Object)","methodName":"assertSame","lineNumber":["305"],"fullExpression":"assertSame(component0, component1)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/Dom4JWriter.java":[{"declaringType":"org.dom4j.Node","methodSignature":"setText(java.lang.String)","methodName":"setText","lineNumber":["104"],"fullExpression":"top().setText(text)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Branch","methodSignature":"add(org.dom4j.Element)","methodName":"add","lineNumber":["97"],"fullExpression":"top().add(element)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/annotations/ImplicitCollectionTest.java":[{"declaringType":"com.thoughtworks.acceptance.annotations.ImplicitCollectionTest.ImplicitRootOne","methodSignature":"getValues()","methodName":"getValues","lineNumber":["48","49"],"fullExpression":"implicitRoot.getValues()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.annotations.ImplicitCollectionTest.ImplicitRootTwo","methodSignature":"getValues()","methodName":"getValues","lineNumber":["60","61"],"fullExpression":"implicitRoot.getValues()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/extended/ToStringConverterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["48","64"],"fullExpression":"assertTrue(converter.fromString(\"hello\") instanceof Foo)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"fail(java.lang.String)","methodName":"fail","lineNumber":["40","61"],"fullExpression":"fail(\"shoulda barfed\")","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["49"],"fullExpression":"assertEquals(\"hello\", ((Foo) converter.fromString(\"hello\")).foo)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/extended/GregorianCalendarConverterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["31"],"fullExpression":"assertEquals(cal, serialized)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/XomReaderTest.java":[{"declaringType":"nu.xom.Document","methodSignature":"getRootElement()","methodName":"getRootElement","lineNumber":["46"],"fullExpression":"document.getRootElement()","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Element","methodSignature":"getFirstChildElement(java.lang.String)","methodName":"getFirstChildElement","lineNumber":["46"],"fullExpression":"document.getRootElement().getFirstChildElement(\"small\")","currentLayer":0,"declarationInfo":null},{"declaringType":"nu.xom.Builder","methodSignature":"build(java.io.Reader)","methodName":"build","lineNumber":["45"],"fullExpression":"new Builder().build(new StringReader(xml))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/enums/EnumToStringConverterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["30"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/extended/ISO8601GregorianCalendarConverterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["38"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(java.lang.String, boolean)","methodName":"assertTrue","lineNumber":["360"],"fullExpression":"assertTrue(\"Nothing succeded\", results.contains(\"PASS\"))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["73"],"fullExpression":"assertEquals(iso8601, converterXML)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(long, long)","methodName":"assertEquals","lineNumber":["318"],"fullExpression":"assertEquals(timeInMoscow.getTimeInMillis(), out.getTimeInMillis())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"tearDown()","methodName":"tearDown","lineNumber":["53"],"fullExpression":"super.tearDown()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.Object, java.lang.Object)","methodName":"assertEquals","lineNumber":["65","76","87","95","98","107","110","119","122","130","133","141","144","152","160","168","176","179","187","190","198","201","209","212","220","223","231","239","247","257","260","263","266","268","276","279","282","285","287","295","298","307","321","376"],"fullExpression":"assertEquals(in.getTime(), out.getTime())","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.base.AbstractDateTime","methodSignature":"toString()","methodName":"toString","lineNumber":["71"],"fullExpression":"new DateTime(in).toString()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(java.lang.String, boolean)","methodName":"assertFalse","lineNumber":["361"],"fullExpression":"assertFalse(\"At least one attempt failed\", results.contains(\"FAIL\"))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/json/JsonWriterFormatTest.java":[{"declaringType":"junit.framework.TestSuite","methodSignature":"addTest(junit.framework.Test)","methodName":"addTest","lineNumber":["380"],"fullExpression":"suite.addTest(new JsonWriterFormatTest(name, target, result, mode, format))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/CglibCompatibilityTest.java":[{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setCallbackFilter(net.sf.cglib.proxy.CallbackFilter)","methodName":"setCallbackFilter","lineNumber":["211","242"],"fullExpression":"enhancer.setCallbackFilter(new CallbackFilter() {\n\n    int i = 1;\n\n    @Override\n    public int accept(final Method method) {\n        if (method.getDeclaringClass() == Runnable.class) {\n            return 0;\n        }\n        return i < 3 ? i++ : i;\n    }\n})","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.MethodProxy","methodSignature":"invokeSuper(java.lang.Object, java.lang.Object[])","methodName":"invokeSuper","lineNumber":["310"],"fullExpression":"proxy.invokeSuper(obj, args)","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setCallbacks(net.sf.cglib.proxy.Callback[])","methodName":"setCallbacks","lineNumber":["207","238"],"fullExpression":"enhancer.setCallbacks(new Callback[] { new DelegatingInterceptor<>(null), new DelegatingHandler<>(null), new DelegatingDispatcher<>(null), NoOp.INSTANCE })","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Factory","methodSignature":"getCallbacks()","methodName":"getCallbacks","lineNumber":["228"],"fullExpression":"deserialized.getCallbacks()","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setUseFactory(boolean)","methodName":"setUseFactory","lineNumber":["110","138","223","254","321"],"fullExpression":"enhancer.setUseFactory(true)","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setSerialVersionUID(java.lang.Long)","methodName":"setSerialVersionUID","lineNumber":["286"],"fullExpression":"enhancer.setSerialVersionUID(new Long(20060804L))","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"create()","methodName":"create","lineNumber":["112","140","167","188","224","255","268","287","323","366","392"],"fullExpression":"enhancer.create()","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setInterfaces(java.lang.Class[])","methodName":"setInterfaces","lineNumber":["166","187","222","253","285","365"],"fullExpression":"enhancer.setInterfaces(new Class[] { Runnable.class })","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setSuperclass(java.lang.Class)","methodName":"setSuperclass","lineNumber":["108","136","164","266","319","389"],"fullExpression":"enhancer.setSuperclass(HashMap.class)","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Enhancer","methodSignature":"setCallback(net.sf.cglib.proxy.Callback)","methodName":"setCallback","lineNumber":["109","137","165","186","267","284","320","364","390"],"fullExpression":"enhancer.setCallback(new DelegatingHandler<>(new HashMap<String, Object>()))","currentLayer":0,"declarationInfo":null},{"declaringType":"net.sf.cglib.proxy.Factory","methodSignature":"setCallback(int, net.sf.cglib.proxy.Callback)","methodName":"setCallback","lineNumber":["269"],"fullExpression":"((Factory) orig).setCallback(0, null)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/XStreamerTest.java":[{"declaringType":"com.thoughtworks.acceptance.XStreamerTest","methodSignature":"testCanConvertAnotherInstance()","methodName":"testCanConvertAnotherInstance","lineNumber":["81"],"fullExpression":"testCanConvertAnotherInstance()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/xml/AbstractDocumentWriterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["133"],"fullExpression":"assertEquals(1, nodes.size())","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/enums/EnumMapperTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["31"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/persistence/FilePersistenceStrategyTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["120","127","128","134","184","199"],"fullExpression":"assertTrue(file.isFile())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["33"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertNull(java.lang.Object)","methodName":"assertNull","lineNumber":["143","192"],"fullExpression":"assertNull(aCuteString)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["136","186"],"fullExpression":"assertEquals(\"aCuteString\", aCuteString)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertFalse(boolean)","methodName":"assertFalse","lineNumber":["137"],"fullExpression":"assertFalse(new File(baseDir, \"string@guilherme.xml\").exists())","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"tearDown()","methodName":"tearDown","lineNumber":["42"],"fullExpression":"super.tearDown()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/ExtendedTypesTest.java":[{"declaringType":"com.thoughtworks.acceptance.ExtendedTypesTest","methodSignature":"assertFilesBothWay(java.io.File, java.lang.String)","methodName":"assertFilesBothWay","lineNumber":["114","121"],"fullExpression":"assertFilesBothWay(absFile, expectedXml)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/core/util/ISO8601JodaTimeConverter.java":[{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"hourMinuteSecondMillis()","methodName":"hourMinuteSecondMillis","lineNumber":["78"],"fullExpression":"//\nISODateTimeFormat.hourMinuteSecondMillis()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"timeNoMillis()","methodName":"timeNoMillis","lineNumber":["58"],"fullExpression":"//\nISODateTimeFormat.timeNoMillis()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"hour()","methodName":"hour","lineNumber":["74"],"fullExpression":"//\nISODateTimeFormat.hour()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.DateTimeFormatter","methodSignature":"parseDateTime(java.lang.String)","methodName":"parseDateTime","lineNumber":["98","110"],"fullExpression":"formatter.parseDateTime(str)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.DateTimeZone","methodSignature":"forTimeZone(java.util.TimeZone)","methodName":"forTimeZone","lineNumber":["106"],"fullExpression":"DateTimeZone.forTimeZone(TimeZone.getDefault())","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicDateTime()","methodName":"basicDateTime","lineNumber":["45"],"fullExpression":"//\nISODateTimeFormat.basicDateTime()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"weekDateTimeNoMillis()","methodName":"weekDateTimeNoMillis","lineNumber":["62"],"fullExpression":"//\nISODateTimeFormat.weekDateTimeNoMillis()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"yearMonth()","methodName":"yearMonth","lineNumber":["82"],"fullExpression":"//\nISODateTimeFormat.yearMonth()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"year()","methodName":"year","lineNumber":["81"],"fullExpression":"//\nISODateTimeFormat.year()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicDate()","methodName":"basicDate","lineNumber":["65"],"fullExpression":"//\n//\nISODateTimeFormat.basicDate()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"dateHourMinuteSecondFraction()","methodName":"dateHourMinuteSecondFraction","lineNumber":["72"],"fullExpression":"//\nISODateTimeFormat.dateHourMinuteSecondFraction()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"time()","methodName":"time","lineNumber":["57"],"fullExpression":"//\nISODateTimeFormat.time()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"weekyearWeek()","methodName":"weekyearWeek","lineNumber":["85"],"fullExpression":"//\nISODateTimeFormat.weekyearWeek()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicOrdinalDateTimeNoMillis()","methodName":"basicOrdinalDateTimeNoMillis","lineNumber":["48"],"fullExpression":"//\nISODateTimeFormat.basicOrdinalDateTimeNoMillis()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"hourMinuteSecondFraction()","methodName":"hourMinuteSecondFraction","lineNumber":["77"],"fullExpression":"//\nISODateTimeFormat.hourMinuteSecondFraction()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"ordinalDateTimeNoMillis()","methodName":"ordinalDateTimeNoMillis","lineNumber":["56"],"fullExpression":"//\nISODateTimeFormat.ordinalDateTimeNoMillis()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"tTime()","methodName":"tTime","lineNumber":["59"],"fullExpression":"//\nISODateTimeFormat.tTime()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"weekDateTime()","methodName":"weekDateTime","lineNumber":["61"],"fullExpression":"//\nISODateTimeFormat.weekDateTime()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.DateTimeFormatter","methodSignature":"withZone(org.joda.time.DateTimeZone)","methodName":"withZone","lineNumber":["109"],"fullExpression":"element.withZone(dateTimeZone)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicOrdinalDateTime()","methodName":"basicOrdinalDateTime","lineNumber":["47"],"fullExpression":"//\nISODateTimeFormat.basicOrdinalDateTime()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.base.AbstractDateTime","methodSignature":"toGregorianCalendar()","methodName":"toGregorianCalendar","lineNumber":["99","111"],"fullExpression":"dt.toGregorianCalendar()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"hourMinute()","methodName":"hourMinute","lineNumber":["75"],"fullExpression":"//\nISODateTimeFormat.hourMinute()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"yearMonthDay()","methodName":"yearMonthDay","lineNumber":["83"],"fullExpression":"//\nISODateTimeFormat.yearMonthDay()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"hourMinuteSecond()","methodName":"hourMinuteSecond","lineNumber":["76"],"fullExpression":"//\nISODateTimeFormat.hourMinuteSecond()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicWeekDateTimeNoMillis()","methodName":"basicWeekDateTimeNoMillis","lineNumber":["54"],"fullExpression":"//\nISODateTimeFormat.basicWeekDateTimeNoMillis()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"weekDate()","methodName":"weekDate","lineNumber":["80"],"fullExpression":"//\nISODateTimeFormat.weekDate()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"ordinalDate()","methodName":"ordinalDate","lineNumber":["79"],"fullExpression":"//\nISODateTimeFormat.ordinalDate()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicTTimeNoMillis()","methodName":"basicTTimeNoMillis","lineNumber":["52"],"fullExpression":"//\nISODateTimeFormat.basicTTimeNoMillis()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"dateHourMinuteSecondMillis()","methodName":"dateHourMinuteSecondMillis","lineNumber":["73"],"fullExpression":"//\nISODateTimeFormat.dateHourMinuteSecondMillis()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicTTime()","methodName":"basicTTime","lineNumber":["51"],"fullExpression":"//\nISODateTimeFormat.basicTTime()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"tTimeNoMillis()","methodName":"tTimeNoMillis","lineNumber":["60"],"fullExpression":"//\nISODateTimeFormat.tTimeNoMillis()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.base.AbstractInstant","methodSignature":"toString(org.joda.time.format.DateTimeFormatter)","methodName":"toString","lineNumber":["126"],"fullExpression":"dt.toString(formattersUTC[0])","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicWeekDateTime()","methodName":"basicWeekDateTime","lineNumber":["53"],"fullExpression":"//\nISODateTimeFormat.basicWeekDateTime()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"dateHourMinuteSecond()","methodName":"dateHourMinuteSecond","lineNumber":["71"],"fullExpression":"//\nISODateTimeFormat.dateHourMinuteSecond()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicOrdinalDate()","methodName":"basicOrdinalDate","lineNumber":["66"],"fullExpression":"//\nISODateTimeFormat.basicOrdinalDate()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicTime()","methodName":"basicTime","lineNumber":["49"],"fullExpression":"//\nISODateTimeFormat.basicTime()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"dateHour()","methodName":"dateHour","lineNumber":["69"],"fullExpression":"//\nISODateTimeFormat.dateHour()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicDateTimeNoMillis()","methodName":"basicDateTimeNoMillis","lineNumber":["46"],"fullExpression":"//\nISODateTimeFormat.basicDateTimeNoMillis()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicWeekDate()","methodName":"basicWeekDate","lineNumber":["67"],"fullExpression":"//\nISODateTimeFormat.basicWeekDate()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"date()","methodName":"date","lineNumber":["68"],"fullExpression":"//\nISODateTimeFormat.date()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"weekyear()","methodName":"weekyear","lineNumber":["84"],"fullExpression":"//\nISODateTimeFormat.weekyear()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"weekyearWeekDay()","methodName":"weekyearWeekDay","lineNumber":["86"],"fullExpression":"//\nISODateTimeFormat.weekyearWeekDay()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"ordinalDateTime()","methodName":"ordinalDateTime","lineNumber":["55"],"fullExpression":"//\nISODateTimeFormat.ordinalDateTime()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"dateHourMinute()","methodName":"dateHourMinute","lineNumber":["70"],"fullExpression":"//\nISODateTimeFormat.dateHourMinute()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"dateTimeNoMillis()","methodName":"dateTimeNoMillis","lineNumber":["44"],"fullExpression":"//\nISODateTimeFormat.dateTimeNoMillis()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"dateTime()","methodName":"dateTime","lineNumber":["43"],"fullExpression":"//\n//\nISODateTimeFormat.dateTime()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.joda.time.format.ISODateTimeFormat","methodSignature":"basicTimeNoMillis()","methodName":"basicTimeNoMillis","lineNumber":["50"],"fullExpression":"//\nISODateTimeFormat.basicTimeNoMillis()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/xppdom/XppDom.java":[{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getText()","methodName":"getText","lineNumber":["211"],"fullExpression":"parser.getText()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getAttributeCount()","methodName":"getAttributeCount","lineNumber":["202"],"fullExpression":"parser.getAttributeCount()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getAttributeName(int)","methodName":"getAttributeName","lineNumber":["204"],"fullExpression":"parser.getAttributeName(i)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getName()","methodName":"getName","lineNumber":["188"],"fullExpression":"parser.getName()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getAttributeValue(int)","methodName":"getAttributeValue","lineNumber":["205"],"fullExpression":"parser.getAttributeValue(i)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"next()","methodName":"next","lineNumber":["230"],"fullExpression":"parser.next()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"getEventType()","methodName":"getEventType","lineNumber":["185"],"fullExpression":"parser.getEventType()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/core/util/CloneablesTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["38"],"fullExpression":"assertTrue(e.getCause() instanceof NoSuchMethodException)","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(int, int)","methodName":"assertEquals","lineNumber":["54","55"],"fullExpression":"assertEquals(1, clone.length)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/objects/SampleDynamicProxy.java":[{"declaringType":"com.thoughtworks.acceptance.objects.SampleDynamicProxy","methodSignature":"equalsInterfaceOne(java.lang.Object)","methodName":"equalsInterfaceOne","lineNumber":["60"],"fullExpression":"equalsInterfaceOne(obj)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.objects.SampleDynamicProxy","methodSignature":"equalsInterfaceTwo(java.lang.Object)","methodName":"equalsInterfaceTwo","lineNumber":["60"],"fullExpression":"equalsInterfaceTwo(obj)","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.objects.SampleDynamicProxy","methodSignature":"equals(java.lang.Object)","methodName":"equals","lineNumber":["48"],"fullExpression":"equals(args[0])","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.objects.SampleDynamicProxy.InterfaceTwo","methodSignature":"doSomething()","methodName":"doSomething","lineNumber":["78"],"fullExpression":"interfaceTwo.doSomething()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.objects.SampleDynamicProxy.InterfaceOne","methodSignature":"doSomething()","methodName":"doSomething","lineNumber":["69"],"fullExpression":"interfaceOne.doSomething()","currentLayer":0,"declarationInfo":null},{"declaringType":"com.thoughtworks.acceptance.objects.SampleDynamicProxy","methodSignature":"newInstance(java.lang.Object)","methodName":"newInstance","lineNumber":["37"],"fullExpression":"newInstance(\"hello\")","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/javabean/JavaBeanConverterTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"fail(java.lang.String)","methodName":"fail","lineNumber":["512"],"fullExpression":"fail(\"Expected exception\")","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["205","239","242","303","340","355","418"],"fullExpression":"assertEquals(expected, result)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/converters/enums/EnumMapConverterTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["27"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/DefaultImplementationTest.java":[{"declaringType":"com.thoughtworks.acceptance.DefaultImplementationTest.Farm","methodSignature":"add(com.thoughtworks.acceptance.DefaultImplementationTest.Animal)","methodName":"add","lineNumber":["67","68"],"fullExpression":"farm.add(new Animal(\"Cow\"))","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/path/PathTrackerTest.java":[{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["23"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/xppdom/Xpp3DomBuilder.java":[{"declaringType":"org.xmlpull.v1.XmlPullParser","methodSignature":"setInput(java.io.Reader)","methodName":"setInput","lineNumber":["34"],"fullExpression":"parser.setInput(reader)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/json/JsonHierarchicalStreamDriverTest.java":[{"declaringType":"junit.framework.Assert","methodSignature":"assertTrue(boolean)","methodName":"assertTrue","lineNumber":["244","245","246","247","248"],"fullExpression":"assertTrue(json.startsWith(normalizeExpectation(expectedMenuStart)))","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.TestCase","methodSignature":"setUp()","methodName":"setUp","lineNumber":["53"],"fullExpression":"super.setUp()","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"fail(java.lang.String)","methodName":"fail","lineNumber":["68","77"],"fullExpression":"fail(\"should have barfed\")","currentLayer":0,"declarationInfo":null},{"declaringType":"junit.framework.Assert","methodSignature":"assertEquals(java.lang.String, java.lang.String)","methodName":"assertEquals","lineNumber":["492","521","557"],"fullExpression":"assertEquals(expected, actual)","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/Dom4JXmlWriter.java":[{"declaringType":"org.xml.sax.helpers.AttributesImpl","methodSignature":"getLength()","methodName":"getLength","lineNumber":["101"],"fullExpression":"attributes.getLength()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xml.sax.helpers.AttributesImpl","methodSignature":"getValue(int)","methodName":"getValue","lineNumber":["102"],"fullExpression":"attributes.getValue(i)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.XMLWriter","methodSignature":"characters(char[], int, int)","methodName":"characters","lineNumber":["83"],"fullExpression":"writer.characters(value, 0, value.length)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.XMLWriter","methodSignature":"write(org.dom4j.Element)","methodName":"write","lineNumber":["104"],"fullExpression":"writer.write(element)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.XMLWriter","methodSignature":"flush()","methodName":"flush","lineNumber":["120","130"],"fullExpression":"writer.flush()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.XMLWriter","methodSignature":"startDocument()","methodName":"startDocument","lineNumber":["48"],"fullExpression":"writer.startDocument()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xml.sax.helpers.AttributesImpl","methodSignature":"getQName(int)","methodName":"getQName","lineNumber":["102"],"fullExpression":"attributes.getQName(i)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.io.XMLWriter","methodSignature":"endDocument()","methodName":"endDocument","lineNumber":["129"],"fullExpression":"writer.endDocument()","currentLayer":0,"declarationInfo":null},{"declaringType":"org.dom4j.Element","methodSignature":"addAttribute(java.lang.String, java.lang.String)","methodName":"addAttribute","lineNumber":["102"],"fullExpression":"element.addAttribute(attributes.getQName(i), attributes.getValue(i))","currentLayer":0,"declarationInfo":null},{"declaringType":"org.xml.sax.helpers.AttributesImpl","methodSignature":"clear()","methodName":"clear","lineNumber":["105","139"],"fullExpression":"attributes.clear()","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/xstream/io/path/PathTest.java":[{"declaringType":"junit.framework.TestSuite","methodSignature":"addTest(junit.framework.Test)","methodName":"addTest","lineNumber":["93"],"fullExpression":"suite.addTest(new TestCase(testName) {\n\n    @Override\n    protected void runTest() throws Throwable {\n        assertEquals(new Path(relative), new Path(from).relativeTo(new Path(to)));\n        assertEquals(new Path(to), new Path(from).apply(new Path(relative)));\n        assertEquals(isAncestor, new Path(from).isAncestor(new Path(to)));\n        assertEquals(new Path(relative), new Path(explicit));\n        assertEquals(new Path(relative).explicit(), explicit);\n        assertEquals(relative, new Path(explicit).toString());\n    }\n})","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/test/com/thoughtworks/acceptance/annotations/ParametrizedConverterTest.java":[{"declaringType":"com.thoughtworks.acceptance.annotations.ParametrizedConverterTest.SimpleBean","methodSignature":"setName(java.lang.String)","methodName":"setName","lineNumber":["216"],"fullExpression":"value.setName(\"joe\")","currentLayer":0,"declarationInfo":null}],"Application/xstream-master/xstream/src/java/com/thoughtworks/xstream/io/xml/JDomWriter.java":[{"declaringType":"org.jdom.Element","methodSignature":"addContent(org.jdom.Content)","methodName":"addContent","lineNumber":["98","105"],"fullExpression":"parent.addContent(element)","currentLayer":0,"declarationInfo":null},{"declaringType":"org.jdom.JDOMFactory","methodSignature":"text(java.lang.String)","methodName":"text","lineNumber":["105"],"fullExpression":"documentFactory.text(text)","currentLayer":0,"declarationInfo":null}]}